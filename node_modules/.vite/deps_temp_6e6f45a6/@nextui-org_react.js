import {
  Cn,
  O,
  init_compat_module,
  k as k2,
  sn,
  x,
  z
} from "./chunk-RPYJWBP4.js";
import {
  A,
  F,
  T,
  _,
  h,
  p,
  q,
  s,
  y
} from "./chunk-XXAPVALA.js";
import {
  o
} from "./chunk-5ZAY3AV2.js";
import {
  G,
  k
} from "./chunk-VZDQBJS2.js";
import "./chunk-OL3AADLO.js";

// node_modules/@nextui-org/react/esm/utils/prop-types.js
var tuple = (...e15) => e15;
tuple("xs", "sm", "md", "lg", "xl");
var normalColors = tuple("default", "primary", "secondary", "success", "warning", "error", "gradient");
var simpleColors = tuple("default", "primary", "secondary", "success", "warning", "error");
var extendedColors = tuple("default", "primary", "secondary", "success", "warning", "error", "invert", "gradient");
var extendedColorsNoGradient = tuple("default", "primary", "secondary", "success", "warning", "error", "invert");
var extraColors = tuple("default", "primary", "secondary", "success", "warning", "error", "dark", "lite", "alert", "purple", "violet", "gradient", "cyan");
var normalLoaders = tuple("default", "points", "points-opacity", "gradient", "spinner");
var normalWeights = tuple("light", "normal", "bold", "extrabold", "black");
var textWeights = tuple("normal", "bold", "lighter", "bolder", "inherit", "initial", "revert", "unset");
var textTransforms = tuple("none", "capitalize", "uppercase", "lowercase", "full-width", "full-size-kana", "inherit", "initial", "revert", "unset");
tuple("default", "slient", "prevent"), tuple("hover", "click"), tuple("top", "topStart", "topEnd", "left", "leftStart", "leftEnd", "bottom", "bottomStart", "bottomEnd", "right", "rightStart", "rightEnd"), tuple("static", "relative", "absolute", "fixed", "sticky", "inherit", "initial", "revert", "unset"), tuple("contain", "cover", "fill", "none", "scale-down", "inherit", "initial", "revert", "unset"), tuple("start", "center", "end", "left", "right"), tuple("flex-start", "center", "flex-end", "space-between", "space-around", "space-evenly"), tuple("flex-start", "flex-end", "center", "stretch", "baseline"), tuple("stretch", "center", "flex-start", "flex-end", "space-between", "space-around"), tuple("row", "row-reverse", "column", "column-reverse"), tuple("nowrap", "wrap", "wrap-reverse"), tuple("flex", "block", "grid", "inline", "inline-block", "inline-flex", "inline-grid"), tuple("left", "right"), tuple("start", "center", "end");
var excludedInputPropsForTextarea = tuple("clearable", "as", "rounded", "labelLeft", "labelRight", "contentLeft", "contentRight", "contentClickable", "contentLeftStyling", "contentRightStyling", "onContentClick", "onClearClick", "css");
tuple("toggle", "replace"), tuple("none", "single", "multiple"), tuple("flat", "light", "solid", "shadow"), tuple("flat", "bordered", "shadow");

// node_modules/@nextui-org/react/esm/use-current-state/use-current-state.js
init_compat_module();
var use_current_state_default = (e15) => {
  const [o14, c15] = h(() => "function" == typeof e15 ? e15() : e15), u9 = _(e15);
  p(() => {
    u9.current = o14;
  }, [o14]);
  return [o14, (t9) => {
    const r14 = "function" == typeof t9 ? t9(u9.current) : t9;
    u9.current = r14, c15(r14);
  }, u9];
};

// node_modules/@nextui-org/react/esm/use-current-state/index.js
var use_current_state_default2 = use_current_state_default;

// node_modules/@nextui-org/react/esm/use-real-shape/use-real-shape.js
init_compat_module();
var i = (t9, e15) => {
  if (!t9)
    return 0;
  const i13 = t9.includes("px") ? +t9.split("px")[0] : t9.includes("%") ? +t9.split("%")[0] * e15 * 0.01 : t9;
  return Number.isNaN(+i13) ? 0 : +i13;
};
var getRealShape = (t9) => {
  if (!t9 || "undefined" == typeof window)
    return { width: 0, height: 0 };
  const e15 = t9.getBoundingClientRect(), { width: h4, height: n15 } = window.getComputedStyle(t9);
  return { width: i(`${h4}`, e15.width), height: i(`${n15}`, e15.height) };
};
var use_real_shape_default = (i13) => {
  const [h4, n15] = h({ width: 0, height: 0 }), r14 = () => {
    const { width: t9, height: e15 } = getRealShape(i13.current);
    n15({ width: t9, height: e15 });
  };
  return p(() => r14(), [i13.current]), [h4, r14];
};

// node_modules/@nextui-org/react/esm/use-real-shape/index.js
var use_real_shape_default2 = use_real_shape_default;

// node_modules/@nextui-org/react/esm/use-resize/use-resize.js
init_compat_module();
var use_resize_default = (r14, t9 = true) => {
  p(() => {
    const e15 = () => r14();
    return t9 && e15(), window.addEventListener("resize", e15), () => window.removeEventListener("resize", e15);
  }, []);
};

// node_modules/@nextui-org/react/esm/use-resize/index.js
var use_resize_default2 = use_resize_default;

// node_modules/@nextui-org/react/esm/use-theme/use-theme.js
init_compat_module();

// node_modules/@nextui-org/react/esm/theme/theme-context.js
init_compat_module();

// node_modules/@stitches/react/dist/index.mjs
init_compat_module();
var e = "colors";
var t = "sizes";
var r = "space";
var n = { gap: r, gridGap: r, columnGap: r, gridColumnGap: r, rowGap: r, gridRowGap: r, inset: r, insetBlock: r, insetBlockEnd: r, insetBlockStart: r, insetInline: r, insetInlineEnd: r, insetInlineStart: r, margin: r, marginTop: r, marginRight: r, marginBottom: r, marginLeft: r, marginBlock: r, marginBlockEnd: r, marginBlockStart: r, marginInline: r, marginInlineEnd: r, marginInlineStart: r, padding: r, paddingTop: r, paddingRight: r, paddingBottom: r, paddingLeft: r, paddingBlock: r, paddingBlockEnd: r, paddingBlockStart: r, paddingInline: r, paddingInlineEnd: r, paddingInlineStart: r, top: r, right: r, bottom: r, left: r, scrollMargin: r, scrollMarginTop: r, scrollMarginRight: r, scrollMarginBottom: r, scrollMarginLeft: r, scrollMarginX: r, scrollMarginY: r, scrollMarginBlock: r, scrollMarginBlockEnd: r, scrollMarginBlockStart: r, scrollMarginInline: r, scrollMarginInlineEnd: r, scrollMarginInlineStart: r, scrollPadding: r, scrollPaddingTop: r, scrollPaddingRight: r, scrollPaddingBottom: r, scrollPaddingLeft: r, scrollPaddingX: r, scrollPaddingY: r, scrollPaddingBlock: r, scrollPaddingBlockEnd: r, scrollPaddingBlockStart: r, scrollPaddingInline: r, scrollPaddingInlineEnd: r, scrollPaddingInlineStart: r, fontSize: "fontSizes", background: e, backgroundColor: e, backgroundImage: e, borderImage: e, border: e, borderBlock: e, borderBlockEnd: e, borderBlockStart: e, borderBottom: e, borderBottomColor: e, borderColor: e, borderInline: e, borderInlineEnd: e, borderInlineStart: e, borderLeft: e, borderLeftColor: e, borderRight: e, borderRightColor: e, borderTop: e, borderTopColor: e, caretColor: e, color: e, columnRuleColor: e, fill: e, outline: e, outlineColor: e, stroke: e, textDecorationColor: e, fontFamily: "fonts", fontWeight: "fontWeights", lineHeight: "lineHeights", letterSpacing: "letterSpacings", blockSize: t, minBlockSize: t, maxBlockSize: t, inlineSize: t, minInlineSize: t, maxInlineSize: t, width: t, minWidth: t, maxWidth: t, height: t, minHeight: t, maxHeight: t, flexBasis: t, gridTemplateColumns: t, gridTemplateRows: t, borderWidth: "borderWidths", borderTopWidth: "borderWidths", borderRightWidth: "borderWidths", borderBottomWidth: "borderWidths", borderLeftWidth: "borderWidths", borderStyle: "borderStyles", borderTopStyle: "borderStyles", borderRightStyle: "borderStyles", borderBottomStyle: "borderStyles", borderLeftStyle: "borderStyles", borderRadius: "radii", borderTopLeftRadius: "radii", borderTopRightRadius: "radii", borderBottomRightRadius: "radii", borderBottomLeftRadius: "radii", boxShadow: "shadows", textShadow: "shadows", transition: "transitions", zIndex: "zIndices" };
var i2 = (e15, t9) => "function" == typeof t9 ? { "()": Function.prototype.toString.call(t9) } : t9;
var o2 = () => {
  const e15 = /* @__PURE__ */ Object.create(null);
  return (t9, r14, ...n15) => {
    const o14 = ((e16) => JSON.stringify(e16, i2))(t9);
    return o14 in e15 ? e15[o14] : e15[o14] = r14(t9, ...n15);
  };
};
var l = Symbol.for("sxs.internal");
var s2 = (e15, t9) => Object.defineProperties(e15, Object.getOwnPropertyDescriptors(t9));
var a = (e15) => {
  for (const t9 in e15)
    return true;
  return false;
};
var { hasOwnProperty: c } = Object.prototype;
var d = (e15) => e15.includes("-") ? e15 : e15.replace(/[A-Z]/g, (e16) => "-" + e16.toLowerCase());
var g = /\s+(?![^()]*\))/;
var p2 = (e15) => (t9) => e15(..."string" == typeof t9 ? String(t9).split(g) : [t9]);
var u = { appearance: (e15) => ({ WebkitAppearance: e15, appearance: e15 }), backfaceVisibility: (e15) => ({ WebkitBackfaceVisibility: e15, backfaceVisibility: e15 }), backdropFilter: (e15) => ({ WebkitBackdropFilter: e15, backdropFilter: e15 }), backgroundClip: (e15) => ({ WebkitBackgroundClip: e15, backgroundClip: e15 }), boxDecorationBreak: (e15) => ({ WebkitBoxDecorationBreak: e15, boxDecorationBreak: e15 }), clipPath: (e15) => ({ WebkitClipPath: e15, clipPath: e15 }), content: (e15) => ({ content: e15.includes('"') || e15.includes("'") || /^([A-Za-z]+\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(e15) ? e15 : `"${e15}"` }), hyphens: (e15) => ({ WebkitHyphens: e15, hyphens: e15 }), maskImage: (e15) => ({ WebkitMaskImage: e15, maskImage: e15 }), maskSize: (e15) => ({ WebkitMaskSize: e15, maskSize: e15 }), tabSize: (e15) => ({ MozTabSize: e15, tabSize: e15 }), textSizeAdjust: (e15) => ({ WebkitTextSizeAdjust: e15, textSizeAdjust: e15 }), userSelect: (e15) => ({ WebkitUserSelect: e15, userSelect: e15 }), marginBlock: p2((e15, t9) => ({ marginBlockStart: e15, marginBlockEnd: t9 || e15 })), marginInline: p2((e15, t9) => ({ marginInlineStart: e15, marginInlineEnd: t9 || e15 })), maxSize: p2((e15, t9) => ({ maxBlockSize: e15, maxInlineSize: t9 || e15 })), minSize: p2((e15, t9) => ({ minBlockSize: e15, minInlineSize: t9 || e15 })), paddingBlock: p2((e15, t9) => ({ paddingBlockStart: e15, paddingBlockEnd: t9 || e15 })), paddingInline: p2((e15, t9) => ({ paddingInlineStart: e15, paddingInlineEnd: t9 || e15 })) };
var h2 = /([\d.]+)([^]*)/;
var f = (e15, t9) => e15.length ? e15.reduce((e16, r14) => (e16.push(...t9.map((e17) => e17.includes("&") ? e17.replace(/&/g, /[ +>|~]/.test(r14) && /&.*&/.test(e17) ? `:is(${r14})` : r14) : r14 + " " + e17)), e16), []) : t9;
var m = (e15, t9) => e15 in b && "string" == typeof t9 ? t9.replace(/^((?:[^]*[^\w-])?)(fit-content|stretch)((?:[^\w-][^]*)?)$/, (t10, r14, n15, i13) => r14 + ("stretch" === n15 ? `-moz-available${i13};${d(e15)}:${r14}-webkit-fill-available` : `-moz-fit-content${i13};${d(e15)}:${r14}fit-content`) + i13) : String(t9);
var b = { blockSize: 1, height: 1, inlineSize: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, width: 1 };
var S = (e15) => e15 ? e15 + "-" : "";
var k3 = (e15, t9, r14) => e15.replace(/([+-])?((?:\d+(?:\.\d*)?|\.\d+)(?:[Ee][+-]?\d+)?)?(\$|--)([$\w-]+)/g, (e16, n15, i13, o14, l13) => "$" == o14 == !!i13 ? e16 : (n15 || "--" == o14 ? "calc(" : "") + "var(--" + ("$" === o14 ? S(t9) + (l13.includes("$") ? "" : S(r14)) + l13.replace(/\$/g, "-") : l13) + ")" + (n15 || "--" == o14 ? "*" + (n15 || "") + (i13 || "1") + ")" : ""));
var y2 = /\s*,\s*(?![^()]*\))/;
var B = Object.prototype.toString;
var $ = (e15, t9, r14, n15, i13) => {
  let o14, l13, s9;
  const a13 = (e16, t10, r15) => {
    let c15, g4;
    const p7 = (e17) => {
      for (c15 in e17) {
        const R3 = 64 === c15.charCodeAt(0), z3 = R3 && Array.isArray(e17[c15]) ? e17[c15] : [e17[c15]];
        for (g4 of z3) {
          const e18 = /[A-Z]/.test($2 = c15) ? $2 : $2.replace(/-[^]/g, (e19) => e19[1].toUpperCase()), z4 = "object" == typeof g4 && g4 && g4.toString === B && (!n15.utils[e18] || !t10.length);
          if (e18 in n15.utils && !z4) {
            const t11 = n15.utils[e18];
            if (t11 !== l13) {
              l13 = t11, p7(t11(g4)), l13 = null;
              continue;
            }
          } else if (e18 in u) {
            const t11 = u[e18];
            if (t11 !== s9) {
              s9 = t11, p7(t11(g4)), s9 = null;
              continue;
            }
          }
          if (R3 && (b6 = c15.slice(1) in n15.media ? "@media " + n15.media[c15.slice(1)] : c15, c15 = b6.replace(/\(\s*([\w-]+)\s*(=|<|<=|>|>=)\s*([\w-]+)\s*(?:(<|<=|>|>=)\s*([\w-]+)\s*)?\)/g, (e19, t11, r16, n16, i14, o15) => {
            const l14 = h2.test(t11), s10 = 0.0625 * (l14 ? -1 : 1), [a14, c16] = l14 ? [n16, t11] : [t11, n16];
            return "(" + ("=" === r16[0] ? "" : ">" === r16[0] === l14 ? "max-" : "min-") + a14 + ":" + ("=" !== r16[0] && 1 === r16.length ? c16.replace(h2, (e20, t12, n17) => Number(t12) + s10 * (">" === r16 ? 1 : -1) + n17) : c16) + (i14 ? ") and (" + (">" === i14[0] ? "min-" : "max-") + a14 + ":" + (1 === i14.length ? o15.replace(h2, (e20, t12, r17) => Number(t12) + s10 * (">" === i14 ? -1 : 1) + r17) : o15) : "") + ")";
          })), z4) {
            const e19 = R3 ? r15.concat(c15) : [...r15], n16 = R3 ? [...t10] : f(t10, c15.split(y2));
            void 0 !== o14 && i13(x2(...o14)), o14 = void 0, a13(g4, n16, e19);
          } else
            void 0 === o14 && (o14 = [[], t10, r15]), c15 = R3 || 36 !== c15.charCodeAt(0) ? c15 : `--${S(n15.prefix)}${c15.slice(1).replace(/\$/g, "-")}`, g4 = z4 ? g4 : "number" == typeof g4 ? g4 && e18 in I ? String(g4) + "px" : String(g4) : k3(m(e18, null == g4 ? "" : g4), n15.prefix, n15.themeMap[e18]), o14[0].push(`${R3 ? `${c15} ` : `${d(c15)}:`}${g4}`);
        }
      }
      var b6, $2;
    };
    p7(e16), void 0 !== o14 && i13(x2(...o14)), o14 = void 0;
  };
  a13(e15, t9, r14);
};
var x2 = (e15, t9, r14) => `${r14.map((e16) => `${e16}{`).join("")}${t9.length ? `${t9.join(",")}{` : ""}${e15.join(";")}${t9.length ? "}" : ""}${Array(r14.length ? r14.length + 1 : 0).join("}")}`;
var I = { animationDelay: 1, animationDuration: 1, backgroundSize: 1, blockSize: 1, border: 1, borderBlock: 1, borderBlockEnd: 1, borderBlockEndWidth: 1, borderBlockStart: 1, borderBlockStartWidth: 1, borderBlockWidth: 1, borderBottom: 1, borderBottomLeftRadius: 1, borderBottomRightRadius: 1, borderBottomWidth: 1, borderEndEndRadius: 1, borderEndStartRadius: 1, borderInlineEnd: 1, borderInlineEndWidth: 1, borderInlineStart: 1, borderInlineStartWidth: 1, borderInlineWidth: 1, borderLeft: 1, borderLeftWidth: 1, borderRadius: 1, borderRight: 1, borderRightWidth: 1, borderSpacing: 1, borderStartEndRadius: 1, borderStartStartRadius: 1, borderTop: 1, borderTopLeftRadius: 1, borderTopRightRadius: 1, borderTopWidth: 1, borderWidth: 1, bottom: 1, columnGap: 1, columnRule: 1, columnRuleWidth: 1, columnWidth: 1, containIntrinsicSize: 1, flexBasis: 1, fontSize: 1, gap: 1, gridAutoColumns: 1, gridAutoRows: 1, gridTemplateColumns: 1, gridTemplateRows: 1, height: 1, inlineSize: 1, inset: 1, insetBlock: 1, insetBlockEnd: 1, insetBlockStart: 1, insetInline: 1, insetInlineEnd: 1, insetInlineStart: 1, left: 1, letterSpacing: 1, margin: 1, marginBlock: 1, marginBlockEnd: 1, marginBlockStart: 1, marginBottom: 1, marginInline: 1, marginInlineEnd: 1, marginInlineStart: 1, marginLeft: 1, marginRight: 1, marginTop: 1, maxBlockSize: 1, maxHeight: 1, maxInlineSize: 1, maxWidth: 1, minBlockSize: 1, minHeight: 1, minInlineSize: 1, minWidth: 1, offsetDistance: 1, offsetRotate: 1, outline: 1, outlineOffset: 1, outlineWidth: 1, overflowClipMargin: 1, padding: 1, paddingBlock: 1, paddingBlockEnd: 1, paddingBlockStart: 1, paddingBottom: 1, paddingInline: 1, paddingInlineEnd: 1, paddingInlineStart: 1, paddingLeft: 1, paddingRight: 1, paddingTop: 1, perspective: 1, right: 1, rowGap: 1, scrollMargin: 1, scrollMarginBlock: 1, scrollMarginBlockEnd: 1, scrollMarginBlockStart: 1, scrollMarginBottom: 1, scrollMarginInline: 1, scrollMarginInlineEnd: 1, scrollMarginInlineStart: 1, scrollMarginLeft: 1, scrollMarginRight: 1, scrollMarginTop: 1, scrollPadding: 1, scrollPaddingBlock: 1, scrollPaddingBlockEnd: 1, scrollPaddingBlockStart: 1, scrollPaddingBottom: 1, scrollPaddingInline: 1, scrollPaddingInlineEnd: 1, scrollPaddingInlineStart: 1, scrollPaddingLeft: 1, scrollPaddingRight: 1, scrollPaddingTop: 1, shapeMargin: 1, textDecoration: 1, textDecorationThickness: 1, textIndent: 1, textUnderlineOffset: 1, top: 1, transitionDelay: 1, transitionDuration: 1, verticalAlign: 1, width: 1, wordSpacing: 1 };
var R = (e15) => String.fromCharCode(e15 + (e15 > 25 ? 39 : 97));
var z2 = (e15) => ((e16) => {
  let t9, r14 = "";
  for (t9 = Math.abs(e16); t9 > 52; t9 = t9 / 52 | 0)
    r14 = R(t9 % 52) + r14;
  return R(t9 % 52) + r14;
})(((e16, t9) => {
  let r14 = t9.length;
  for (; r14; )
    e16 = 33 * e16 ^ t9.charCodeAt(--r14);
  return e16;
})(5381, JSON.stringify(e15)) >>> 0);
var W = ["themed", "global", "styled", "onevar", "resonevar", "allvar", "inline"];
var j = (e15) => {
  if (e15.href && !e15.href.startsWith(location.origin))
    return false;
  try {
    return !!e15.cssRules;
  } catch (e16) {
    return false;
  }
};
var E = (e15) => {
  let t9;
  const r14 = () => {
    const { cssRules: e16 } = t9.sheet;
    return [].map.call(e16, (r15, n16) => {
      const { cssText: i13 } = r15;
      let o14 = "";
      if (i13.startsWith("--sxs"))
        return "";
      if (e16[n16 - 1] && (o14 = e16[n16 - 1].cssText).startsWith("--sxs")) {
        if (!r15.cssRules.length)
          return "";
        for (const e17 in t9.rules)
          if (t9.rules[e17].group === r15)
            return `--sxs{--sxs:${[...t9.rules[e17].cache].join(" ")}}${i13}`;
        return r15.cssRules.length ? `${o14}${i13}` : "";
      }
      return i13;
    }).join("");
  }, n15 = () => {
    if (t9) {
      const { rules: e16, sheet: r15 } = t9;
      if (!r15.deleteRule) {
        for (; 3 === Object(Object(r15.cssRules)[0]).type; )
          r15.cssRules.splice(0, 1);
        r15.cssRules = [];
      }
      for (const t10 in e16)
        delete e16[t10];
    }
    const i13 = Object(e15).styleSheets || [];
    for (const e16 of i13)
      if (j(e16)) {
        for (let i14 = 0, o15 = e16.cssRules; o15[i14]; ++i14) {
          const l14 = Object(o15[i14]);
          if (1 !== l14.type)
            continue;
          const s9 = Object(o15[i14 + 1]);
          if (4 !== s9.type)
            continue;
          ++i14;
          const { cssText: a13 } = l14;
          if (!a13.startsWith("--sxs"))
            continue;
          const c15 = a13.slice(14, -3).trim().split(/\s+/), d11 = W[c15[0]];
          d11 && (t9 || (t9 = { sheet: e16, reset: n15, rules: {}, toString: r14 }), t9.rules[d11] = { group: s9, index: i14, cache: new Set(c15) });
        }
        if (t9)
          break;
      }
    if (!t9) {
      const i14 = (e16, t10) => ({ type: t10, cssRules: [], insertRule(e17, t11) {
        this.cssRules.splice(t11, 0, i14(e17, { import: 3, undefined: 1 }[(e17.toLowerCase().match(/^@([a-z]+)/) || [])[1]] || 4));
      }, get cssText() {
        return "@media{}" === e16 ? `@media{${[].map.call(this.cssRules, (e17) => e17.cssText).join("")}}` : e16;
      } });
      t9 = { sheet: e15 ? (e15.head || e15).appendChild(document.createElement("style")).sheet : i14("", "text/css"), rules: {}, reset: n15, toString: r14 };
    }
    const { sheet: o14, rules: l13 } = t9;
    for (let e16 = W.length - 1; e16 >= 0; --e16) {
      const t10 = W[e16];
      if (!l13[t10]) {
        const r15 = W[e16 + 1], n16 = l13[r15] ? l13[r15].index : o14.cssRules.length;
        o14.insertRule("@media{}", n16), o14.insertRule(`--sxs{--sxs:${e16}}`, n16), l13[t10] = { group: o14.cssRules[n16 + 1], index: n16, cache: /* @__PURE__ */ new Set([e16]) };
      }
      v(l13[t10]);
    }
  };
  return n15(), t9;
};
var v = (e15) => {
  const t9 = e15.group;
  let r14 = t9.cssRules.length;
  e15.apply = (e16) => {
    try {
      t9.insertRule(e16, r14), ++r14;
    } catch (e17) {
    }
  };
};
var T2 = Symbol();
var w = o2();
var M = (e15, t9) => w(e15, () => (...r14) => {
  let n15 = { type: null, composers: /* @__PURE__ */ new Set() };
  for (const t10 of r14)
    if (null != t10)
      if (t10[l]) {
        null == n15.type && (n15.type = t10[l].type);
        for (const e16 of t10[l].composers)
          n15.composers.add(e16);
      } else
        t10.constructor !== Object || t10.$$typeof ? null == n15.type && (n15.type = t10) : n15.composers.add(C(t10, e15));
  return null == n15.type && (n15.type = "span"), n15.composers.size || n15.composers.add(["PJLV", {}, [], [], {}, []]), P(e15, n15, t9);
});
var C = ({ variants: e15, compoundVariants: t9, defaultVariants: r14, ...n15 }, i13) => {
  const o14 = `${S(i13.prefix)}c-${z2(n15)}`, l13 = [], s9 = [], d11 = /* @__PURE__ */ Object.create(null), g4 = [];
  for (const e16 in r14)
    d11[e16] = String(r14[e16]);
  if ("object" == typeof e15 && e15)
    for (const t10 in e15) {
      p7 = d11, u9 = t10, c.call(p7, u9) || (d11[t10] = "undefined");
      const r15 = e15[t10];
      for (const e16 in r15) {
        const n16 = { [t10]: String(e16) };
        "undefined" === String(e16) && g4.push(t10);
        const i14 = r15[e16], o15 = [n16, i14, !a(i14)];
        l13.push(o15);
      }
    }
  var p7, u9;
  if ("object" == typeof t9 && t9)
    for (const e16 of t9) {
      let { css: t10, ...r15 } = e16;
      t10 = "object" == typeof t10 && t10 || {};
      for (const e17 in r15)
        r15[e17] = String(r15[e17]);
      const n16 = [r15, t10, !a(t10)];
      s9.push(n16);
    }
  return [o14, n15, l13, s9, d11, g4];
};
var P = (e15, t9, r14) => {
  const [n15, i13, o14, a13] = L(t9.composers), c15 = "function" == typeof t9.type || t9.type.$$typeof ? ((e16) => {
    function t10() {
      for (let r15 = 0; r15 < t10[T2].length; r15++) {
        const [n16, i14] = t10[T2][r15];
        e16.rules[n16].apply(i14);
      }
      return t10[T2] = [], null;
    }
    return t10[T2] = [], t10.rules = {}, W.forEach((e17) => t10.rules[e17] = { apply: (r15) => t10[T2].push([e17, r15]) }), t10;
  })(r14) : null, d11 = (c15 || r14).rules, g4 = `.${n15}${i13.length > 1 ? `:where(.${i13.slice(1).join(".")})` : ""}`, p7 = (l13) => {
    l13 = "object" == typeof l13 && l13 || A2;
    const { css: s9, ...p8 } = l13, u9 = {};
    for (const e16 in o14)
      if (delete p8[e16], e16 in l13) {
        let t10 = l13[e16];
        "object" == typeof t10 && t10 ? u9[e16] = { "@initial": o14[e16], ...t10 } : (t10 = String(t10), u9[e16] = "undefined" !== t10 || a13.has(e16) ? t10 : o14[e16]);
      } else
        u9[e16] = o14[e16];
    const h4 = /* @__PURE__ */ new Set([...i13]);
    for (const [n16, i14, o15, l14] of t9.composers) {
      r14.rules.styled.cache.has(n16) || (r14.rules.styled.cache.add(n16), $(i14, [`.${n16}`], [], e15, (e16) => {
        d11.styled.apply(e16);
      }));
      const t10 = O2(o15, u9, e15.media), s10 = O2(l14, u9, e15.media, true);
      for (const i15 of t10)
        if (void 0 !== i15)
          for (const [t11, o16, l15] of i15) {
            const i16 = `${n16}-${z2(o16)}-${t11}`;
            h4.add(i16);
            const s11 = (l15 ? r14.rules.resonevar : r14.rules.onevar).cache, a14 = l15 ? d11.resonevar : d11.onevar;
            s11.has(i16) || (s11.add(i16), $(o16, [`.${i16}`], [], e15, (e16) => {
              a14.apply(e16);
            }));
          }
      for (const t11 of s10)
        if (void 0 !== t11)
          for (const [i15, o16] of t11) {
            const t12 = `${n16}-${z2(o16)}-${i15}`;
            h4.add(t12), r14.rules.allvar.cache.has(t12) || (r14.rules.allvar.cache.add(t12), $(o16, [`.${t12}`], [], e15, (e16) => {
              d11.allvar.apply(e16);
            }));
          }
    }
    if ("object" == typeof s9 && s9) {
      const t10 = `${n15}-i${z2(s9)}-css`;
      h4.add(t10), r14.rules.inline.cache.has(t10) || (r14.rules.inline.cache.add(t10), $(s9, [`.${t10}`], [], e15, (e16) => {
        d11.inline.apply(e16);
      }));
    }
    for (const e16 of String(l13.className || "").trim().split(/\s+/))
      e16 && h4.add(e16);
    const f5 = p8.className = [...h4].join(" ");
    return { type: t9.type, className: f5, selector: g4, props: p8, toString: () => f5, deferredInjector: c15 };
  };
  return s2(p7, { className: n15, selector: g4, [l]: t9, toString: () => (r14.rules.styled.cache.has(n15) || p7(), n15) });
};
var L = (e15) => {
  let t9 = "";
  const r14 = [], n15 = {}, i13 = [];
  for (const [o14, , , , l13, s9] of e15) {
    "" === t9 && (t9 = o14), r14.push(o14), i13.push(...s9);
    for (const e16 in l13) {
      const t10 = l13[e16];
      (void 0 === n15[e16] || "undefined" !== t10 || s9.includes(t10)) && (n15[e16] = t10);
    }
  }
  return [t9, r14, n15, new Set(i13)];
};
var O2 = (e15, t9, r14, n15) => {
  const i13 = [];
  e:
    for (let [o14, l13, s9] of e15) {
      if (s9)
        continue;
      let e16, a13 = 0, c15 = false;
      for (e16 in o14) {
        const n16 = o14[e16];
        let i14 = t9[e16];
        if (i14 !== n16) {
          if ("object" != typeof i14 || !i14)
            continue e;
          {
            let e17, t10, o15 = 0;
            for (const l14 in i14) {
              if (n16 === String(i14[l14])) {
                if ("@initial" !== l14) {
                  const e18 = l14.slice(1);
                  (t10 = t10 || []).push(e18 in r14 ? r14[e18] : l14.replace(/^@media ?/, "")), c15 = true;
                }
                a13 += o15, e17 = true;
              }
              ++o15;
            }
            if (t10 && t10.length && (l13 = { ["@media " + t10.join(", ")]: l13 }), !e17)
              continue e;
          }
        }
      }
      (i13[a13] = i13[a13] || []).push([n15 ? "cv" : `${e16}-${o14[e16]}`, l13, c15]);
    }
  return i13;
};
var A2 = {};
var N = o2();
var D = (e15, t9) => N(e15, () => (...r14) => {
  const n15 = () => {
    for (let n16 of r14) {
      n16 = "object" == typeof n16 && n16 || {};
      let r15 = z2(n16);
      if (!t9.rules.global.cache.has(r15)) {
        if (t9.rules.global.cache.add(r15), "@import" in n16) {
          let e16 = [].indexOf.call(t9.sheet.cssRules, t9.rules.themed.group) - 1;
          for (let r16 of [].concat(n16["@import"]))
            r16 = r16.includes('"') || r16.includes("'") ? r16 : `"${r16}"`, t9.sheet.insertRule(`@import ${r16};`, e16++);
          delete n16["@import"];
        }
        $(n16, [], [], e15, (e16) => {
          t9.rules.global.apply(e16);
        });
      }
    }
    return "";
  };
  return s2(n15, { toString: n15 });
});
var H = o2();
var V = (e15, t9) => H(e15, () => (r14) => {
  const n15 = `${S(e15.prefix)}k-${z2(r14)}`, i13 = () => {
    if (!t9.rules.global.cache.has(n15)) {
      t9.rules.global.cache.add(n15);
      const i14 = [];
      $(r14, [], [], e15, (e16) => i14.push(e16));
      const o14 = `@keyframes ${n15}{${i14.join("")}}`;
      t9.rules.global.apply(o14);
    }
    return n15;
  };
  return s2(i13, { get name() {
    return i13();
  }, toString: i13 });
});
var G2 = class {
  constructor(e15, t9, r14, n15) {
    this.token = null == e15 ? "" : String(e15), this.value = null == t9 ? "" : String(t9), this.scale = null == r14 ? "" : String(r14), this.prefix = null == n15 ? "" : String(n15);
  }
  get computedValue() {
    return "var(" + this.variable + ")";
  }
  get variable() {
    return "--" + S(this.prefix) + S(this.scale) + this.token;
  }
  toString() {
    return this.computedValue;
  }
};
var F2 = o2();
var J = (e15, t9) => F2(e15, () => (r14, n15) => {
  n15 = "object" == typeof r14 && r14 || Object(n15);
  const i13 = `.${r14 = (r14 = "string" == typeof r14 ? r14 : "") || `${S(e15.prefix)}t-${z2(n15)}`}`, o14 = {}, l13 = [];
  for (const t10 in n15) {
    o14[t10] = {};
    for (const r15 in n15[t10]) {
      const i14 = `--${S(e15.prefix)}${t10}-${r15}`, s10 = k3(String(n15[t10][r15]), e15.prefix, t10);
      o14[t10][r15] = new G2(r15, s10, t10, e15.prefix), l13.push(`${i14}:${s10}`);
    }
  }
  const s9 = () => {
    if (l13.length && !t9.rules.themed.cache.has(r14)) {
      t9.rules.themed.cache.add(r14);
      const i14 = `${n15 === e15.theme ? ":root," : ""}.${r14}{${l13.join(";")}}`;
      t9.rules.themed.apply(i14);
    }
    return r14;
  };
  return { ...o14, get className() {
    return s9();
  }, selector: i13, toString: s9 };
});
var U = o2();
var Y = o2();
var q2 = (e15) => {
  const t9 = ((e16) => {
    let t10 = false;
    const r14 = U(e16, (e17) => {
      t10 = true;
      const r15 = "prefix" in (e17 = "object" == typeof e17 && e17 || {}) ? String(e17.prefix) : "", i13 = "object" == typeof e17.media && e17.media || {}, o14 = "object" == typeof e17.root ? e17.root || null : globalThis.document || null, l13 = "object" == typeof e17.theme && e17.theme || {}, s9 = { prefix: r15, media: i13, theme: l13, themeMap: "object" == typeof e17.themeMap && e17.themeMap || { ...n }, utils: "object" == typeof e17.utils && e17.utils || {} }, a13 = E(o14), c15 = { css: M(s9, a13), globalCss: D(s9, a13), keyframes: V(s9, a13), createTheme: J(s9, a13), reset() {
        a13.reset(), c15.theme.toString();
      }, theme: {}, sheet: a13, config: s9, prefix: r15, getCssText: a13.toString, toString: a13.toString };
      return String(c15.theme = c15.createTheme(l13)), c15;
    });
    return t10 || r14.reset(), r14;
  })(e15);
  return t9.styled = (({ config: e16, sheet: t10 }) => Y(e16, () => {
    const r14 = M(e16, t10);
    return (...e17) => {
      const t11 = r14(...e17), n15 = t11[l].type, i13 = Cn.forwardRef((e18, r15) => {
        const i14 = e18 && e18.as || n15, { props: o14, deferredInjector: l13 } = t11(e18);
        return delete o14.as, o14.ref = r15, l13 ? Cn.createElement(Cn.Fragment, null, Cn.createElement(i14, o14), Cn.createElement(l13, null)) : Cn.createElement(i14, o14);
      });
      return i13.className = t11.className, i13.displayName = `Styled.${n15.displayName || n15.name || n15}`, i13.selector = t11.selector, i13.toString = () => t11.selector, i13[l] = t11[l], i13;
    };
  }))(t9), t9;
};

// node_modules/@nextui-org/react/esm/utils/deep-merge.js
function t2(o14) {
  for (var r14, e15, l13 = Array.prototype.slice.call(arguments, 1); l13.length; )
    for (e15 in r14 = l13.shift())
      r14.hasOwnProperty(e15) && ("object" == typeof o14[e15] && o14[e15] && "[object Array]" !== Object.prototype.toString.call(o14[e15]) && "object" == typeof r14[e15] && null !== r14[e15] ? o14[e15] = t2({}, o14[e15], r14[e15]) : o14[e15] = r14[e15]);
  return o14;
}

// node_modules/@nextui-org/react/esm/theme/common.js
var defaultTokens = { fonts: { sans: "-apple-system, BlinkMacSystemFont, 'Segoe UI','Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans','Helvetica Neue', sans-serif;", mono: "Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono','Courier New', monospace;" }, fontSizes: { xs: "0.75rem", sm: "0.875rem", base: "1rem", md: "1rem", lg: "1.125rem", xl: "1.25rem", "2xl": "1.5rem", "3xl": "1.875rem", "4xl": "2.25rem", "5xl": "3rem", "6xl": "3.75rem", "7xl": "4.5rem", "8xl": "6rem", "9xl": "8rem" }, fontWeights: { hairline: 100, thin: 200, light: 300, normal: 400, medium: 500, semibold: 600, bold: 700, extrabold: 800, black: 900 }, lineHeights: { xs: 1, sm: 1.25, base: 1.5, md: 1.5, lg: 1.75, xl: 1.75, "2xl": 2, "3xl": 2.25, "4xl": 2.5, "5xl": 1, "6xl": 1, "7xl": 1, "8xl": 1, "9xl": 1 }, letterSpacings: { tighter: "-0.05em", tight: "-0.025em", normal: "0", wide: "0.025em", wider: "0.05em", widest: "0.1em" }, space: { 0: "0rem", xs: "0.5rem", sm: "0.75rem", md: "1rem", lg: "1.25rem", xl: "2.25rem", "2xl": "3rem", "3xl": "5rem", "4xl": "10rem", "5xl": "14rem", "6xl": "18rem", "7xl": "24rem", "8xl": "32rem", "9xl": "40rem", min: "min-content", max: "max-content", fit: "fit-content", screen: "100vw", full: "100%", px: "1px", 1: "0.125rem", 2: "0.25rem", 3: "0.375rem", 4: "0.5rem", 5: "0.625rem", 6: "0.75rem", 7: "0.875rem", 8: "1rem", 9: "1.25rem", 10: "1.5rem", 11: "1.75rem", 12: "2rem", 13: "2.25rem", 14: "2.5rem", 15: "2.75rem", 16: "3rem", 17: "3.5rem", 18: "4rem", 20: "5rem", 24: "6rem", 28: "7rem", 32: "8rem", 36: "9rem", 40: "10rem", 44: "11rem", 48: "12rem", 52: "13rem", 56: "14rem", 60: "15rem", 64: "16rem", 72: "18rem", 80: "20rem", 96: "24rem" }, radii: { xs: "7px", sm: "9px", md: "12px", base: "14px", lg: "14px", xl: "18px", "2xl": "24px", "3xl": "32px", squared: "33%", rounded: "50%", pill: "9999px" }, zIndices: { 1: "100", 2: "200", 3: "300", 4: "400", 5: "500", 10: "1000", max: "9999" }, borderWeights: { light: "1px", normal: "2px", bold: "3px", extrabold: "4px", black: "5px" }, transitions: { default: "all 250ms ease", button: "background 0.25s ease 0s, color 0.25s ease 0s, border-color 0.25s ease 0s, box-shadow 0.25s ease 0s, transform 0.25s ease 0s, opacity 0.25s ease 0s", avatar: "box-shadow 0.25s ease 0s, opacity 0.25s ease 0s", card: "transform 0.25s ease 0s, filter 0.25s ease 0s, box-shadow 0.25s ease 0s", dropdownItem: "background 0.12s ease, transform 0.12s ease, color 0.12s ease, box-shadow 0.12s ease 0s" }, breakpoints: { xs: "650px", sm: "960px", md: "1280px", lg: "1400px", xl: "1920px" } };
var defaultColors = { white: "#ffffff", black: "#000000", primaryLight: "$blue200", primaryLightHover: "$blue300", primaryLightActive: "$blue400", primaryLightContrast: "$blue600", primary: "$blue600", primaryBorder: "$blue500", primaryBorderHover: "$blue600", primarySolidHover: "$blue700", primarySolidContrast: "$white", primaryShadow: "$blue500", secondaryLight: "$purple200", secondaryLightHover: "$purple300", secondaryLightActive: "$purple400", secondaryLightContrast: "$purple600", secondary: "$purple600", secondaryBorder: "$purple500", secondaryBorderHover: "$purple600", secondarySolidHover: "$purple700", secondarySolidContrast: "$white", secondaryShadow: "$purple500", successLight: "$green200", successLightHover: "$green300", successLightActive: "$green400", successLightContrast: "$green700", success: "$green600", successBorder: "$green500", successBorderHover: "$green600", successSolidHover: "$green700", successSolidContrast: "$white", successShadow: "$green500", warningLight: "$yellow200", warningLightHover: "$yellow300", warningLightActive: "$yellow400", warningLightContrast: "$yellow700", warning: "$yellow600", warningBorder: "$yellow500", warningBorderHover: "$yellow600", warningSolidHover: "$yellow700", warningSolidContrast: "$white", warningShadow: "$yellow500", errorLight: "$red200", errorLightHover: "$red300", errorLightActive: "$red400", errorLightContrast: "$red600", error: "$red600", errorBorder: "$red500", errorBorderHover: "$red600", errorSolidHover: "$red700", errorSolidContrast: "$white", errorShadow: "$red500", neutralLight: "$gray100", neutralLightHover: "$gray200", neutralLightActive: "$gray300", neutralLightContrast: "$gray800", neutral: "$gray600", neutralBorder: "$gray400", neutralBorderHover: "$gray500", neutralSolidHover: "$gray600", neutralSolidContrast: "$white", neutralShadow: "$gray400", gradient: "linear-gradient(112deg, $cyan600 -63.59%, $pink600 -20.3%, $blue600 70.46%)", accents0: "$gray50", accents1: "$gray100", accents2: "$gray200", accents3: "$gray300", accents4: "$gray400", accents5: "$gray500", accents6: "$gray600", accents7: "$gray700", accents8: "$gray800", accents9: "$gray900" };
var defaultMedia = { xs: `(min-width: ${defaultTokens.breakpoints.xs})`, sm: `(min-width: ${defaultTokens.breakpoints.sm})`, md: `(min-width: ${defaultTokens.breakpoints.md})`, lg: `(min-width: ${defaultTokens.breakpoints.lg})`, xl: `(min-width: ${defaultTokens.breakpoints.xl})`, xsMin: `(min-width: ${defaultTokens.breakpoints.xs})`, smMin: `(min-width: ${defaultTokens.breakpoints.sm})`, mdMin: `(min-width: ${defaultTokens.breakpoints.md})`, lgMin: `(min-width: ${defaultTokens.breakpoints.lg})`, xlMin: `(min-width: ${defaultTokens.breakpoints.xl})`, xsMax: `(max-width: ${defaultTokens.breakpoints.xs})`, smMax: `(max-width: ${defaultTokens.breakpoints.sm})`, mdMax: `(max-width: ${defaultTokens.breakpoints.md})`, lgMax: `(max-width: ${defaultTokens.breakpoints.lg})`, xlMax: `(max-width: ${defaultTokens.breakpoints.xl})`, motion: "(prefers-reduced-motion: reduce)", safari: "not all and (min-resolution:.001dpcm)", hover: "(any-hover: hover)", dark: "(prefers-color-scheme: dark)", light: "(prefers-color-scheme: light)" };
var defaultUtils = { p: (e15) => ({ padding: e15 }), pt: (e15) => ({ paddingTop: e15 }), pr: (e15) => ({ paddingRight: e15 }), pb: (e15) => ({ paddingBottom: e15 }), pl: (e15) => ({ paddingLeft: e15 }), px: (e15) => ({ paddingLeft: e15, paddingRight: e15 }), py: (e15) => ({ paddingTop: e15, paddingBottom: e15 }), m: (e15) => ({ margin: e15 }), mt: (e15) => ({ marginTop: e15 }), mr: (e15) => ({ marginRight: e15 }), mb: (e15) => ({ marginBottom: e15 }), ml: (e15) => ({ marginLeft: e15 }), mx: (e15) => ({ marginLeft: e15, marginRight: e15 }), my: (e15) => ({ marginTop: e15, marginBottom: e15 }), ta: (e15) => ({ textAlign: e15 }), tt: (e15) => ({ textTransform: e15 }), to: (e15) => ({ textOverflow: e15 }), d: (e15) => ({ display: e15 }), dflex: (e15) => ({ display: "flex", alignItems: e15, justifyContent: e15 }), fd: (e15) => ({ flexDirection: e15 }), fw: (e15) => ({ flexWrap: e15 }), ai: (e15) => ({ alignItems: e15 }), ac: (e15) => ({ alignContent: e15 }), jc: (e15) => ({ justifyContent: e15 }), as: (e15) => ({ alignSelf: e15 }), fg: (e15) => ({ flexGrow: e15 }), fs: (e15) => ({ fontSize: e15 }), fb: (e15) => ({ flexBasis: e15 }), bc: (e15) => ({ backgroundColor: e15 }), bf: (e15) => ({ backdropFilter: e15 }), bg: (e15) => ({ background: e15 }), bgBlur: (e15) => ({ bf: "saturate(180%) blur(10px)", bg: e15 }), bgColor: (e15) => ({ backgroundColor: e15 }), backgroundClip: (e15) => ({ WebkitBackgroundClip: e15, backgroundClip: e15 }), bgClip: (e15) => ({ WebkitBackgroundClip: e15, backgroundClip: e15 }), br: (e15) => ({ borderRadius: e15 }), bw: (e15) => ({ borderWidth: e15 }), btrr: (e15) => ({ borderTopRightRadius: e15 }), bbrr: (e15) => ({ borderBottomRightRadius: e15 }), bblr: (e15) => ({ borderBottomLeftRadius: e15 }), btlr: (e15) => ({ borderTopLeftRadius: e15 }), bs: (e15) => ({ boxShadow: e15 }), ds: (e15) => ({ dropShadow: e15 }), shadow: (e15) => ({ boxShadow: e15 }), dshadow: (e15) => ({ dropShadow: e15 }), dropShadow: (e15) => ({ filter: `$dropShadows${e15}` }), normalShadow: (e15) => ({ boxShadow: `0 4px 14px 0 $colors${e15}` }), normalShadowVar: (e15) => ({ boxShadow: `0 4px 14px 0 ${e15}` }), lh: (e15) => ({ lineHeight: e15 }), ov: (e15) => ({ overflow: e15 }), ox: (e15) => ({ overflowX: e15 }), oy: (e15) => ({ overflowY: e15 }), pe: (e15) => ({ pointerEvents: e15 }), events: (e15) => ({ pointerEvents: e15 }), us: (e15) => ({ WebkitUserSelect: e15, userSelect: e15 }), userSelect: (e15) => ({ WebkitUserSelect: e15, userSelect: e15 }), w: (e15) => ({ width: e15 }), h: (e15) => ({ height: e15 }), mw: (e15) => ({ maxWidth: e15 }), maxW: (e15) => ({ maxWidth: e15 }), mh: (e15) => ({ maxHeight: e15 }), maxH: (e15) => ({ maxHeight: e15 }), size: (e15) => ({ width: e15, height: e15 }), minSize: (e15) => ({ minWidth: e15, minHeight: e15, width: e15, height: e15 }), sizeMin: (e15) => ({ minWidth: e15, minHeight: e15, width: e15, height: e15 }), maxSize: (e15) => ({ maxWidth: e15, maxHeight: e15 }), sizeMax: (e15) => ({ maxWidth: e15, maxHeight: e15 }), appearance: (e15) => ({ WebkitAppearance: e15, appearance: e15 }), scale: (e15) => ({ transform: `scale(${e15})` }), linearGradient: (e15) => ({ backgroundImage: `linear-gradient(${e15})` }), tdl: (e15) => ({ textDecorationLine: e15 }), truncateText: (e15) => ({ maxWidth: e15, whiteSpace: "nowrap", overflow: "hidden", textOverflow: "ellipsis" }), textGradient: (e15) => ({ backgroundImage: `linear-gradient(${e15})`, WebkitBackgroundClip: "text", WebkitTextFillColor: "transparent", "&::selection": { WebkitTextFillColor: "$colors$text" } }) };
var defaultThemeMap = { ...n, width: "space", height: "space", minWidth: "space", maxWidth: "space", minHeight: "space", maxHeight: "space", flexBasis: "space", gridTemplateColumns: "space", gridTemplateRows: "space", blockSize: "space", minBlockSize: "space", maxBlockSize: "space", inlineSize: "space", minInlineSize: "space", maxInlineSize: "space", borderWidth: "borderWeights" };
var common_default = { prefix: "nextui", theme: { ...defaultTokens, colors: defaultColors, shadows: {}, dropShadows: {} }, media: defaultMedia, utils: defaultUtils, themeMap: defaultThemeMap };

// node_modules/@nextui-org/react/esm/utils/color.js
var getCssVar = (t9, r14 = null) => {
  if ("undefined" == typeof document || !t9)
    return "";
  const e15 = r14 || document.documentElement, o14 = isCssVar(t9) ? t9.replace("var(", "").replace(")", "") : t9.includes("--") ? t9 : `--${t9}`;
  return getComputedStyle(e15).getPropertyValue(o14);
};
var isCssVar = (t9) => !(!t9 || 0 !== (null == t9 ? void 0 : t9.indexOf("var(")));
var hexToRGBA = (t9, r14 = 1) => {
  let e15 = 0, o14 = 0, n15 = 0;
  return 4 == t9.length ? (e15 = "0x" + t9[1] + t9[1], o14 = "0x" + t9[2] + t9[2], n15 = "0x" + t9[3] + t9[3]) : 7 == t9.length && (e15 = "0x" + t9[1] + t9[2], o14 = "0x" + t9[3] + t9[4], n15 = "0x" + t9[5] + t9[6]), `rgba(${+e15},${+o14},${+n15},${r14})`;
};
var isNormalColor = (r14) => {
  let e15 = normalColors.find((t9) => t9 === r14);
  return null != e15;
};
var hexToRgb = (t9) => {
  const r14 = t9.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i, (t10, r15, e16, o14) => `${r15}${r15}${e16}${e16}${o14}${o14}`), e15 = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(r14);
  if (!e15)
    throw new Error(`Next UI: Unsupported ${t9} color.`);
  return [Number.parseInt(e15[1], 16), Number.parseInt(e15[2], 16), Number.parseInt(e15[3], 16)];
};
var colorToRgbValues = (t9) => {
  const r14 = isCssVar(t9) ? getCssVar(t9) : t9;
  if ("#" === r14.charAt(0))
    return hexToRgb(r14);
  const e15 = r14.replace(/ /g, ""), o14 = r14.substr(0, 4), n15 = e15.match(/\((.+)\)/);
  return o14.startsWith("rgb") && n15 ? n15[1].split(",").map((t10) => Number.parseFloat(t10)) : (console.warn('NextUI: Only supports ["RGB", "RGBA", "HEX"] color.'), [0, 0, 0]);
};
var addColorAlpha = (t9, r14 = 1) => {
  if (!t9)
    return "";
  const e15 = isCssVar(t9) ? getCssVar(t9) : t9;
  if (/#[a-fA-F0-9]{3,6}/g.test(e15))
    return hexToRGBA(e15, r14);
  if (!/^#|rgb|RGB/.test(e15))
    return e15;
  const [o14, n15, s9] = colorToRgbValues(e15);
  return `rgba(${o14}, ${n15}, ${s9}, ${r14 > 1 ? 1 : r14 < 0 ? 0 : r14})`;
};
var rgbToRgba = (t9, r14 = 1) => {
  const [e15, o14, n15] = t9.split(",").map((t10) => Number.parseFloat(t10));
  return `rgba(${e15}, ${o14}, ${n15}, ${r14 > 1 ? 1 : r14 < 0 ? 0 : r14})`;
};

// node_modules/@nextui-org/react/esm/theme/colors/blue.js
var blue = { blue50: "#EDF5FF", blue100: "#E1EFFF", blue200: "#CEE4FE", blue300: "#B7D5F8", blue400: "#96C1F2", blue500: "#5EA2EF", blue600: "#0072F5", blue700: "#005FCC", blue800: "#004799", blue900: "#00254D" };
var blueDark = { blue50: "#10253E", blue100: "#102C4C", blue200: "#0F3158", blue300: "#0D3868", blue400: "#0A4281", blue500: "#0952A5", blue600: "#0072F5", blue700: "#3694FF", blue800: "#3694FF", blue900: "#EAF4FF" };

// node_modules/@nextui-org/react/esm/theme/colors/purple.js
var purple = { purple50: "#F7F2FD", purple100: "#F1E8FB", purple200: "#EADCF8", purple300: "#E0CBF5", purple400: "#D1B1F0", purple500: "#BC8EE9", purple600: "#7828C8", purple700: "#6622AA", purple800: "#4D1980", purple900: "#290E44" };
var purpleDark = { purple50: "#1F0A33", purple100: "#240C3C", purple200: "#2E0F4D", purple300: "#3B1362", purple400: "#451773", purple500: "#571D91", purple600: "#7828C8", purple700: "#9750DD", purple800: "#B583E7", purple900: "#F7ECFC" };

// node_modules/@nextui-org/react/esm/theme/colors/green.js
var green = { green50: "#F1FDF7", green100: "#E8FCF1", green200: "#DAFBE8", green300: "#C8F9DD", green400: "#ADF5CC", green500: "#88F1B6", green600: "#17C964", green700: "#13A452", green800: "#108944", green900: "#06371B" };
var greenDark = { green50: "#042F14", green100: "#06381B", green200: "#074A24", green300: "#0A6130", green400: "#0B7439", green500: "#0F9549", green600: "#17C964", green700: "#41EC8B", green800: "#78F2AD", green900: "#ECFDF4" };

// node_modules/@nextui-org/react/esm/theme/colors/yellow.js
var yellow = { yellow50: "#FEF9F0", yellow100: "#FEF5E7", yellow200: "#FDEFD8", yellow300: "#FCE7C5", yellow400: "#FBDBA7", yellow500: "#F9CB80", yellow600: "#F5A524", yellow700: "#B97509", yellow800: "#925D07", yellow900: "#4E3104" };
var yellowDark = { yellow50: "#3A2503", yellow100: "#442B03", yellow200: "#583804", yellow300: "#704705", yellow400: "#845306", yellow500: "#A66908", yellow600: "#F5A524", yellow700: "#F6AD37", yellow800: "#F8C572", yellow900: "#FEF7EC" };

// node_modules/@nextui-org/react/esm/theme/colors/red.js
var red = { red50: "#FEF0F5", red100: "#FEE7EF", red200: "#FDD8E5", red300: "#FCC5D8", red400: "#FAA8C5", red500: "#F881AB", red600: "#F31260", red700: "#B80A47", red800: "#910838", red900: "#4E041E" };
var redDark = { red50: "#300313", red100: "#300313", red200: "#44041A", red300: "#5C0523", red400: "#6F062B", red500: "#910838", red600: "#F31260", red700: "#F4256D", red800: "#F75F94", red900: "#FDD8E5" };

// node_modules/@nextui-org/react/esm/theme/colors/cyan.js
var cyan = { cyan50: "#F0FCFF", cyan100: "#E6FAFE", cyan200: "#D7F8FE", cyan300: "#C3F4FD", cyan400: "#A5EEFD", cyan500: "#7EE7FC", cyan600: "#06B7DB", cyan700: "#09AACD", cyan800: "#0E8AAA", cyan900: "#053B48" };
var cyanDark = { cyan50: "#012A32", cyan100: "#023A46", cyan200: "#024B5A", cyan300: "#036072", cyan400: "#037086", cyan500: "#048EA9", cyan600: "#06B7DB", cyan700: "#33D9FA", cyan800: "#6FE4FB", cyan900: "#EBFBFE" };

// node_modules/@nextui-org/react/esm/theme/colors/pink.js
var pink = { pink50: "#FFF0FB", pink100: "#FFE5F8", pink200: "#FFD6F3", pink300: "#FFC2EE", pink400: "#FFA3E5", pink500: "#FF7AD9", pink600: "#FF4ECD", pink700: "#D6009A", pink800: "#B80084", pink900: "#4D0037" };
var pinkDark = { pink50: "#330025", pink100: "#470033", pink200: "#5C0042", pink300: "#750054", pink400: "#8A0063", pink500: "#AD007C", pink600: "#FF4ECD", pink700: "#FF2EC4", pink800: "#FF6BD5", pink900: "#FFEBF9" };

// node_modules/@nextui-org/react/esm/theme/colors/gray.js
var gray = { gray50: "#F1F3F5", gray100: "#ECEEF0", gray200: "#E6E8EB", gray300: "#DFE3E6", gray400: "#D7DBDF", gray500: "#C1C8CD", gray600: "#889096", gray700: "#7E868C", gray800: "#687076", gray900: "#11181C" };
var grayDark = { gray50: "#16181A", gray100: "#26292B", gray200: "#2B2F31", gray300: "#313538", gray400: "#3A3F42", gray500: "#4C5155", gray600: "#697177", gray700: "#787F85", gray800: "#9BA1A6", gray900: "#ECEDEE" };

// node_modules/@nextui-org/react/esm/theme/light-theme.js
var light_theme_default = { colors: { background: "$white", backgroundAlpha: "rgba(255, 255, 255, 0.8)", foreground: "$black", backgroundContrast: "$white", ...blue, ...purple, ...green, ...yellow, ...red, ...cyan, ...pink, ...gray, textLight: addColorAlpha(gray.gray900, 0.2), text: "$gray900", linkLight: addColorAlpha(blue.blue600, 0.2), link: "$blue600", codeLight: "$pink100", code: "$pink600", selection: "$blue200", border: "rgba(0, 0, 0, 0.15)" }, shadows: { xs: "0 2px 8px 1px rgb(104 112 118 / 0.07), 0 1px 1px -1px rgb(104 112 118 / 0.04)", sm: "0 2px 8px 2px rgb(104 112 118 / 0.07), 0 2px 4px -1px rgb(104 112 118 / 0.04)", md: "0 12px 20px 6px rgb(104 112 118 / 0.08)", lg: "0 12px 34px 6px rgb(104 112 118 / 0.18)", xl: "0 25px 65px 0px rgb(104 112 118 / 0.35)" }, dropShadows: { xs: "drop-shadow(0 2px 4px rgb(104 112 118 / 0.07)) drop-shadow(0 1px 1px rgb(104 112 118 / 0.04))", sm: "drop-shadow(0 2px 8px rgb(104 112 118 / 0.07)) drop-shadow(0 2px 4px rgb(104 112 118 / 0.04))", md: "drop-shadow(0 4px 12px rgb(104 112 118 / 0.08)) drop-shadow(0 20px 8px rgb(104 112 118 / 0.04))", lg: "drop-shadow(0 12px 24px rgb(104 112 118 / 0.15)) drop-shadow(0 12px 14px rgb(104 112 118 / 0.1))", xl: "drop-shadow(0 25px 34px rgb(104 112 118 / 0.35))" } };

// node_modules/@nextui-org/react/esm/theme/dark-theme.js
var dark_theme_default = { colors: { background: "$black", backgroundAlpha: "rgba(0, 0, 0, 0.6)", foreground: "$white", backgroundContrast: "$accents0", ...blueDark, ...purpleDark, ...greenDark, ...yellowDark, ...redDark, ...cyanDark, ...pinkDark, ...grayDark, primaryLight: "$blue50", primaryLightHover: "$blue100", primaryLightActive: "$blue200", primaryLightContrast: "$blue600", secondaryLight: "$purple50", secondaryLightHover: "$purple100", secondaryLightActive: "$purple200", secondaryLightContrast: "$purple800", secondary: "$purple700", secondaryBorder: "$purple500", secondaryBorderHover: "$purple600", secondarySolidHover: "$purple700", secondaryShadow: "$purple500", successLight: "$green50", successLightHover: "$green100", successLightActive: "$green200", warningLight: "$yellow50", warningLightHover: "$yellow100", warningLightActive: "$yellow200", errorLight: "$red50", errorLightHover: "$red100", errorLightActive: "$red200", errorLightContrast: "$red700", neutralLight: "$gray200", neutralLightHover: "$gray300", neutralLightActive: "$gray400", neutralSolidContrast: "$white", textLight: addColorAlpha(grayDark.gray900, 0.2), text: "$gray900", linkLight: addColorAlpha(blueDark.blue600, 0.2), link: "$blue700", codeLight: "$cyan50", code: "$cyan600", selection: "$pink800", border: "rgba(255, 255, 255, 0.15)" }, shadows: { xs: "0 2px 8px 1px rgb(0 0 0 / 0.07), 0 1px 1px -1px rgb(0 0 0 / 0.04)", sm: "0 2px 8px 2px rgb(0 0 0 / 0.07), 0 2px 4px -1px rgb(0 0 0 / 0.04)", md: "0 12px 20px 6px rgb(0 0 0 / 0.08)", lg: "0 12px 34px 6px rgb(0 0 0 / 0.18)", xl: "0 25px 65px 0px rgb(0 0 0 / 0.35)" }, dropShadows: { xs: "drop-shadow(0 2px 4px rgb(0 0 0 / 0.07)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.04))", sm: "drop-shadow(0 2px 8px rgb(0 0 0 / 0.07)) drop-shadow(0 2px 4px rgb(0 0 0 / 0.04))", md: "drop-shadow(0 4px 12px rgb(0 0 0 / 0.08)) drop-shadow(0 20px 8px rgb(0 0 0 / 0.04))", lg: "drop-shadow(0 12px 24px rgb(0 0 0 / 0.15)) drop-shadow(0 12px 14px rgb(0 0 0 / 0.1))", xl: "drop-shadow(0 25px 34px rgb(0 0 0 / 0.35))" } };

// node_modules/@nextui-org/react/esm/theme/stitches.config.js
var m2 = q2({ ...common_default, theme: { ...common_default.theme, shadows: { ...light_theme_default.shadows }, dropShadows: { ...light_theme_default.dropShadows }, colors: { ...common_default.theme.colors, ...light_theme_default.colors } } });
var createThemeBase = m2.createTheme;
var styled = m2.styled;
var css = m2.css;
var globalCss = m2.globalCss;
var keyframes = m2.keyframes;
var getCssText = m2.getCssText;
var theme = m2.theme;
var config = m2.config;
var createTheme = ({ type: e15, theme: o14, className: m13 }) => {
  if (!e15)
    throw new Error("Theme type is required");
  return createThemeBase(m13 || `${e15}-theme`, t2("dark" === e15 ? dark_theme_default : light_theme_default, o14));
};

// node_modules/@nextui-org/react/esm/theme/theme-context.js
var defaultContext = { isDark: false, theme, type: "light" };
var o3 = Cn.createContext(defaultContext);
var theme_context_default = o3;

// node_modules/@nextui-org/react/esm/use-theme/use-theme.js
var use_theme_default = () => Cn.useContext(theme_context_default);

// node_modules/@nextui-org/react/esm/use-theme/index.js
var use_theme_default2 = use_theme_default;

// node_modules/@nextui-org/react/esm/use-portal/use-portal.js
init_compat_module();

// node_modules/@nextui-org/react/esm/use-ssr/use-ssr.js
init_compat_module();
var use_ssr_default = () => {
  const [n15, r14] = h(false);
  return p(() => {
    r14(Boolean("undefined" != typeof window && window.document && window.document.createElement));
  }, []), { isBrowser: n15, isServer: !n15 };
};

// node_modules/@nextui-org/react/esm/use-ssr/index.js
var use_ssr_default2 = use_ssr_default;

// node_modules/@nextui-org/react/esm/utils/collections.js
init_compat_module();
var getId = () => Math.random().toString(32).slice(2, 10);
var pick = (e15, t9) => e15.reduce((e16, n15) => (e16[n15] = t9[n15], e16), {});
var pickChild = (t9, n15) => {
  let r14 = [];
  return [Cn.Children.map(t9, (t10) => Cn.isValidElement(t10) && t10.type === n15 ? (r14.push(t10), null) : t10), r14.length >= 0 ? r14 : void 0];
};
var pickSingleChild = (e15, t9) => {
  const [n15, r14] = pickChild(e15, t9);
  let o14 = null;
  return r14 && r14.length >= 1 && (o14 = r14.length >= 0 ? r14[0] : void 0), [n15, o14];
};
var isChildElement = (e15, t9) => {
  if (!e15 || !t9)
    return false;
  let n15 = t9;
  for (; n15; ) {
    if (n15 === e15)
      return true;
    n15 = n15.parentNode;
  }
  return false;
};
var isMac = () => !!Boolean("undefined" != typeof window && window.document && window.document.createElement) && navigator.platform.toUpperCase().indexOf("MAC") >= 0;
var setChildrenIndex = (t9, n15 = []) => {
  if (0 === Cn.Children.count(t9))
    return [];
  const r14 = 0 === n15.length, o14 = (t10, n16 = {}) => Cn.cloneElement(t10, n16);
  let i13 = 0;
  return Cn.Children.map(t9, (t10) => {
    if (!Cn.isValidElement(t10))
      return t10;
    if (i13 += 1, r14)
      return o14(t10, { index: i13 });
    return n15.find((e15) => e15 === t10.type) ? o14(t10, { index: i13 }) : (i13 -= 1, t10);
  });
};

// node_modules/@nextui-org/react/esm/use-portal/use-portal.js
var n2 = (t9) => {
  const e15 = document.createElement("div");
  return e15.setAttribute("id", t9), e15;
};
var use_portal_default = (l13 = getId(), u9) => {
  const i13 = `nextui-${l13}`, { isBrowser: s9 } = use_ssr_default2(), [c15, d11] = h(s9 ? n2(i13) : null);
  return p(() => {
    const t9 = (u9 ? u9() : null) || document.body, e15 = null == t9 ? void 0 : t9.querySelector(`#${i13}`), o14 = e15 || n2(i13);
    e15 || t9.appendChild(o14), d11(o14);
  }, []), c15;
};

// node_modules/@nextui-org/react/esm/use-portal/index.js
var use_portal_default2 = use_portal_default;

// node_modules/@nextui-org/react/esm/use-body-scroll/use-body-scroll.js
init_compat_module();
var n3 = { scrollLayer: false };
var o4 = /* @__PURE__ */ new Map();
var u2 = (e15) => !!(e15.touches && e15.touches.length > 1) || (e15.preventDefault(), false);
var use_body_scroll_default = (c15, s9) => {
  if ("undefined" == typeof document)
    return [false, (e15) => e15];
  const d11 = c15 || _(document.body), [i13, a13] = h(false), l13 = { ...n3, ...s9 || {} }, f5 = () => !l13.scrollLayer && (!("undefined" == typeof window || !window.navigator) && /iP(ad|hone|od)/.test(window.navigator.platform));
  return p(() => {
    if (!d11 || !d11.current)
      return;
    const e15 = d11.current.style.overflow;
    if (i13) {
      if (o4.has(d11.current))
        return;
      return f5() ? document.addEventListener("touchmove", u2, { passive: false }) : d11.current.style.overflow = "hidden", void o4.set(d11.current, { last: e15 });
    }
    if (o4.has(d11.current)) {
      if (f5())
        document.removeEventListener("touchmove", u2);
      else {
        const e16 = o4.get(d11.current);
        d11.current.style.overflow = e16.last;
      }
      o4.delete(d11.current);
    }
  }, [i13, d11]), [i13, a13];
};

// node_modules/@nextui-org/react/esm/use-body-scroll/index.js
var use_body_scroll_default2 = use_body_scroll_default;

// node_modules/@nextui-org/react/esm/use-click-away/use-click-away.js
init_compat_module();
var use_click_away_default = (e15, n15) => {
  p(() => {
    const t9 = (t10) => {
      const r14 = e15.current;
      t10 && r14 && !r14.contains(t10.target) && n15(t10);
    };
    return document.addEventListener("click", t9), () => document.removeEventListener("click", t9);
  }, [e15, n15]);
};

// node_modules/@nextui-org/react/esm/use-click-away/index.js
var use_click_away_default2 = use_click_away_default;

// node_modules/@nextui-org/react/esm/use-clipboard/use-clipboard.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/console.js
var o5 = {};
var warn = (n15, e15) => {
  const r14 = `[Next UI]${e15 ? ` [${e15}]` : " "}: ${n15}`;
  if ("undefined" != typeof console && !o5[r14]) {
    if (o5[r14] = true, true)
      return console.error(r14);
    console.warn(r14);
  }
};

// node_modules/@nextui-org/react/esm/utils/assertion.js
var __DEV__ = true;
function isFunction(t9) {
  return "function" == typeof t9;
}

// node_modules/@nextui-org/react/esm/use-clipboard/use-clipboard.js
var n4 = { onError: () => __DEV__ && warn("Failed to copy.", "use-clipboard") };
var use_clipboard_default = (t9 = n4) => {
  const r14 = use_portal_default2("clipboard"), c15 = T((o14) => {
    ((o15, e15) => {
      if (!o15 || !e15)
        return;
      const r15 = window.getSelection();
      if (!r15)
        return;
      o15.style.whiteSpace = "pre", o15.textContent = e15;
      const n15 = window.document.createRange();
      r15.removeAllRanges(), n15.selectNode(o15), r15.addRange(n15);
      try {
        window.document.execCommand("copy");
      } catch (o16) {
        t9.onError && t9.onError();
      }
      r15.removeAllRanges(), o15 && (o15.textContent = "");
    })(r14, o14);
  }, [r14]);
  return { copy: c15 };
};

// node_modules/@nextui-org/react/esm/use-clipboard/index.js
var use_clipboard_default2 = use_clipboard_default;

// node_modules/@nextui-org/react/esm/use-click-anywhere/use-click-anywhere.js
init_compat_module();
var use_click_anywhere_default = (t9) => {
  p(() => {
    const e15 = (e16) => t9(e16);
    return document.addEventListener("click", e15), () => document.removeEventListener("click", e15);
  }, [t9]);
};

// node_modules/@nextui-org/react/esm/use-click-anywhere/index.js
var use_click_anywhere_default2 = use_click_anywhere_default;

// node_modules/@nextui-org/react/esm/use-input/use-input.js
var use_input_default = (t9) => {
  const [r14, a13, u9] = use_current_state_default2(t9);
  return { value: r14, setValue: a13, currentRef: u9, reset: () => a13(t9), bindings: { value: r14, onChange: (e15) => {
    "object" == typeof e15 && e15.target ? a13(e15.target.value) : a13(e15);
  } } };
};

// node_modules/@nextui-org/react/esm/use-input/index.js
var use_input_default2 = use_input_default;

// node_modules/@nextui-org/react/esm/use-keyboard/use-keyboard.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/object.js
var isObject = (e15) => e15 && "object" == typeof e15;
var copyObject = (e15) => isObject(e15) ? e15 instanceof Array ? [...e15] : { ...e15 } : e15;
var getKeyValue = (e15, t9) => isObject(e15) ? e15 instanceof Array ? [...e15] : e15[t9] : e15;
var arrayToObject = (e15) => e15.length && Array.isArray(e15) ? e15.reduce((e16, t9) => ({ ...e16, ...t9 }), {}) : {};

// node_modules/@nextui-org/react/esm/use-keyboard/codes.js
var KeyCode = { Unknown: 0, Backspace: 8, Tab: 9, Enter: 13, Shift: 16, Ctrl: 17, Alt: 18, PauseBreak: 19, CapsLock: 20, Escape: 27, Space: 32, PageUp: 33, PageDown: 34, End: 35, Home: 36, LeftArrow: 37, UpArrow: 38, RightArrow: 39, DownArrow: 40, Insert: 45, Delete: 46, KEY_0: 48, KEY_1: 49, KEY_2: 50, KEY_3: 51, KEY_4: 52, KEY_5: 53, KEY_6: 54, KEY_7: 55, KEY_8: 56, KEY_9: 57, KEY_A: 65, KEY_B: 66, KEY_C: 67, KEY_D: 68, KEY_E: 69, KEY_F: 70, KEY_G: 71, KEY_H: 72, KEY_I: 73, KEY_J: 74, KEY_K: 75, KEY_L: 76, KEY_M: 77, KEY_N: 78, KEY_O: 79, KEY_P: 80, KEY_Q: 81, KEY_R: 82, KEY_S: 83, KEY_T: 84, KEY_U: 85, KEY_V: 86, KEY_W: 87, KEY_X: 88, KEY_Y: 89, KEY_Z: 90, Meta: 91, F1: 112, F2: 113, F3: 114, F4: 115, F5: 116, F6: 117, F7: 118, F8: 119, F9: 120, F10: 121, F11: 122, F12: 123, NumLock: 144, ScrollLock: 145, Equal: 187, Minus: 189, Backquote: 192, Backslash: 220 };
var KeyMod = { CtrlCmd: 2048, Shift: 1024, Alt: 512, WinCtrl: 256 };

// node_modules/@nextui-org/react/esm/use-keyboard/helper.js
var getCtrlKeysByPlatform = () => ({ CtrlCmd: isMac() ? "metaKey" : "ctrlKey", WinCtrl: isMac() ? "ctrlKey" : "metaKey" });
var getActiveModMap = (r14) => {
  const e15 = r14.filter((r15) => !!getKeyValue(KeyMod, r15)), l13 = { CtrlCmd: false, Shift: false, Alt: false, WinCtrl: false };
  return e15.forEach((r15) => {
    const e16 = getKeyValue(KeyMod, r15);
    l13[e16] = true;
  }), l13;
};

// node_modules/@nextui-org/react/esm/use-keyboard/use-keyboard.js
var use_keyboard_default = (p7, s9, i13 = {}) => {
  const a13 = Array.isArray(s9) ? s9 : [s9], { disableGlobalEvent: y3 = false, capture: l13 = false, stopPropagation: d11 = false, preventDefault: u9 = false, event: m13 = "keydown" } = i13, f5 = getActiveModMap(a13), C4 = a13.filter((e15) => !getKeyValue(KeyMod, e15)), { CtrlCmd: c15, WinCtrl: k6 } = getCtrlKeysByPlatform(), K = (e15) => {
    f5.Shift && !e15.shiftKey || f5.Alt && !e15.altKey || f5.CtrlCmd && !e15[c15] || f5.WinCtrl && !e15[k6] || C4.length > 0 && !C4.includes(e15.keyCode) || (d11 && e15.stopPropagation(), u9 && e15.preventDefault(), p7 && p7(e15));
  };
  p(() => (y3 || document.addEventListener(m13, K), () => {
    document.removeEventListener(m13, K);
  }), [y3]);
  const v4 = (e15, t9 = false) => e15 !== m13 || t9 !== l13 ? () => {
  } : (e16) => K(e16);
  return { bindings: { onKeyDown: v4("keydown"), onKeyDownCapture: v4("keydown", true), onKeyPress: v4("keypress"), onKeyPressCapture: v4("keypress", true), onKeyUp: v4("keyup"), onKeyUpCapture: v4("keyup", true) } };
};

// node_modules/@nextui-org/react/esm/use-keyboard/index.js
var use_keyboard_default2 = use_keyboard_default;

// node_modules/@nextui-org/react/esm/use-pagination/index.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/numbers.js
function valueToPercent(r14, n15, e15) {
  return 100 * (r14 - n15) / (e15 - n15);
}
function range(r14, n15) {
  const e15 = n15 - r14 + 1;
  return Array.from({ length: e15 }, (n16, e16) => e16 + r14);
}

// node_modules/@nextui-org/react/esm/use-pagination/index.js
var DOTS = "dots";
var use_pagination_default = ({ page: o14, total: a13, siblings: s9 = 1, boundaries: u9 = 1, initialPage: l13 = 1, onChange: c15 }) => {
  const [f5, m13] = h(o14 || l13), g4 = F(() => void 0 !== o14, [o14]);
  p(() => {
    o14 && o14 !== f5 && m13(o14);
  }, [o14, f5]);
  const p7 = T((t9) => {
    g4 || m13(t9), null == c15 || c15(t9);
  }, [m13, c15, g4]), D3 = T((t9) => {
    p7(t9 <= 0 ? 1 : t9 > a13 ? a13 : t9);
  }, [p7, a13]);
  return { range: F(() => {
    if (2 * s9 + 3 + 2 * u9 >= a13)
      return range(1, a13);
    const t9 = Math.max(f5 - s9, u9), r14 = Math.min(f5 + s9, a13 - u9), e15 = t9 > u9 + 2, n15 = r14 < a13 - (u9 + 1);
    if (!e15 && n15) {
      return [...range(1, 2 * s9 + u9 + 2), DOTS, ...range(a13 - (u9 - 1), a13)];
    }
    if (e15 && !n15) {
      const t10 = u9 + 1 + 2 * s9;
      return [...range(1, u9), DOTS, ...range(a13 - t10, a13)];
    }
    return [...range(1, u9), DOTS, ...range(t9, r14), DOTS, ...range(a13 - u9 + 1, a13)];
  }, [a13, s9, f5]), active: f5, setPage: D3, next: () => D3(f5 + 1), previous: () => D3(f5 - 1), first: () => D3(1), last: () => D3(a13) };
};

// node_modules/@nextui-org/react/esm/use-scroll-position/use-scroll-position.js
init_compat_module();
var e2 = "undefined" != typeof window;
function t3(n15) {
  return e2 ? n15 ? { x: n15.scrollLeft, y: n15.scrollTop } : { x: window.scrollX, y: window.scrollY } : { x: 0, y: 0 };
}
var use_scroll_position_default = (e15) => {
  const { elementRef: l13, wait: o14 = 30, callback: c15, enabled: u9 } = e15, i13 = _(u9 ? t3(null == l13 ? void 0 : l13.current) : { x: 0, y: 0 });
  let s9 = null;
  const d11 = () => {
    const n15 = t3(null == l13 ? void 0 : l13.current);
    "function" == typeof c15 && c15({ prevPos: i13.current, currPos: n15 }), i13.current = n15, s9 = null;
  };
  return p(() => {
    if (!u9)
      return;
    const n15 = () => {
      o14 ? null === s9 && (s9 = setTimeout(d11, o14)) : d11();
    }, r14 = (null == l13 ? void 0 : l13.current) || window;
    return r14.addEventListener("scroll", n15), () => r14.removeEventListener("scroll", n15);
  }, [null == l13 ? void 0 : l13.current, o14, u9]), i13.current;
};

// node_modules/@nextui-org/react/esm/use-scroll-position/index.js
var use_scroll_position_default2 = use_scroll_position_default;

// node_modules/@nextui-org/react/esm/use-intersection-observer/use-intersection-observer.js
init_compat_module();
function r2(r14, { threshold: t9 = 0, root: o14 = null, rootMargin: i13 = "0%", freezeOnceVisible: s9 = false } = {}) {
  const [c15, l13] = h(), u9 = (null == c15 ? void 0 : c15.isIntersecting) && s9, d11 = !(null == c15 || !c15.isIntersecting), f5 = ([e15]) => {
    l13(e15);
  };
  return p(() => {
    if ("undefined" == typeof window)
      return;
    const e15 = null == r14 ? void 0 : r14.current;
    if (!!!window.IntersectionObserver || u9 || !e15)
      return;
    const n15 = new IntersectionObserver(f5, { threshold: t9, root: o14, rootMargin: i13 });
    return n15.observe(e15), () => n15.disconnect();
  }, [r14, t9, o14, i13, u9]), { entry: c15, setEntry: l13, isVisible: d11, isFrozen: u9 };
}
var use_intersection_observer_default = r2;

// node_modules/@nextui-org/react/esm/use-intersection-observer/index.js
var use_intersection_observer_default2 = use_intersection_observer_default;

// node_modules/@nextui-org/react/esm/use-drip/use-drip.js
init_compat_module();
var use_drip_default = (e15 = false, n15) => {
  const [r14, o14] = h(e15), [c15, i13] = h(0), [l13, u9] = h(0);
  return { visible: r14, x: c15, y: l13, onClick: (t9) => {
    if (!n15.current)
      return;
    const e16 = n15.current.getBoundingClientRect();
    o14(true), i13(t9.clientX - e16.left), u9(t9.clientY - e16.top);
  }, onCompleted: () => {
    o14(false), i13(0), u9(0);
  } };
};

// node_modules/@nextui-org/react/esm/use-drip/index.js
var use_drip_default2 = use_drip_default;

// node_modules/@nextui-org/react/esm/utils/drip.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/with-defaults.js
var with_defaults_default = (e15, t9) => (e15.defaultProps = t9, e15);

// node_modules/@nextui-org/react/esm/utils/clsx.js
function r3(e15) {
  var t9, f5, n15 = "";
  if ("string" == typeof e15 || "number" == typeof e15)
    n15 += e15;
  else if ("object" == typeof e15)
    if (Array.isArray(e15))
      for (t9 = 0; t9 < e15.length; t9++)
        e15[t9] && (f5 = r3(e15[t9])) && (n15 && (n15 += " "), n15 += f5);
    else
      for (t9 in e15)
        e15[t9] && (n15 && (n15 += " "), n15 += t9);
  return n15;
}
function clsx_default(...e15) {
  for (var t9, f5, n15 = 0, o14 = ""; n15 < e15.length; )
    (t9 = e15[n15++]) && (f5 = r3(t9)) && (o14 && (o14 += " "), o14 += f5);
  return o14;
}

// node_modules/preact/compat/jsx-runtime.mjs
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/drip.js
var a2 = keyframes({ "0%": { opacity: 0, transform: "scale(0.25)" }, "30%": { opacity: 1 }, "80%": { opacity: 0.5 }, "100%": { transform: "scale(28)", opacity: 0 } });
var StyledDrip = styled("div", { position: "absolute", left: 0, right: 0, top: 0, bottom: 0, "& svg": { position: "absolute", animation: `350ms linear ${a2}`, animationFillMode: "forwards", width: "$md", height: "$md" } });
var m3 = ({ visible: t9, x: o14, y: r14, color: l13, onCompleted: a13, className: m13, ...c15 }) => {
  const d11 = _(null), p7 = Number.isNaN(+r14) ? 0 : r14 - 10, f5 = Number.isNaN(+o14) ? 0 : o14 - 10;
  return p(() => {
    let t10 = d11.current;
    if (t10)
      return t10.addEventListener("animationend", a13), () => {
        t10 && t10.removeEventListener("animationend", a13);
      };
  }), t9 ? o(StyledDrip, { ref: d11, className: clsx_default("nextui-drip", m13), ...c15, children: o("svg", { height: "20", style: { top: p7, left: f5 }, viewBox: "0 0 20 20", width: "20", children: o("g", { fill: "none", fillRule: "evenodd", stroke: "none", strokeWidth: "1", children: o("g", { className: "nextui-drip-filler", fill: l13, children: o("rect", { height: "100%", rx: "10", width: "100%" }) }) }) }) }) : null;
};
var c2 = Cn.memo(m3);
var drip_default = with_defaults_default(c2, { visible: false, x: 0, y: 0, className: "" });

// node_modules/@nextui-org/react/esm/css-baseline/css-baseline.js
init_compat_module();
var n5 = globalCss({ "*, *:before, *:after": { boxSizing: "border-box", textRendering: "geometricPrecision", WebkitTapHighlightColor: "transparent" }, html: { fontSize: "$base" }, body: { margin: 0, padding: 0, minHeight: "100%", position: "relative", overflowX: "hidden", WebkitFontSmoothing: "antialiased", MozOsxFontSmoothing: "grayscale", textRendering: "optimizeLegibility", fontSize: "$base", lineHeight: "$md", fontFamily: "$sans" }, "html, body": { backgroundColor: "$background", color: "$text" }, "p, small": { color: "inherit", letterSpacing: "$tighter", fontWeight: "$normal", fontFamily: "$sans" }, p: { fontSize: "$base", lineHeight: "$lg" }, small: { margin: 0, lineHeight: "$xs", fontSize: "$xs" }, b: { fontWeight: "$semibold" }, span: { fontSize: "inherit", color: "inherit", fontWeight: "inherit" }, img: { maxWidth: "100%" }, a: { cursor: "pointer", fontSize: "inherit", WebkitTouchCallout: "none", WebkitTapHighlightColor: "rgba(0, 0, 0, 0)", WebkitBoxAlign: "center", alignItems: "center", color: "$link", textDecoration: "none" }, "a:hover": { textDecoration: "none" }, "ul,ol": { padding: 0, listStyleType: "none", margin: "$sm $sm $sm $lg", color: "$foreground" }, ol: { listStyleType: "decimal" }, li: { marginBottom: "$5", fontSize: "$base", lineHeight: "$lg" }, "h1,h2,h3,h4,h5,h6": { color: "inherit", margin: "0 0 $5 0" }, h1: { letterSpacing: "$tighter", fontSize: "$5xl", lineHeight: "$md", fontWeight: "$bold" }, h2: { letterSpacing: "$tighter", fontSize: "$4xl", fontWeight: "$semibold" }, h3: { letterSpacing: "$tighter", fontSize: "$2xl", fontWeight: "$semibold" }, h4: { letterSpacing: "$tighter", fontSize: "$xl", fontWeight: "$semibold" }, h5: { letterSpacing: "$tight", fontSize: "$md", fontWeight: "$semibold" }, h6: { letterSpacing: "$tight", fontSize: "$sm", fontWeight: "$semibold" }, "button, input, select,textarea": { fontFamily: "inherit", fontSize: "inherit", lineHeight: "inherit", color: "inherit", margin: 0 }, "button:focus, input:focus, select:focus, textarea:focus": { outline: "none" }, code: { color: "$code", padding: "$1 $2", borderRadius: "$xs", bg: "$codeLight", fontFamily: "$mono", fontSize: "$sm", whiteSpace: "pre-wrap", transition: "opacity 0.25s ease 0s" }, "code:hover": { opacity: 0.8 }, pre: { overflow: "auto", whiteSpace: "pre", textAlign: "left", fontSize: "$sm", borderRadius: "$lg", padding: "$md $lg", margin: "$lg 0", fontFamily: "$mono", lineHeight: "$md", webkitOverflowScrolling: "touch" }, "pre code": { color: "$foreground", fontSize: "$sm", lineHeight: "$sm", whiteSpace: "pre" }, "pre code:before,pre code:after": { display: "none" }, "pre p": { margin: 0 }, "pre::-webkit-scrollbar": { display: "none", width: 0, height: 0, background: "transparent" }, hr: { background: "$border", borderColor: "transparent", borderWidth: "0px", borderStyle: "none", height: "1px" }, details: { backgroundColor: "$accents1", border: "none" }, "details:focus, details:hover, details:active": { outline: "none" }, summary: { cursor: "pointer", userSelect: "none", listStyle: "none", outline: "none" }, "summary::-webkit-details-marker, summary::before": { display: "none" }, "summary::-moz-list-bullet": { fontSize: 0 }, "summary:focus, summary:hover, summary:active": { outline: "none", listStyle: "none" }, "::selection": { backgroundColor: "$selection" }, blockquote: { padding: "$md $lg", color: "$accents7", backgroundColor: "$accents0", borderRadius: "$lg", margin: "$10 0" }, "blockquote *:first-child": { marginTop: 0 }, "blockquote *:last-child": { marginBottom: 0 }, kbd: { width: "fit-content", textAlign: "center", display: "inline-block", color: "$accents8", bg: "$accents0", border: "1px solid $border", boxShadow: "0 0 1px 0 rgb(0 0 0 / 14%)", fontFamily: "$sans", borderRadius: "5px", padding: "$1 $3", mx: "$1", lineHeight: "$sm", fontSize: "$sm" }, "kbd + kbd": { ml: "$2" }, "dl, dd, hr, figure, p": { margin: 0 } });
var r4 = ({ children: t9 }) => (n5(), o(Cn.Fragment, { children: t9 }));
var l2 = Cn.memo(r4);
l2.flush = () => o("style", { dangerouslySetInnerHTML: { __html: getCssText() }, id: "stitches" });
var css_baseline_default = l2;

// node_modules/@react-stately/data/dist/module.js
init_compat_module();
function $0d86e9c8f07f9a7b$export$79c0c687a5963b0a(opts, dispatch) {
  let { cursor, getKey } = opts;
  return {
    setSelectedKeys(selectedKeys) {
      dispatch(
        (state) => ({
          ...state,
          selectedKeys
        })
      );
    },
    setFilterText(filterText) {
      dispatch(
        (state) => ({
          ...state,
          filterText
        })
      );
    },
    insert(index, ...values) {
      dispatch(
        (state) => $0d86e9c8f07f9a7b$var$insert(state, index, ...values)
      );
    },
    insertBefore(key, ...values) {
      dispatch((state) => {
        let index = state.items.findIndex(
          (item) => getKey(item) === key
        );
        if (index === -1)
          return;
        return $0d86e9c8f07f9a7b$var$insert(state, index, ...values);
      });
    },
    insertAfter(key, ...values) {
      dispatch((state) => {
        let index = state.items.findIndex(
          (item) => getKey(item) === key
        );
        if (index === -1)
          return;
        return $0d86e9c8f07f9a7b$var$insert(state, index + 1, ...values);
      });
    },
    prepend(...values) {
      dispatch(
        (state) => $0d86e9c8f07f9a7b$var$insert(state, 0, ...values)
      );
    },
    append(...values) {
      dispatch(
        (state) => $0d86e9c8f07f9a7b$var$insert(state, state.items.length, ...values)
      );
    },
    remove(...keys) {
      dispatch((state) => {
        let keySet = new Set(keys);
        let items = state.items.filter(
          (item) => !keySet.has(getKey(item))
        );
        let selection = "all";
        if (state.selectedKeys !== "all") {
          selection = new Set(state.selectedKeys);
          for (let key of keys)
            selection.delete(key);
        }
        if (cursor == null && items.length === 0)
          selection = /* @__PURE__ */ new Set();
        return {
          ...state,
          items,
          selectedKeys: selection
        };
      });
    },
    removeSelectedItems() {
      dispatch((state) => {
        if (state.selectedKeys === "all")
          return {
            ...state,
            items: [],
            selectedKeys: /* @__PURE__ */ new Set()
          };
        let selectedKeys = state.selectedKeys;
        let items = state.items.filter(
          (item) => !selectedKeys.has(getKey(item))
        );
        return {
          ...state,
          items,
          selectedKeys: /* @__PURE__ */ new Set()
        };
      });
    },
    move(key, toIndex) {
      dispatch((state) => {
        let index = state.items.findIndex(
          (item) => getKey(item) === key
        );
        if (index === -1)
          return state;
        let copy = state.items.slice();
        let [item1] = copy.splice(index, 1);
        copy.splice(toIndex, 0, item1);
        return {
          ...state,
          items: copy
        };
      });
    },
    moveBefore(key1, keys) {
      dispatch((state) => {
        let toIndex = state.items.findIndex(
          (item) => getKey(item) === key1
        );
        if (toIndex === -1)
          return state;
        let keyArray = Array.isArray(keys) ? keys : [
          ...keys
        ];
        let indices = keyArray.map(
          (key) => state.items.findIndex(
            (item) => getKey(item) === key
          )
        ).sort();
        return $0d86e9c8f07f9a7b$var$move(state, indices, toIndex);
      });
    },
    moveAfter(key2, keys) {
      dispatch((state) => {
        let toIndex = state.items.findIndex(
          (item) => getKey(item) === key2
        );
        if (toIndex === -1)
          return state;
        let keyArray = Array.isArray(keys) ? keys : [
          ...keys
        ];
        let indices = keyArray.map(
          (key) => state.items.findIndex(
            (item) => getKey(item) === key
          )
        ).sort();
        return $0d86e9c8f07f9a7b$var$move(state, indices, toIndex + 1);
      });
    },
    update(key, newValue) {
      dispatch((state) => {
        let index = state.items.findIndex(
          (item) => getKey(item) === key
        );
        if (index === -1)
          return state;
        return {
          ...state,
          items: [
            ...state.items.slice(0, index),
            newValue,
            ...state.items.slice(index + 1)
          ]
        };
      });
    }
  };
}
function $0d86e9c8f07f9a7b$var$insert(state, index, ...values) {
  return {
    ...state,
    items: [
      ...state.items.slice(0, index),
      ...values,
      ...state.items.slice(index)
    ]
  };
}
function $0d86e9c8f07f9a7b$var$move(state, indices, toIndex) {
  for (let index of indices)
    if (index < toIndex)
      toIndex--;
  let moves = indices.map(
    (from) => ({
      from,
      to: toIndex++
    })
  );
  for (let i13 = 0; i13 < moves.length; i13++) {
    let a13 = moves[i13].from;
    for (let j2 = i13; j2 < moves.length; j2++) {
      let b6 = moves[j2].from;
      if (b6 > a13)
        moves[j2].from--;
    }
  }
  for (let i1 = 0; i1 < moves.length; i1++) {
    let a13 = moves[i1];
    for (let j2 = moves.length - 1; j2 > i1; j2--) {
      let b6 = moves[j2];
      if (b6.from < a13.to)
        a13.to++;
      else
        b6.from++;
    }
  }
  let copy = state.items.slice();
  for (let move of moves) {
    let [item] = copy.splice(move.from, 1);
    copy.splice(move.to, 0, item);
  }
  return {
    ...state,
    items: copy
  };
}
function $f86e6c1ec7da6ebb$var$reducer(data, action) {
  let selectedKeys;
  switch (data.state) {
    case "idle":
    case "error":
      switch (action.type) {
        case "loading":
        case "loadingMore":
        case "sorting":
        case "filtering":
          var _filterText, _sortDescriptor;
          return {
            ...data,
            filterText: (_filterText = action.filterText) !== null && _filterText !== void 0 ? _filterText : data.filterText,
            state: action.type,
            // Reset items to an empty list if loading, but not when sorting.
            items: action.type === "loading" ? [] : data.items,
            sortDescriptor: (_sortDescriptor = action.sortDescriptor) !== null && _sortDescriptor !== void 0 ? _sortDescriptor : data.sortDescriptor,
            abortController: action.abortController
          };
        case "update":
          return {
            ...data,
            ...action.updater(data)
          };
        case "success":
        case "error":
          return data;
        default:
          throw new Error(`Invalid action "${action.type}" in state "${data.state}"`);
      }
    case "loading":
    case "sorting":
    case "filtering":
      switch (action.type) {
        case "success":
          if (action.abortController !== data.abortController)
            return data;
          var _selectedKeys;
          selectedKeys = (_selectedKeys = action.selectedKeys) !== null && _selectedKeys !== void 0 ? _selectedKeys : data.selectedKeys;
          var _filterText1, _sortDescriptor1;
          return {
            ...data,
            filterText: (_filterText1 = action.filterText) !== null && _filterText1 !== void 0 ? _filterText1 : data.filterText,
            state: "idle",
            items: [
              ...action.items
            ],
            selectedKeys: selectedKeys === "all" ? "all" : new Set(selectedKeys),
            sortDescriptor: (_sortDescriptor1 = action.sortDescriptor) !== null && _sortDescriptor1 !== void 0 ? _sortDescriptor1 : data.sortDescriptor,
            abortController: null,
            cursor: action.cursor
          };
        case "error":
          if (action.abortController !== data.abortController)
            return data;
          return {
            ...data,
            state: "error",
            error: action.error,
            abortController: null
          };
        case "loading":
        case "loadingMore":
        case "sorting":
        case "filtering":
          data.abortController.abort();
          var _filterText2;
          return {
            ...data,
            filterText: (_filterText2 = action.filterText) !== null && _filterText2 !== void 0 ? _filterText2 : data.filterText,
            state: action.type,
            // Reset items to an empty list if loading, but not when sorting.
            items: action.type === "loading" ? [] : data.items,
            abortController: action.abortController
          };
        case "update":
          return {
            ...data,
            ...action.updater(data)
          };
        default:
          throw new Error(`Invalid action "${action.type}" in state "${data.state}"`);
      }
    case "loadingMore":
      switch (action.type) {
        case "success":
          var _selectedKeys1;
          selectedKeys = data.selectedKeys === "all" || action.selectedKeys === "all" ? "all" : /* @__PURE__ */ new Set([
            ...data.selectedKeys,
            ...(_selectedKeys1 = action.selectedKeys) !== null && _selectedKeys1 !== void 0 ? _selectedKeys1 : []
          ]);
          var _sortDescriptor2;
          return {
            ...data,
            state: "idle",
            items: [
              ...data.items,
              ...action.items
            ],
            selectedKeys,
            sortDescriptor: (_sortDescriptor2 = action.sortDescriptor) !== null && _sortDescriptor2 !== void 0 ? _sortDescriptor2 : data.sortDescriptor,
            abortController: null,
            cursor: action.cursor
          };
        case "error":
          if (action.abortController !== data.abortController)
            return data;
          return {
            ...data,
            state: "error",
            error: action.error
          };
        case "loading":
        case "sorting":
        case "filtering":
          data.abortController.abort();
          var _filterText3;
          return {
            ...data,
            filterText: (_filterText3 = action.filterText) !== null && _filterText3 !== void 0 ? _filterText3 : data.filterText,
            state: action.type,
            // Reset items to an empty list if loading, but not when sorting.
            items: action.type === "loading" ? [] : data.items,
            abortController: action.abortController
          };
        case "loadingMore":
          action.abortController.abort();
          return data;
        case "update":
          return {
            ...data,
            ...action.updater(data)
          };
        default:
          throw new Error(`Invalid action "${action.type}" in state "${data.state}"`);
      }
    default:
      throw new Error(`Invalid state "${data.state}"`);
  }
}
function $f86e6c1ec7da6ebb$export$bc3384a35de93d66(options) {
  const {
    load,
    sort,
    initialSelectedKeys,
    initialSortDescriptor,
    getKey = (item) => item.id || item.key,
    initialFilterText = ""
  } = options;
  let [data, dispatch] = s($f86e6c1ec7da6ebb$var$reducer, {
    state: "idle",
    error: null,
    items: [],
    selectedKeys: initialSelectedKeys === "all" ? "all" : new Set(initialSelectedKeys),
    sortDescriptor: initialSortDescriptor,
    filterText: initialFilterText
  });
  const dispatchFetch = async (action, fn) => {
    let abortController = new AbortController();
    try {
      dispatch({
        ...action,
        abortController
      });
      var _filterText;
      let previousFilterText = (_filterText = action.filterText) !== null && _filterText !== void 0 ? _filterText : data.filterText;
      var _sortDescriptor;
      let response = await fn({
        items: data.items.slice(),
        selectedKeys: data.selectedKeys,
        sortDescriptor: (_sortDescriptor = action.sortDescriptor) !== null && _sortDescriptor !== void 0 ? _sortDescriptor : data.sortDescriptor,
        signal: abortController.signal,
        cursor: action.type === "loadingMore" ? data.cursor : null,
        filterText: previousFilterText
      });
      var _filterText4;
      let filterText = (_filterText4 = response.filterText) !== null && _filterText4 !== void 0 ? _filterText4 : previousFilterText;
      dispatch({
        type: "success",
        ...response,
        abortController
      });
      if (filterText && filterText !== previousFilterText && !abortController.signal.aborted)
        dispatchFetch({
          type: "filtering",
          filterText
        }, load);
    } catch (e15) {
      dispatch({
        type: "error",
        error: e15,
        abortController
      });
    }
  };
  p(() => {
    dispatchFetch({
      type: "loading"
    }, load);
  }, []);
  return {
    items: data.items,
    selectedKeys: data.selectedKeys,
    sortDescriptor: data.sortDescriptor,
    isLoading: data.state === "loading" || data.state === "loadingMore" || data.state === "sorting" || data.state === "filtering",
    loadingState: data.state,
    error: data.error,
    filterText: data.filterText,
    getItem(key) {
      return data.items.find(
        (item) => getKey(item) === key
      );
    },
    reload() {
      dispatchFetch({
        type: "loading"
      }, load);
    },
    loadMore() {
      if (data.state === "loadingMore" || data.state === "filtering" || data.cursor == null)
        return;
      dispatchFetch({
        type: "loadingMore"
      }, load);
    },
    sort(sortDescriptor) {
      dispatchFetch({
        type: "sorting",
        sortDescriptor
      }, sort || load);
    },
    ...$0d86e9c8f07f9a7b$export$79c0c687a5963b0a({
      ...options,
      getKey,
      cursor: data.cursor
    }, (fn) => {
      dispatch({
        type: "update",
        updater: fn
      });
    }),
    setFilterText(filterText) {
      dispatchFetch({
        type: "filtering",
        filterText
      }, load);
    }
  };
}

// node_modules/@react-aria/i18n/dist/real-module.js
init_compat_module();

// node_modules/@react-aria/ssr/dist/module.js
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0
};
var $704cf1d3b684cc5c$var$SSRContext = Cn.createContext($704cf1d3b684cc5c$var$defaultContext);
function $704cf1d3b684cc5c$export$9f8ac96af4b1b2ae(props) {
  let cur = q($704cf1d3b684cc5c$var$SSRContext);
  let value = F(
    () => ({
      // If this is the first SSRProvider, start with an empty string prefix, otherwise
      // append and increment the counter.
      prefix: cur === $704cf1d3b684cc5c$var$defaultContext ? "" : `${cur.prefix}-${++cur.current}`,
      current: 0
    }),
    [
      cur
    ]
  );
  return Cn.createElement($704cf1d3b684cc5c$var$SSRContext.Provider, {
    value
  }, props.children);
}
var $704cf1d3b684cc5c$var$canUseDOM = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
function $704cf1d3b684cc5c$export$619500959fc48b26(defaultId) {
  let ctx = q($704cf1d3b684cc5c$var$SSRContext);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext && !$704cf1d3b684cc5c$var$canUseDOM)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  return F(
    () => defaultId || `react-aria${ctx.prefix}-${++ctx.current}`,
    [
      defaultId
    ]
  );
}
function $704cf1d3b684cc5c$export$535bd6ca7f90a273() {
  let cur = q($704cf1d3b684cc5c$var$SSRContext);
  let isInSSRContext = cur !== $704cf1d3b684cc5c$var$defaultContext;
  let [isSSR, setIsSSR] = h(isInSSRContext);
  if (typeof window !== "undefined" && isInSSRContext)
    y(() => {
      setIsSSR(false);
    }, []);
  return isSSR;
}

// node_modules/@internationalized/string/dist/import.mjs
var $5b160d28a433310d$export$c17fa47878dc55b6 = class {
  /** Returns a localized string for the given key and locale. */
  getStringForLocale(key, locale) {
    let strings = this.strings[locale];
    if (!strings) {
      strings = $5b160d28a433310d$var$getStringsForLocale(locale, this.strings, this.defaultLocale);
      this.strings[locale] = strings;
    }
    let string = strings[key];
    if (!string)
      throw new Error(`Could not find intl message ${key} in ${locale} locale`);
    return string;
  }
  constructor(messages, defaultLocale = "en-US") {
    this.strings = {
      ...messages
    };
    this.defaultLocale = defaultLocale;
  }
};
function $5b160d28a433310d$var$getStringsForLocale(locale, strings, defaultLocale = "en-US") {
  if (strings[locale])
    return strings[locale];
  let language = $5b160d28a433310d$var$getLanguage(locale);
  if (strings[language])
    return strings[language];
  for (let key in strings) {
    if (key.startsWith(language + "-"))
      return strings[key];
  }
  return strings[defaultLocale];
}
function $5b160d28a433310d$var$getLanguage(locale) {
  if (Intl.Locale)
    return new Intl.Locale(locale).language;
  return locale.split("-")[0];
}
var $6db58dc88e78b024$var$pluralRulesCache = /* @__PURE__ */ new Map();
var $6db58dc88e78b024$var$numberFormatCache = /* @__PURE__ */ new Map();
var $6db58dc88e78b024$export$2f817fcdc4b89ae0 = class {
  /** Formats a localized string for the given key with the provided variables. */
  format(key, variables) {
    let message = this.strings.getStringForLocale(key, this.locale);
    return typeof message === "function" ? message(variables, this) : message;
  }
  plural(count, options, type = "cardinal") {
    let opt = options["=" + count];
    if (opt)
      return typeof opt === "function" ? opt() : opt;
    let key = this.locale + ":" + type;
    let pluralRules = $6db58dc88e78b024$var$pluralRulesCache.get(key);
    if (!pluralRules) {
      pluralRules = new Intl.PluralRules(this.locale, {
        type
      });
      $6db58dc88e78b024$var$pluralRulesCache.set(key, pluralRules);
    }
    let selected = pluralRules.select(count);
    opt = options[selected] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  number(value) {
    let numberFormat = $6db58dc88e78b024$var$numberFormatCache.get(this.locale);
    if (!numberFormat) {
      numberFormat = new Intl.NumberFormat(this.locale);
      $6db58dc88e78b024$var$numberFormatCache.set(this.locale, numberFormat);
    }
    return numberFormat.format(value);
  }
  select(options, value) {
    let opt = options[value] || options.other;
    return typeof opt === "function" ? opt() : opt;
  }
  constructor(locale, strings) {
    this.locale = locale;
    this.strings = strings;
  }
};

// node_modules/@swc/helpers/src/_define_property.mjs
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}

// node_modules/@internationalized/date/dist/import.mjs
var $fae977aafc393c5c$var$requiredDurationTimeGroups = [
  "hours",
  "minutes",
  "seconds"
];
var $fae977aafc393c5c$var$requiredDurationGroups = [
  "years",
  "months",
  "weeks",
  "days",
  ...$fae977aafc393c5c$var$requiredDurationTimeGroups
];
var $7c5f6fbf42389787$var$HOUR_PARTS = 1080;
var $7c5f6fbf42389787$var$DAY_PARTS = 24 * $7c5f6fbf42389787$var$HOUR_PARTS;
var $7c5f6fbf42389787$var$MONTH_DAYS = 29;
var $7c5f6fbf42389787$var$MONTH_FRACT = 12 * $7c5f6fbf42389787$var$HOUR_PARTS + 793;
var $7c5f6fbf42389787$var$MONTH_PARTS = $7c5f6fbf42389787$var$MONTH_DAYS * $7c5f6fbf42389787$var$DAY_PARTS + $7c5f6fbf42389787$var$MONTH_FRACT;

// node_modules/@internationalized/number/dist/import.mjs
var $488c6ddbf4ef74c2$var$supportsSignDisplay = false;
try {
  $488c6ddbf4ef74c2$var$supportsSignDisplay = new Intl.NumberFormat("de-DE", {
    signDisplay: "exceptZero"
  }).resolvedOptions().signDisplay === "exceptZero";
} catch (e15) {
}
var $488c6ddbf4ef74c2$var$supportsUnit = false;
try {
  $488c6ddbf4ef74c2$var$supportsUnit = new Intl.NumberFormat("de-DE", {
    style: "unit",
    unit: "degree"
  }).resolvedOptions().style === "unit";
} catch (e1) {
}
var $6c7bd7858deea686$var$CURRENCY_SIGN_REGEX = new RegExp("^.*\\(.*\\).*$");

// node_modules/@react-aria/i18n/dist/real-module.js
var $148a7a147e38ea7f$var$RTL_SCRIPTS = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
var $148a7a147e38ea7f$var$RTL_LANGS = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd764(locale) {
  if (Intl.Locale) {
    let script = new Intl.Locale(locale).maximize().script;
    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);
  }
  let lang = locale.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);
}
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {
  let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: $148a7a147e38ea7f$export$702d680b21cbd764(locale) ? "rtl" : "ltr"
  };
}
var $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
var $1e5a04cdaf7d1af8$var$listeners = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale() {
  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners)
    listener($1e5a04cdaf7d1af8$var$currentLocale);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {
  let isSSR = $704cf1d3b684cc5c$export$535bd6ca7f90a273();
  let [defaultLocale, setDefaultLocale] = h($1e5a04cdaf7d1af8$var$currentLocale);
  p(() => {
    if ($1e5a04cdaf7d1af8$var$listeners.size === 0)
      window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners.size === 0)
        window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale);
    };
  }, []);
  if (isSSR)
    return {
      locale: "en-US",
      direction: "ltr"
    };
  return defaultLocale;
}
var $18f2051aff69b9bf$var$I18nContext = Cn.createContext(null);
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {
  let defaultLocale = $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a();
  let context = q($18f2051aff69b9bf$var$I18nContext);
  return context || defaultLocale;
}
var $fca6afa0e843324b$var$cache = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary(strings) {
  let dictionary = $fca6afa0e843324b$var$cache.get(strings);
  if (!dictionary) {
    dictionary = new $5b160d28a433310d$export$c17fa47878dc55b6(strings);
    $fca6afa0e843324b$var$cache.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$f12b703ca79dfbb1(strings) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let dictionary = F(
    () => $fca6afa0e843324b$var$getCachedDictionary(strings),
    [
      strings
    ]
  );
  return F(
    () => new $6db58dc88e78b024$export$2f817fcdc4b89ae0(locale, dictionary),
    [
      locale,
      dictionary
    ]
  );
}
var $325a3faab7a68acd$var$cache = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d(options) {
  let { locale } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let cacheKey = locale + (options ? Object.entries(options).sort(
    (a13, b6) => a13[0] < b6[0] ? -1 : 1
  ).join() : "");
  if ($325a3faab7a68acd$var$cache.has(cacheKey))
    return $325a3faab7a68acd$var$cache.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);
  return formatter;
}

// node_modules/tslib/tslib.es6.js
var extendStatics = function(d11, b6) {
  extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d12, b7) {
    d12.__proto__ = b7;
  } || function(d12, b7) {
    for (var p7 in b7)
      if (Object.prototype.hasOwnProperty.call(b7, p7))
        d12[p7] = b7[p7];
  };
  return extendStatics(d11, b6);
};
function __extends(d11, b6) {
  if (typeof b6 !== "function" && b6 !== null)
    throw new TypeError("Class extends value " + String(b6) + " is not a constructor or null");
  extendStatics(d11, b6);
  function __() {
    this.constructor = d11;
  }
  d11.prototype = b6 === null ? Object.create(b6) : (__.prototype = b6.prototype, new __());
}
var __assign = function() {
  __assign = Object.assign || function __assign2(t9) {
    for (var s9, i13 = 1, n15 = arguments.length; i13 < n15; i13++) {
      s9 = arguments[i13];
      for (var p7 in s9)
        if (Object.prototype.hasOwnProperty.call(s9, p7))
          t9[p7] = s9[p7];
    }
    return t9;
  };
  return __assign.apply(this, arguments);
};
function __rest(s9, e15) {
  var t9 = {};
  for (var p7 in s9)
    if (Object.prototype.hasOwnProperty.call(s9, p7) && e15.indexOf(p7) < 0)
      t9[p7] = s9[p7];
  if (s9 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i13 = 0, p7 = Object.getOwnPropertySymbols(s9); i13 < p7.length; i13++) {
      if (e15.indexOf(p7[i13]) < 0 && Object.prototype.propertyIsEnumerable.call(s9, p7[i13]))
        t9[p7[i13]] = s9[p7[i13]];
    }
  return t9;
}
function __spreadArray(to, from, pack) {
  if (pack || arguments.length === 2)
    for (var i13 = 0, l13 = from.length, ar; i13 < l13; i13++) {
      if (ar || !(i13 in from)) {
        if (!ar)
          ar = Array.prototype.slice.call(from, 0, i13);
        ar[i13] = from[i13];
      }
    }
  return to.concat(ar || Array.prototype.slice.call(from));
}

// node_modules/@formatjs/icu-messageformat-parser/lib/error.js
var ErrorKind;
(function(ErrorKind2) {
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
  ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
  ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
  ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
  ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
  ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
  ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));

// node_modules/@formatjs/icu-messageformat-parser/lib/types.js
var TYPE;
(function(TYPE2) {
  TYPE2[TYPE2["literal"] = 0] = "literal";
  TYPE2[TYPE2["argument"] = 1] = "argument";
  TYPE2[TYPE2["number"] = 2] = "number";
  TYPE2[TYPE2["date"] = 3] = "date";
  TYPE2[TYPE2["time"] = 4] = "time";
  TYPE2[TYPE2["select"] = 5] = "select";
  TYPE2[TYPE2["plural"] = 6] = "plural";
  TYPE2[TYPE2["pound"] = 7] = "pound";
  TYPE2[TYPE2["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function(SKELETON_TYPE2) {
  SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
  SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
function isLiteralElement(el) {
  return el.type === TYPE.literal;
}
function isArgumentElement(el) {
  return el.type === TYPE.argument;
}
function isNumberElement(el) {
  return el.type === TYPE.number;
}
function isDateElement(el) {
  return el.type === TYPE.date;
}
function isTimeElement(el) {
  return el.type === TYPE.time;
}
function isSelectElement(el) {
  return el.type === TYPE.select;
}
function isPluralElement(el) {
  return el.type === TYPE.plural;
}
function isPoundElement(el) {
  return el.type === TYPE.pound;
}
function isTagElement(el) {
  return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
}

// node_modules/@formatjs/icu-messageformat-parser/lib/regex.generated.js
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;

// node_modules/@formatjs/icu-skeleton-parser/lib/date-time.js
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function parseDateTimeSkeleton(skeleton) {
  var result = {};
  skeleton.replace(DATE_TIME_REGEX, function(match) {
    var len = match.length;
    switch (match[0]) {
      case "G":
        result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "y":
        result.year = len === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      case "M":
      case "L":
        result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
        break;
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        result.day = ["numeric", "2-digit"][len - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      case "E":
        result.weekday = len === 4 ? "short" : len === 5 ? "narrow" : "short";
        break;
      case "e":
        if (len < 4) {
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "c":
        if (len < 4) {
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "a":
        result.hour12 = true;
        break;
      case "b":
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      case "h":
        result.hourCycle = "h12";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "H":
        result.hourCycle = "h23";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "K":
        result.hourCycle = "h11";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "k":
        result.hourCycle = "h24";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      case "m":
        result.minute = ["numeric", "2-digit"][len - 1];
        break;
      case "s":
        result.second = ["numeric", "2-digit"][len - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      case "z":
        result.timeZoneName = len < 4 ? "short" : "long";
        break;
      case "Z":
      case "O":
      case "v":
      case "V":
      case "X":
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  });
  return result;
}

// node_modules/@formatjs/icu-skeleton-parser/lib/regex.generated.js
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;

// node_modules/@formatjs/icu-skeleton-parser/lib/number.js
function parseNumberSkeletonFromString(skeleton) {
  if (skeleton.length === 0) {
    throw new Error("Number skeleton cannot be empty");
  }
  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x8) {
    return x8.length > 0;
  });
  var tokens = [];
  for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
    var stringToken = stringTokens_1[_i];
    var stemAndOptions = stringToken.split("/");
    if (stemAndOptions.length === 0) {
      throw new Error("Invalid number skeleton");
    }
    var stem = stemAndOptions[0], options = stemAndOptions.slice(1);
    for (var _a2 = 0, options_1 = options; _a2 < options_1.length; _a2++) {
      var option = options_1[_a2];
      if (option.length === 0) {
        throw new Error("Invalid number skeleton");
      }
    }
    tokens.push({ stem, options });
  }
  return tokens;
}
function icuUnitToEcma(unit) {
  return unit.replace(/^(.*?)-/, "");
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
  var result = {};
  if (str[str.length - 1] === "r") {
    result.roundingPriority = "morePrecision";
  } else if (str[str.length - 1] === "s") {
    result.roundingPriority = "lessPrecision";
  }
  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_2, g1, g22) {
    if (typeof g22 !== "string") {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length;
    } else if (g22 === "+") {
      result.minimumSignificantDigits = g1.length;
    } else if (g1[0] === "#") {
      result.maximumSignificantDigits = g1.length;
    } else {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length + (typeof g22 === "string" ? g22.length : 0);
    }
    return "";
  });
  return result;
}
function parseSign(str) {
  switch (str) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function parseConciseScientificAndEngineeringStem(stem) {
  var result;
  if (stem[0] === "E" && stem[1] === "E") {
    result = {
      notation: "engineering"
    };
    stem = stem.slice(2);
  } else if (stem[0] === "E") {
    result = {
      notation: "scientific"
    };
    stem = stem.slice(1);
  }
  if (result) {
    var signDisplay = stem.slice(0, 2);
    if (signDisplay === "+!") {
      result.signDisplay = "always";
      stem = stem.slice(2);
    } else if (signDisplay === "+?") {
      result.signDisplay = "exceptZero";
      stem = stem.slice(2);
    }
    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
      throw new Error("Malformed concise eng/scientific notation");
    }
    result.minimumIntegerDigits = stem.length;
  }
  return result;
}
function parseNotationOptions(opt) {
  var result = {};
  var signOpts = parseSign(opt);
  if (signOpts) {
    return signOpts;
  }
  return result;
}
function parseNumberSkeleton(tokens) {
  var result = {};
  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {
    var token = tokens_1[_i];
    switch (token.stem) {
      case "percent":
      case "%":
        result.style = "percent";
        continue;
      case "%x100":
        result.style = "percent";
        result.scale = 100;
        continue;
      case "currency":
        result.style = "currency";
        result.currency = token.options[0];
        continue;
      case "group-off":
      case ",_":
        result.useGrouping = false;
        continue;
      case "precision-integer":
      case ".":
        result.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        result.style = "unit";
        result.unit = icuUnitToEcma(token.options[0]);
        continue;
      case "compact-short":
      case "K":
        result.notation = "compact";
        result.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        result.notation = "compact";
        result.compactDisplay = "long";
        continue;
      case "scientific":
        result = __assign(__assign(__assign({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "engineering":
        result = __assign(__assign(__assign({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "notation-simple":
        result.notation = "standard";
        continue;
      case "unit-width-narrow":
        result.currencyDisplay = "narrowSymbol";
        result.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        result.currencyDisplay = "code";
        result.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        result.currencyDisplay = "name";
        result.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        result.currencyDisplay = "symbol";
        continue;
      case "scale":
        result.scale = parseFloat(token.options[0]);
        continue;
      case "integer-width":
        if (token.options.length > 1) {
          throw new RangeError("integer-width stems only accept a single optional option");
        }
        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_2, g1, g22, g32, g4, g5) {
          if (g1) {
            result.minimumIntegerDigits = g22.length;
          } else if (g32 && g4) {
            throw new Error("We currently do not support maximum integer digits");
          } else if (g5) {
            throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
      result.minimumIntegerDigits = token.stem.length;
      continue;
    }
    if (FRACTION_PRECISION_REGEX.test(token.stem)) {
      if (token.options.length > 1) {
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      }
      token.stem.replace(FRACTION_PRECISION_REGEX, function(_2, g1, g22, g32, g4, g5) {
        if (g22 === "*") {
          result.minimumFractionDigits = g1.length;
        } else if (g32 && g32[0] === "#") {
          result.maximumFractionDigits = g32.length;
        } else if (g4 && g5) {
          result.minimumFractionDigits = g4.length;
          result.maximumFractionDigits = g4.length + g5.length;
        } else {
          result.minimumFractionDigits = g1.length;
          result.maximumFractionDigits = g1.length;
        }
        return "";
      });
      var opt = token.options[0];
      if (opt === "w") {
        result = __assign(__assign({}, result), { trailingZeroDisplay: "stripIfInteger" });
      } else if (opt) {
        result = __assign(__assign({}, result), parseSignificantPrecision(opt));
      }
      continue;
    }
    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
      result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));
      continue;
    }
    var signOpts = parseSign(token.stem);
    if (signOpts) {
      result = __assign(__assign({}, result), signOpts);
    }
    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
    if (conciseScientificAndEngineeringOpts) {
      result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);
    }
  }
  return result;
}

// node_modules/@formatjs/icu-messageformat-parser/lib/time-data.generated.js
var timeData = {
  "001": [
    "H",
    "h"
  ],
  "AC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AD": [
    "H",
    "hB"
  ],
  "AE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "AF": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "AG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AL": [
    "h",
    "H",
    "hB"
  ],
  "AM": [
    "H",
    "hB"
  ],
  "AO": [
    "H",
    "hB"
  ],
  "AR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "AS": [
    "h",
    "H"
  ],
  "AT": [
    "H",
    "hB"
  ],
  "AU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AW": [
    "H",
    "hB"
  ],
  "AX": [
    "H"
  ],
  "AZ": [
    "H",
    "hB",
    "h"
  ],
  "BA": [
    "H",
    "hB",
    "h"
  ],
  "BB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BD": [
    "h",
    "hB",
    "H"
  ],
  "BE": [
    "H",
    "hB"
  ],
  "BF": [
    "H",
    "hB"
  ],
  "BG": [
    "H",
    "hB",
    "h"
  ],
  "BH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "BJ": [
    "H",
    "hB"
  ],
  "BL": [
    "H",
    "hB"
  ],
  "BM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BN": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "BO": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "BQ": [
    "H"
  ],
  "BR": [
    "H",
    "hB"
  ],
  "BS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BT": [
    "h",
    "H"
  ],
  "BW": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BZ": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CA": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "CC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CD": [
    "hB",
    "H"
  ],
  "CF": [
    "H",
    "h",
    "hB"
  ],
  "CG": [
    "H",
    "hB"
  ],
  "CH": [
    "H",
    "hB",
    "h"
  ],
  "CI": [
    "H",
    "hB"
  ],
  "CK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CL": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CM": [
    "H",
    "h",
    "hB"
  ],
  "CN": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "CO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "CP": [
    "H"
  ],
  "CR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CU": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CV": [
    "H",
    "hB"
  ],
  "CX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CY": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "CZ": [
    "H"
  ],
  "DE": [
    "H",
    "hB"
  ],
  "DG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "DJ": [
    "h",
    "H"
  ],
  "DK": [
    "H"
  ],
  "DM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "DO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "DZ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "EC": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "EE": [
    "H",
    "hB"
  ],
  "EG": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ER": [
    "h",
    "H"
  ],
  "ES": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "ET": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "FI": [
    "H"
  ],
  "FJ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "FM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FR": [
    "H",
    "hB"
  ],
  "GA": [
    "H",
    "hB"
  ],
  "GB": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GD": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GE": [
    "H",
    "hB",
    "h"
  ],
  "GF": [
    "H",
    "hB"
  ],
  "GG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GH": [
    "h",
    "H"
  ],
  "GI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GN": [
    "H",
    "hB"
  ],
  "GP": [
    "H",
    "hB"
  ],
  "GQ": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "GR": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "GT": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "GU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GW": [
    "H",
    "hB"
  ],
  "GY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "HK": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "HN": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "HR": [
    "H",
    "hB"
  ],
  "IC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ID": [
    "H"
  ],
  "IE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IL": [
    "H",
    "hB"
  ],
  "IM": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IN": [
    "h",
    "H"
  ],
  "IO": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IQ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "IR": [
    "hB",
    "H"
  ],
  "IS": [
    "H"
  ],
  "IT": [
    "H",
    "hB"
  ],
  "JE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "JM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "JO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "JP": [
    "H",
    "h",
    "K"
  ],
  "KE": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "KG": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KH": [
    "hB",
    "h",
    "H",
    "hb"
  ],
  "KI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KM": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KN": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KP": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KW": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "KY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KZ": [
    "H",
    "hB"
  ],
  "LA": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "LB": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LI": [
    "H",
    "hB",
    "h"
  ],
  "LK": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "LR": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LS": [
    "h",
    "H"
  ],
  "LT": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "LU": [
    "H",
    "h",
    "hB"
  ],
  "LV": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "LY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MC": [
    "H",
    "hB"
  ],
  "MD": [
    "H",
    "hB"
  ],
  "ME": [
    "H",
    "hB",
    "h"
  ],
  "MF": [
    "H",
    "hB"
  ],
  "MH": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ML": [
    "H"
  ],
  "MM": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "MN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MP": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MQ": [
    "H",
    "hB"
  ],
  "MR": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MS": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MW": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MX": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MY": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "MZ": [
    "H",
    "hB"
  ],
  "NA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NC": [
    "H",
    "hB"
  ],
  "NE": [
    "H"
  ],
  "NF": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NI": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "NL": [
    "H",
    "hB"
  ],
  "NP": [
    "H",
    "h",
    "hB"
  ],
  "NR": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NU": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "OM": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PE": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "PF": [
    "H",
    "h",
    "hB"
  ],
  "PG": [
    "h",
    "H"
  ],
  "PH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PK": [
    "h",
    "hB",
    "H"
  ],
  "PM": [
    "H",
    "hB"
  ],
  "PN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "PR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PS": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PT": [
    "H",
    "hB"
  ],
  "PW": [
    "h",
    "H"
  ],
  "PY": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "QA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "RE": [
    "H",
    "hB"
  ],
  "RO": [
    "H",
    "hB"
  ],
  "RS": [
    "H",
    "hB",
    "h"
  ],
  "RU": [
    "H"
  ],
  "SA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SC": [
    "H",
    "h",
    "hB"
  ],
  "SD": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SE": [
    "H"
  ],
  "SG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SH": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SI": [
    "H",
    "hB"
  ],
  "SJ": [
    "H"
  ],
  "SK": [
    "H"
  ],
  "SL": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SM": [
    "H",
    "h",
    "hB"
  ],
  "SN": [
    "H",
    "h",
    "hB"
  ],
  "SO": [
    "h",
    "H"
  ],
  "SR": [
    "H",
    "hB"
  ],
  "SS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ST": [
    "H",
    "hB"
  ],
  "SV": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "SX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "TC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TD": [
    "h",
    "H",
    "hB"
  ],
  "TF": [
    "H",
    "h",
    "hB"
  ],
  "TG": [
    "H",
    "hB"
  ],
  "TL": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "TN": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "TO": [
    "h",
    "H"
  ],
  "TR": [
    "H",
    "hB"
  ],
  "TT": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TW": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "TZ": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UA": [
    "H",
    "hB",
    "h"
  ],
  "UG": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "US": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "UY": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "UZ": [
    "H",
    "hB",
    "h"
  ],
  "VA": [
    "H",
    "h",
    "hB"
  ],
  "VC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "VG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VU": [
    "h",
    "H"
  ],
  "WF": [
    "H",
    "hB"
  ],
  "WS": [
    "h",
    "H"
  ],
  "XK": [
    "H",
    "hB",
    "h"
  ],
  "YE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "YT": [
    "H",
    "hB"
  ],
  "ZA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ZM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "af-ZA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "ar-001": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ca-ES": [
    "H",
    "h",
    "hB"
  ],
  "en-001": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "es-BO": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-BR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-EC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-ES": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-GQ": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-PE": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "fr-CA": [
    "H",
    "h",
    "hB"
  ],
  "gl-ES": [
    "H",
    "h",
    "hB"
  ],
  "gu-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "hi-IN": [
    "hB",
    "h",
    "H"
  ],
  "it-CH": [
    "H",
    "h",
    "hB"
  ],
  "it-IT": [
    "H",
    "h",
    "hB"
  ],
  "kn-IN": [
    "hB",
    "h",
    "H"
  ],
  "ml-IN": [
    "hB",
    "h",
    "H"
  ],
  "mr-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "pa-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "ta-IN": [
    "hB",
    "h",
    "hb",
    "H"
  ],
  "te-IN": [
    "hB",
    "h",
    "H"
  ],
  "zu-ZA": [
    "H",
    "hB",
    "hb",
    "h"
  ]
};

// node_modules/@formatjs/icu-messageformat-parser/lib/date-time-pattern-generator.js
function getBestPattern(skeleton, locale) {
  var skeletonCopy = "";
  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
    var patternChar = skeleton.charAt(patternPos);
    if (patternChar === "j") {
      var extraLength = 0;
      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {
        extraLength++;
        patternPos++;
      }
      var hourLen = 1 + (extraLength & 1);
      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
      var dayPeriodChar = "a";
      var hourChar = getDefaultHourSymbolFromLocale(locale);
      if (hourChar == "H" || hourChar == "k") {
        dayPeriodLen = 0;
      }
      while (dayPeriodLen-- > 0) {
        skeletonCopy += dayPeriodChar;
      }
      while (hourLen-- > 0) {
        skeletonCopy = hourChar + skeletonCopy;
      }
    } else if (patternChar === "J") {
      skeletonCopy += "H";
    } else {
      skeletonCopy += patternChar;
    }
  }
  return skeletonCopy;
}
function getDefaultHourSymbolFromLocale(locale) {
  var hourCycle = locale.hourCycle;
  if (hourCycle === void 0 && // @ts-ignore hourCycle(s) is not identified yet
  locale.hourCycles && // @ts-ignore
  locale.hourCycles.length) {
    hourCycle = locale.hourCycles[0];
  }
  if (hourCycle) {
    switch (hourCycle) {
      case "h24":
        return "k";
      case "h23":
        return "H";
      case "h12":
        return "h";
      case "h11":
        return "K";
      default:
        throw new Error("Invalid hourCycle");
    }
  }
  var languageTag = locale.language;
  var regionTag;
  if (languageTag !== "root") {
    regionTag = locale.maximize().region;
  }
  var hourCycles = timeData[regionTag || ""] || timeData[languageTag || ""] || timeData["".concat(languageTag, "-001")] || timeData["001"];
  return hourCycles[0];
}

// node_modules/@formatjs/icu-messageformat-parser/lib/parser.js
var _a;
var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
  return { start, end };
}
var hasNativeStartsWith = !!String.prototype.startsWith;
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n15) {
  return typeof n15 === "number" && isFinite(n15) && Math.floor(n15) === n15 && Math.abs(n15) <= 9007199254740991;
};
var REGEX_SUPPORTS_U_AND_Y = true;
try {
  re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
} catch (_2) {
  REGEX_SUPPORTS_U_AND_Y = false;
}
var re;
var startsWith = hasNativeStartsWith ? (
  // Native
  function startsWith2(s9, search, position) {
    return s9.startsWith(search, position);
  }
) : (
  // For IE11
  function startsWith3(s9, search, position) {
    return s9.slice(position, position + search.length) === search;
  }
);
var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : (
  // IE11
  function fromCodePoint2() {
    var codePoints = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      codePoints[_i] = arguments[_i];
    }
    var elements = "";
    var length = codePoints.length;
    var i13 = 0;
    var code;
    while (length > i13) {
      code = codePoints[i13++];
      if (code > 1114111)
        throw RangeError(code + " is not a valid code point");
      elements += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);
    }
    return elements;
  }
);
var fromEntries = (
  // native
  hasNativeFromEntries ? Object.fromEntries : (
    // Ponyfill
    function fromEntries2(entries) {
      var obj = {};
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _a2 = entries_1[_i], k6 = _a2[0], v4 = _a2[1];
        obj[k6] = v4;
      }
      return obj;
    }
  )
);
var codePointAt = hasNativeCodePointAt ? (
  // Native
  function codePointAt2(s9, index) {
    return s9.codePointAt(index);
  }
) : (
  // IE 11
  function codePointAt3(s9, index) {
    var size = s9.length;
    if (index < 0 || index >= size) {
      return void 0;
    }
    var first = s9.charCodeAt(index);
    var second;
    return first < 55296 || first > 56319 || index + 1 === size || (second = s9.charCodeAt(index + 1)) < 56320 || second > 57343 ? first : (first - 55296 << 10) + (second - 56320) + 65536;
  }
);
var trimStart = hasTrimStart ? (
  // Native
  function trimStart2(s9) {
    return s9.trimStart();
  }
) : (
  // Ponyfill
  function trimStart3(s9) {
    return s9.replace(SPACE_SEPARATOR_START_REGEX, "");
  }
);
var trimEnd = hasTrimEnd ? (
  // Native
  function trimEnd2(s9) {
    return s9.trimEnd();
  }
) : (
  // Ponyfill
  function trimEnd3(s9) {
    return s9.replace(SPACE_SEPARATOR_END_REGEX, "");
  }
);
function RE(s9, flag) {
  return new RegExp(s9, flag);
}
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
  IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s9, index) {
    var _a2;
    IDENTIFIER_PREFIX_RE_1.lastIndex = index;
    var match = IDENTIFIER_PREFIX_RE_1.exec(s9);
    return (_a2 = match[1]) !== null && _a2 !== void 0 ? _a2 : "";
  };
} else {
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s9, index) {
    var match = [];
    while (true) {
      var c15 = codePointAt(s9, index);
      if (c15 === void 0 || _isWhiteSpace(c15) || _isPatternSyntax(c15)) {
        break;
      }
      match.push(c15);
      index += c15 >= 65536 ? 2 : 1;
    }
    return fromCodePoint.apply(void 0, match);
  };
}
var IDENTIFIER_PREFIX_RE_1;
var Parser = (
  /** @class */
  function() {
    function Parser2(message, options) {
      if (options === void 0) {
        options = {};
      }
      this.message = message;
      this.position = { offset: 0, line: 1, column: 1 };
      this.ignoreTag = !!options.ignoreTag;
      this.locale = options.locale;
      this.requiresOtherClause = !!options.requiresOtherClause;
      this.shouldParseSkeletons = !!options.shouldParseSkeletons;
    }
    Parser2.prototype.parse = function() {
      if (this.offset() !== 0) {
        throw Error("parser can only be used once");
      }
      return this.parseMessage(0, "", false);
    };
    Parser2.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
      var elements = [];
      while (!this.isEOF()) {
        var char = this.char();
        if (char === 123) {
          var result = this.parseArgument(nestingLevel, expectingCloseTag);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else if (char === 125 && nestingLevel > 0) {
          break;
        } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
          var position = this.clonePosition();
          this.bump();
          elements.push({
            type: TYPE.pound,
            location: createLocation(position, this.clonePosition())
          });
        } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
          if (expectingCloseTag) {
            break;
          } else {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
          }
        } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
          var result = this.parseTag(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else {
          var result = this.parseLiteral(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        }
      }
      return { val: elements, err: null };
    };
    Parser2.prototype.parseTag = function(nestingLevel, parentArgType) {
      var startPosition = this.clonePosition();
      this.bump();
      var tagName = this.parseTagName();
      this.bumpSpace();
      if (this.bumpIf("/>")) {
        return {
          val: {
            type: TYPE.literal,
            value: "<".concat(tagName, "/>"),
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else if (this.bumpIf(">")) {
        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
        if (childrenResult.err) {
          return childrenResult;
        }
        var children = childrenResult.val;
        var endTagStartPosition = this.clonePosition();
        if (this.bumpIf("</")) {
          if (this.isEOF() || !_isAlpha(this.char())) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          var closingTagNameStartPosition = this.clonePosition();
          var closingTagName = this.parseTagName();
          if (tagName !== closingTagName) {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
          }
          this.bumpSpace();
          if (!this.bumpIf(">")) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          return {
            val: {
              type: TYPE.tag,
              value: tagName,
              children,
              location: createLocation(startPosition, this.clonePosition())
            },
            err: null
          };
        } else {
          return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
        }
      } else {
        return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseTagName = function() {
      var startOffset = this.offset();
      this.bump();
      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
        this.bump();
      }
      return this.message.slice(startOffset, this.offset());
    };
    Parser2.prototype.parseLiteral = function(nestingLevel, parentArgType) {
      var start = this.clonePosition();
      var value = "";
      while (true) {
        var parseQuoteResult = this.tryParseQuote(parentArgType);
        if (parseQuoteResult) {
          value += parseQuoteResult;
          continue;
        }
        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
        if (parseUnquotedResult) {
          value += parseUnquotedResult;
          continue;
        }
        var parseLeftAngleResult = this.tryParseLeftAngleBracket();
        if (parseLeftAngleResult) {
          value += parseLeftAngleResult;
          continue;
        }
        break;
      }
      var location2 = createLocation(start, this.clonePosition());
      return {
        val: { type: TYPE.literal, value, location: location2 },
        err: null
      };
    };
    Parser2.prototype.tryParseLeftAngleBracket = function() {
      if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || // If at the opening tag or closing tag position, bail.
      !_isAlphaOrSlash(this.peek() || 0))) {
        this.bump();
        return "<";
      }
      return null;
    };
    Parser2.prototype.tryParseQuote = function(parentArgType) {
      if (this.isEOF() || this.char() !== 39) {
        return null;
      }
      switch (this.peek()) {
        case 39:
          this.bump();
          this.bump();
          return "'";
        case 123:
        case 60:
        case 62:
        case 125:
          break;
        case 35:
          if (parentArgType === "plural" || parentArgType === "selectordinal") {
            break;
          }
          return null;
        default:
          return null;
      }
      this.bump();
      var codePoints = [this.char()];
      this.bump();
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch === 39) {
          if (this.peek() === 39) {
            codePoints.push(39);
            this.bump();
          } else {
            this.bump();
            break;
          }
        } else {
          codePoints.push(ch);
        }
        this.bump();
      }
      return fromCodePoint.apply(void 0, codePoints);
    };
    Parser2.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
      if (this.isEOF()) {
        return null;
      }
      var ch = this.char();
      if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
        return null;
      } else {
        this.bump();
        return fromCodePoint(ch);
      }
    };
    Parser2.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
      var openingBracePosition = this.clonePosition();
      this.bump();
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      if (this.char() === 125) {
        this.bump();
        return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      var value = this.parseIdentifierIfPossible().value;
      if (!value) {
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      switch (this.char()) {
        case 125: {
          this.bump();
          return {
            val: {
              type: TYPE.argument,
              // value does not include the opening and closing braces.
              value,
              location: createLocation(openingBracePosition, this.clonePosition())
            },
            err: null
          };
        }
        case 44: {
          this.bump();
          this.bumpSpace();
          if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
          }
          return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
        }
        default:
          return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
    };
    Parser2.prototype.parseIdentifierIfPossible = function() {
      var startingPosition = this.clonePosition();
      var startOffset = this.offset();
      var value = matchIdentifierAtIndex(this.message, startOffset);
      var endOffset = startOffset + value.length;
      this.bumpTo(endOffset);
      var endPosition = this.clonePosition();
      var location2 = createLocation(startingPosition, endPosition);
      return { value, location: location2 };
    };
    Parser2.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {
      var _a2;
      var typeStartPosition = this.clonePosition();
      var argType = this.parseIdentifierIfPossible().value;
      var typeEndPosition = this.clonePosition();
      switch (argType) {
        case "":
          return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        case "number":
        case "date":
        case "time": {
          this.bumpSpace();
          var styleAndLocation = null;
          if (this.bumpIf(",")) {
            this.bumpSpace();
            var styleStartPosition = this.clonePosition();
            var result = this.parseSimpleArgStyleIfPossible();
            if (result.err) {
              return result;
            }
            var style = trimEnd(result.val);
            if (style.length === 0) {
              return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var styleLocation = createLocation(styleStartPosition, this.clonePosition());
            styleAndLocation = { style, styleLocation };
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_1 = createLocation(openingBracePosition, this.clonePosition());
          if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
            var skeleton = trimStart(styleAndLocation.style.slice(2));
            if (argType === "number") {
              var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
              if (result.err) {
                return result;
              }
              return {
                val: { type: TYPE.number, value, location: location_1, style: result.val },
                err: null
              };
            } else {
              if (skeleton.length === 0) {
                return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
              }
              var dateTimePattern = skeleton;
              if (this.locale) {
                dateTimePattern = getBestPattern(skeleton, this.locale);
              }
              var style = {
                type: SKELETON_TYPE.dateTime,
                pattern: dateTimePattern,
                location: styleAndLocation.styleLocation,
                parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}
              };
              var type = argType === "date" ? TYPE.date : TYPE.time;
              return {
                val: { type, value, location: location_1, style },
                err: null
              };
            }
          }
          return {
            val: {
              type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
              value,
              location: location_1,
              style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
            },
            err: null
          };
        }
        case "plural":
        case "selectordinal":
        case "select": {
          var typeEndPosition_1 = this.clonePosition();
          this.bumpSpace();
          if (!this.bumpIf(",")) {
            return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));
          }
          this.bumpSpace();
          var identifierAndLocation = this.parseIdentifierIfPossible();
          var pluralOffset = 0;
          if (argType !== "select" && identifierAndLocation.value === "offset") {
            if (!this.bumpIf(":")) {
              return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            this.bumpSpace();
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
            if (result.err) {
              return result;
            }
            this.bumpSpace();
            identifierAndLocation = this.parseIdentifierIfPossible();
            pluralOffset = result.val;
          }
          var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
          if (optionsResult.err) {
            return optionsResult;
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_2 = createLocation(openingBracePosition, this.clonePosition());
          if (argType === "select") {
            return {
              val: {
                type: TYPE.select,
                value,
                options: fromEntries(optionsResult.val),
                location: location_2
              },
              err: null
            };
          } else {
            return {
              val: {
                type: TYPE.plural,
                value,
                options: fromEntries(optionsResult.val),
                offset: pluralOffset,
                pluralType: argType === "plural" ? "cardinal" : "ordinal",
                location: location_2
              },
              err: null
            };
          }
        }
        default:
          return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      }
    };
    Parser2.prototype.tryParseArgumentClose = function(openingBracePosition) {
      if (this.isEOF() || this.char() !== 125) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bump();
      return { val: true, err: null };
    };
    Parser2.prototype.parseSimpleArgStyleIfPossible = function() {
      var nestedBraces = 0;
      var startPosition = this.clonePosition();
      while (!this.isEOF()) {
        var ch = this.char();
        switch (ch) {
          case 39: {
            this.bump();
            var apostrophePosition = this.clonePosition();
            if (!this.bumpUntil("'")) {
              return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
            }
            this.bump();
            break;
          }
          case 123: {
            nestedBraces += 1;
            this.bump();
            break;
          }
          case 125: {
            if (nestedBraces > 0) {
              nestedBraces -= 1;
            } else {
              return {
                val: this.message.slice(startPosition.offset, this.offset()),
                err: null
              };
            }
            break;
          }
          default:
            this.bump();
            break;
        }
      }
      return {
        val: this.message.slice(startPosition.offset, this.offset()),
        err: null
      };
    };
    Parser2.prototype.parseNumberSkeletonFromString = function(skeleton, location2) {
      var tokens = [];
      try {
        tokens = parseNumberSkeletonFromString(skeleton);
      } catch (e15) {
        return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location2);
      }
      return {
        val: {
          type: SKELETON_TYPE.number,
          tokens,
          location: location2,
          parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens) : {}
        },
        err: null
      };
    };
    Parser2.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
      var _a2;
      var hasOtherClause = false;
      var options = [];
      var parsedSelectors = /* @__PURE__ */ new Set();
      var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
      while (true) {
        if (selector.length === 0) {
          var startPosition = this.clonePosition();
          if (parentArgType !== "select" && this.bumpIf("=")) {
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
            if (result.err) {
              return result;
            }
            selectorLocation = createLocation(startPosition, this.clonePosition());
            selector = this.message.slice(startPosition.offset, this.offset());
          } else {
            break;
          }
        }
        if (parsedSelectors.has(selector)) {
          return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
        }
        if (selector === "other") {
          hasOtherClause = true;
        }
        this.bumpSpace();
        var openingBracePosition = this.clonePosition();
        if (!this.bumpIf("{")) {
          return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
        }
        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
        if (fragmentResult.err) {
          return fragmentResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        options.push([
          selector,
          {
            value: fragmentResult.val,
            location: createLocation(openingBracePosition, this.clonePosition())
          }
        ]);
        parsedSelectors.add(selector);
        this.bumpSpace();
        _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;
      }
      if (options.length === 0) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
      }
      if (this.requiresOtherClause && !hasOtherClause) {
        return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
      }
      return { val: options, err: null };
    };
    Parser2.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
      var sign = 1;
      var startingPosition = this.clonePosition();
      if (this.bumpIf("+")) {
      } else if (this.bumpIf("-")) {
        sign = -1;
      }
      var hasDigits = false;
      var decimal = 0;
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch >= 48 && ch <= 57) {
          hasDigits = true;
          decimal = decimal * 10 + (ch - 48);
          this.bump();
        } else {
          break;
        }
      }
      var location2 = createLocation(startingPosition, this.clonePosition());
      if (!hasDigits) {
        return this.error(expectNumberError, location2);
      }
      decimal *= sign;
      if (!isSafeInteger(decimal)) {
        return this.error(invalidNumberError, location2);
      }
      return { val: decimal, err: null };
    };
    Parser2.prototype.offset = function() {
      return this.position.offset;
    };
    Parser2.prototype.isEOF = function() {
      return this.offset() === this.message.length;
    };
    Parser2.prototype.clonePosition = function() {
      return {
        offset: this.position.offset,
        line: this.position.line,
        column: this.position.column
      };
    };
    Parser2.prototype.char = function() {
      var offset = this.position.offset;
      if (offset >= this.message.length) {
        throw Error("out of bound");
      }
      var code = codePointAt(this.message, offset);
      if (code === void 0) {
        throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
      }
      return code;
    };
    Parser2.prototype.error = function(kind, location2) {
      return {
        val: null,
        err: {
          kind,
          message: this.message,
          location: location2
        }
      };
    };
    Parser2.prototype.bump = function() {
      if (this.isEOF()) {
        return;
      }
      var code = this.char();
      if (code === 10) {
        this.position.line += 1;
        this.position.column = 1;
        this.position.offset += 1;
      } else {
        this.position.column += 1;
        this.position.offset += code < 65536 ? 1 : 2;
      }
    };
    Parser2.prototype.bumpIf = function(prefix) {
      if (startsWith(this.message, prefix, this.offset())) {
        for (var i13 = 0; i13 < prefix.length; i13++) {
          this.bump();
        }
        return true;
      }
      return false;
    };
    Parser2.prototype.bumpUntil = function(pattern) {
      var currentOffset = this.offset();
      var index = this.message.indexOf(pattern, currentOffset);
      if (index >= 0) {
        this.bumpTo(index);
        return true;
      } else {
        this.bumpTo(this.message.length);
        return false;
      }
    };
    Parser2.prototype.bumpTo = function(targetOffset) {
      if (this.offset() > targetOffset) {
        throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
      }
      targetOffset = Math.min(targetOffset, this.message.length);
      while (true) {
        var offset = this.offset();
        if (offset === targetOffset) {
          break;
        }
        if (offset > targetOffset) {
          throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
        }
        this.bump();
        if (this.isEOF()) {
          break;
        }
      }
    };
    Parser2.prototype.bumpSpace = function() {
      while (!this.isEOF() && _isWhiteSpace(this.char())) {
        this.bump();
      }
    };
    Parser2.prototype.peek = function() {
      if (this.isEOF()) {
        return null;
      }
      var code = this.char();
      var offset = this.offset();
      var nextCode = this.message.charCodeAt(offset + (code >= 65536 ? 2 : 1));
      return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser2;
  }()
);
function _isAlpha(codepoint) {
  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
}
function _isAlphaOrSlash(codepoint) {
  return _isAlpha(codepoint) || codepoint === 47;
}
function _isPotentialElementNameChar(c15) {
  return c15 === 45 || c15 === 46 || c15 >= 48 && c15 <= 57 || c15 === 95 || c15 >= 97 && c15 <= 122 || c15 >= 65 && c15 <= 90 || c15 == 183 || c15 >= 192 && c15 <= 214 || c15 >= 216 && c15 <= 246 || c15 >= 248 && c15 <= 893 || c15 >= 895 && c15 <= 8191 || c15 >= 8204 && c15 <= 8205 || c15 >= 8255 && c15 <= 8256 || c15 >= 8304 && c15 <= 8591 || c15 >= 11264 && c15 <= 12271 || c15 >= 12289 && c15 <= 55295 || c15 >= 63744 && c15 <= 64975 || c15 >= 65008 && c15 <= 65533 || c15 >= 65536 && c15 <= 983039;
}
function _isWhiteSpace(c15) {
  return c15 >= 9 && c15 <= 13 || c15 === 32 || c15 === 133 || c15 >= 8206 && c15 <= 8207 || c15 === 8232 || c15 === 8233;
}
function _isPatternSyntax(c15) {
  return c15 >= 33 && c15 <= 35 || c15 === 36 || c15 >= 37 && c15 <= 39 || c15 === 40 || c15 === 41 || c15 === 42 || c15 === 43 || c15 === 44 || c15 === 45 || c15 >= 46 && c15 <= 47 || c15 >= 58 && c15 <= 59 || c15 >= 60 && c15 <= 62 || c15 >= 63 && c15 <= 64 || c15 === 91 || c15 === 92 || c15 === 93 || c15 === 94 || c15 === 96 || c15 === 123 || c15 === 124 || c15 === 125 || c15 === 126 || c15 === 161 || c15 >= 162 && c15 <= 165 || c15 === 166 || c15 === 167 || c15 === 169 || c15 === 171 || c15 === 172 || c15 === 174 || c15 === 176 || c15 === 177 || c15 === 182 || c15 === 187 || c15 === 191 || c15 === 215 || c15 === 247 || c15 >= 8208 && c15 <= 8213 || c15 >= 8214 && c15 <= 8215 || c15 === 8216 || c15 === 8217 || c15 === 8218 || c15 >= 8219 && c15 <= 8220 || c15 === 8221 || c15 === 8222 || c15 === 8223 || c15 >= 8224 && c15 <= 8231 || c15 >= 8240 && c15 <= 8248 || c15 === 8249 || c15 === 8250 || c15 >= 8251 && c15 <= 8254 || c15 >= 8257 && c15 <= 8259 || c15 === 8260 || c15 === 8261 || c15 === 8262 || c15 >= 8263 && c15 <= 8273 || c15 === 8274 || c15 === 8275 || c15 >= 8277 && c15 <= 8286 || c15 >= 8592 && c15 <= 8596 || c15 >= 8597 && c15 <= 8601 || c15 >= 8602 && c15 <= 8603 || c15 >= 8604 && c15 <= 8607 || c15 === 8608 || c15 >= 8609 && c15 <= 8610 || c15 === 8611 || c15 >= 8612 && c15 <= 8613 || c15 === 8614 || c15 >= 8615 && c15 <= 8621 || c15 === 8622 || c15 >= 8623 && c15 <= 8653 || c15 >= 8654 && c15 <= 8655 || c15 >= 8656 && c15 <= 8657 || c15 === 8658 || c15 === 8659 || c15 === 8660 || c15 >= 8661 && c15 <= 8691 || c15 >= 8692 && c15 <= 8959 || c15 >= 8960 && c15 <= 8967 || c15 === 8968 || c15 === 8969 || c15 === 8970 || c15 === 8971 || c15 >= 8972 && c15 <= 8991 || c15 >= 8992 && c15 <= 8993 || c15 >= 8994 && c15 <= 9e3 || c15 === 9001 || c15 === 9002 || c15 >= 9003 && c15 <= 9083 || c15 === 9084 || c15 >= 9085 && c15 <= 9114 || c15 >= 9115 && c15 <= 9139 || c15 >= 9140 && c15 <= 9179 || c15 >= 9180 && c15 <= 9185 || c15 >= 9186 && c15 <= 9254 || c15 >= 9255 && c15 <= 9279 || c15 >= 9280 && c15 <= 9290 || c15 >= 9291 && c15 <= 9311 || c15 >= 9472 && c15 <= 9654 || c15 === 9655 || c15 >= 9656 && c15 <= 9664 || c15 === 9665 || c15 >= 9666 && c15 <= 9719 || c15 >= 9720 && c15 <= 9727 || c15 >= 9728 && c15 <= 9838 || c15 === 9839 || c15 >= 9840 && c15 <= 10087 || c15 === 10088 || c15 === 10089 || c15 === 10090 || c15 === 10091 || c15 === 10092 || c15 === 10093 || c15 === 10094 || c15 === 10095 || c15 === 10096 || c15 === 10097 || c15 === 10098 || c15 === 10099 || c15 === 10100 || c15 === 10101 || c15 >= 10132 && c15 <= 10175 || c15 >= 10176 && c15 <= 10180 || c15 === 10181 || c15 === 10182 || c15 >= 10183 && c15 <= 10213 || c15 === 10214 || c15 === 10215 || c15 === 10216 || c15 === 10217 || c15 === 10218 || c15 === 10219 || c15 === 10220 || c15 === 10221 || c15 === 10222 || c15 === 10223 || c15 >= 10224 && c15 <= 10239 || c15 >= 10240 && c15 <= 10495 || c15 >= 10496 && c15 <= 10626 || c15 === 10627 || c15 === 10628 || c15 === 10629 || c15 === 10630 || c15 === 10631 || c15 === 10632 || c15 === 10633 || c15 === 10634 || c15 === 10635 || c15 === 10636 || c15 === 10637 || c15 === 10638 || c15 === 10639 || c15 === 10640 || c15 === 10641 || c15 === 10642 || c15 === 10643 || c15 === 10644 || c15 === 10645 || c15 === 10646 || c15 === 10647 || c15 === 10648 || c15 >= 10649 && c15 <= 10711 || c15 === 10712 || c15 === 10713 || c15 === 10714 || c15 === 10715 || c15 >= 10716 && c15 <= 10747 || c15 === 10748 || c15 === 10749 || c15 >= 10750 && c15 <= 11007 || c15 >= 11008 && c15 <= 11055 || c15 >= 11056 && c15 <= 11076 || c15 >= 11077 && c15 <= 11078 || c15 >= 11079 && c15 <= 11084 || c15 >= 11085 && c15 <= 11123 || c15 >= 11124 && c15 <= 11125 || c15 >= 11126 && c15 <= 11157 || c15 === 11158 || c15 >= 11159 && c15 <= 11263 || c15 >= 11776 && c15 <= 11777 || c15 === 11778 || c15 === 11779 || c15 === 11780 || c15 === 11781 || c15 >= 11782 && c15 <= 11784 || c15 === 11785 || c15 === 11786 || c15 === 11787 || c15 === 11788 || c15 === 11789 || c15 >= 11790 && c15 <= 11798 || c15 === 11799 || c15 >= 11800 && c15 <= 11801 || c15 === 11802 || c15 === 11803 || c15 === 11804 || c15 === 11805 || c15 >= 11806 && c15 <= 11807 || c15 === 11808 || c15 === 11809 || c15 === 11810 || c15 === 11811 || c15 === 11812 || c15 === 11813 || c15 === 11814 || c15 === 11815 || c15 === 11816 || c15 === 11817 || c15 >= 11818 && c15 <= 11822 || c15 === 11823 || c15 >= 11824 && c15 <= 11833 || c15 >= 11834 && c15 <= 11835 || c15 >= 11836 && c15 <= 11839 || c15 === 11840 || c15 === 11841 || c15 === 11842 || c15 >= 11843 && c15 <= 11855 || c15 >= 11856 && c15 <= 11857 || c15 === 11858 || c15 >= 11859 && c15 <= 11903 || c15 >= 12289 && c15 <= 12291 || c15 === 12296 || c15 === 12297 || c15 === 12298 || c15 === 12299 || c15 === 12300 || c15 === 12301 || c15 === 12302 || c15 === 12303 || c15 === 12304 || c15 === 12305 || c15 >= 12306 && c15 <= 12307 || c15 === 12308 || c15 === 12309 || c15 === 12310 || c15 === 12311 || c15 === 12312 || c15 === 12313 || c15 === 12314 || c15 === 12315 || c15 === 12316 || c15 === 12317 || c15 >= 12318 && c15 <= 12319 || c15 === 12320 || c15 === 12336 || c15 === 64830 || c15 === 64831 || c15 >= 65093 && c15 <= 65094;
}

// node_modules/@formatjs/icu-messageformat-parser/lib/index.js
function pruneLocation(els) {
  els.forEach(function(el) {
    delete el.location;
    if (isSelectElement(el) || isPluralElement(el)) {
      for (var k6 in el.options) {
        delete el.options[k6].location;
        pruneLocation(el.options[k6].value);
      }
    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
      delete el.style.location;
    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
      delete el.style.location;
    } else if (isTagElement(el)) {
      pruneLocation(el.children);
    }
  });
}
function parse(message, opts) {
  if (opts === void 0) {
    opts = {};
  }
  opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
  var result = new Parser(message, opts).parse();
  if (result.err) {
    var error = SyntaxError(ErrorKind[result.err.kind]);
    error.location = result.err.location;
    error.originalMessage = result.err.message;
    throw error;
  }
  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
    pruneLocation(result.val);
  }
  return result.val;
}

// node_modules/@formatjs/fast-memoize/lib/index.js
function memoize(fn, options) {
  var cache = options && options.cache ? options.cache : cacheDefault;
  var serializer = options && options.serializer ? options.serializer : serializerDefault;
  var strategy = options && options.strategy ? options.strategy : strategyDefault;
  return strategy(fn, {
    cache,
    serializer
  });
}
function isPrimitive(value) {
  return value == null || typeof value === "number" || typeof value === "boolean";
}
function monadic(fn, cache, serializer, arg) {
  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
  var computedValue = cache.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.call(this, arg);
    cache.set(cacheKey, computedValue);
  }
  return computedValue;
}
function variadic(fn, cache, serializer) {
  var args = Array.prototype.slice.call(arguments, 3);
  var cacheKey = serializer(args);
  var computedValue = cache.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.apply(this, args);
    cache.set(cacheKey, computedValue);
  }
  return computedValue;
}
function assemble(fn, context, strategy, cache, serialize) {
  return strategy.bind(context, fn, cache, serialize);
}
function strategyDefault(fn, options) {
  var strategy = fn.length === 1 ? monadic : variadic;
  return assemble(fn, this, strategy, options.cache.create(), options.serializer);
}
function strategyVariadic(fn, options) {
  return assemble(fn, this, variadic, options.cache.create(), options.serializer);
}
function strategyMonadic(fn, options) {
  return assemble(fn, this, monadic, options.cache.create(), options.serializer);
}
var serializerDefault = function() {
  return JSON.stringify(arguments);
};
function ObjectWithoutPrototypeCache() {
  this.cache = /* @__PURE__ */ Object.create(null);
}
ObjectWithoutPrototypeCache.prototype.get = function(key) {
  return this.cache[key];
};
ObjectWithoutPrototypeCache.prototype.set = function(key, value) {
  this.cache[key] = value;
};
var cacheDefault = {
  create: function create() {
    return new ObjectWithoutPrototypeCache();
  }
};
var strategies = {
  variadic: strategyVariadic,
  monadic: strategyMonadic
};

// node_modules/intl-messageformat/lib/src/error.js
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
  ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
  ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = (
  /** @class */
  function(_super) {
    __extends(FormatError2, _super);
    function FormatError2(msg, code, originalMessage) {
      var _this = _super.call(this, msg) || this;
      _this.code = code;
      _this.originalMessage = originalMessage;
      return _this;
    }
    FormatError2.prototype.toString = function() {
      return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError2;
  }(Error)
);
var InvalidValueError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueError2, _super);
    function InvalidValueError2(variableId, value, options, originalMessage) {
      return _super.call(this, 'Invalid values for "'.concat(variableId, '": "').concat(value, '". Options are "').concat(Object.keys(options).join('", "'), '"'), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError2;
  }(FormatError)
);
var InvalidValueTypeError = (
  /** @class */
  function(_super) {
    __extends(InvalidValueTypeError2, _super);
    function InvalidValueTypeError2(value, type, originalMessage) {
      return _super.call(this, 'Value for "'.concat(value, '" must be of type ').concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError2;
  }(FormatError)
);
var MissingValueError = (
  /** @class */
  function(_super) {
    __extends(MissingValueError2, _super);
    function MissingValueError2(variableId, originalMessage) {
      return _super.call(this, 'The intl string context variable "'.concat(variableId, '" was not provided to the string "').concat(originalMessage, '"'), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError2;
  }(FormatError)
);

// node_modules/intl-messageformat/lib/src/formatters.js
var PART_TYPE;
(function(PART_TYPE2) {
  PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
  PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
  if (parts.length < 2) {
    return parts;
  }
  return parts.reduce(function(all, part) {
    var lastPart = all[all.length - 1];
    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
      all.push(part);
    } else {
      lastPart.value += part.value;
    }
    return all;
  }, []);
}
function isFormatXMLElementFn(el) {
  return typeof el === "function";
}
function formatToParts(els, locales, formatters, formats, values, currentPluralValue, originalMessage) {
  if (els.length === 1 && isLiteralElement(els[0])) {
    return [
      {
        type: PART_TYPE.literal,
        value: els[0].value
      }
    ];
  }
  var result = [];
  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
    var el = els_1[_i];
    if (isLiteralElement(el)) {
      result.push({
        type: PART_TYPE.literal,
        value: el.value
      });
      continue;
    }
    if (isPoundElement(el)) {
      if (typeof currentPluralValue === "number") {
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales).format(currentPluralValue)
        });
      }
      continue;
    }
    var varName = el.value;
    if (!(values && varName in values)) {
      throw new MissingValueError(varName, originalMessage);
    }
    var value = values[varName];
    if (isArgumentElement(el)) {
      if (!value || typeof value === "string" || typeof value === "number") {
        value = typeof value === "string" || typeof value === "number" ? String(value) : "";
      }
      result.push({
        type: typeof value === "string" ? PART_TYPE.literal : PART_TYPE.object,
        value
      });
      continue;
    }
    if (isDateElement(el)) {
      var style = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTimeElement(el)) {
      var style = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : formats.time.medium;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isNumberElement(el)) {
      var style = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
      if (style && style.scale) {
        value = value * (style.scale || 1);
      }
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getNumberFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTagElement(el)) {
      var children = el.children, value_1 = el.value;
      var formatFn = values[value_1];
      if (!isFormatXMLElementFn(formatFn)) {
        throw new InvalidValueTypeError(value_1, "function", originalMessage);
      }
      var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);
      var chunks = formatFn(parts.map(function(p7) {
        return p7.value;
      }));
      if (!Array.isArray(chunks)) {
        chunks = [chunks];
      }
      result.push.apply(result, chunks.map(function(c15) {
        return {
          type: typeof c15 === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: c15
        };
      }));
    }
    if (isSelectElement(el)) {
      var opt = el.options[value] || el.options.other;
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));
      continue;
    }
    if (isPluralElement(el)) {
      var opt = el.options["=".concat(value)];
      if (!opt) {
        if (!Intl.PluralRules) {
          throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
        }
        var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value - (el.offset || 0));
        opt = el.options[rule] || el.options.other;
      }
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));
      continue;
    }
  }
  return mergeLiteral(result);
}

// node_modules/intl-messageformat/lib/src/core.js
function mergeConfig(c1, c22) {
  if (!c22) {
    return c1;
  }
  return __assign(__assign(__assign({}, c1 || {}), c22 || {}), Object.keys(c1).reduce(function(all, k6) {
    all[k6] = __assign(__assign({}, c1[k6]), c22[k6] || {});
    return all;
  }, {}));
}
function mergeConfigs(defaultConfig, configs) {
  if (!configs) {
    return defaultConfig;
  }
  return Object.keys(defaultConfig).reduce(function(all, k6) {
    all[k6] = mergeConfig(defaultConfig[k6], configs[k6]);
    return all;
  }, __assign({}, defaultConfig));
}
function createFastMemoizeCache(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value) {
          store[key] = value;
        }
      };
    }
  };
}
function createDefaultFormatters(cache) {
  if (cache === void 0) {
    cache = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
  }
  return {
    getNumberFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.number),
      strategy: strategies.variadic
    }),
    getDateTimeFormat: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.dateTime),
      strategy: strategies.variadic
    }),
    getPluralRules: memoize(function() {
      var _a2;
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray([void 0], args, false)))();
    }, {
      cache: createFastMemoizeCache(cache.pluralRules),
      strategy: strategies.variadic
    })
  };
}
var IntlMessageFormat = (
  /** @class */
  function() {
    function IntlMessageFormat2(message, locales, overrideFormats, opts) {
      if (locales === void 0) {
        locales = IntlMessageFormat2.defaultLocale;
      }
      var _this = this;
      this.formatterCache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
      this.format = function(values) {
        var parts = _this.formatToParts(values);
        if (parts.length === 1) {
          return parts[0].value;
        }
        var result = parts.reduce(function(all, part) {
          if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
            all.push(part.value);
          } else {
            all[all.length - 1] += part.value;
          }
          return all;
        }, []);
        if (result.length <= 1) {
          return result[0] || "";
        }
        return result;
      };
      this.formatToParts = function(values) {
        return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, void 0, _this.message);
      };
      this.resolvedOptions = function() {
        var _a3;
        return {
          locale: ((_a3 = _this.resolvedLocale) === null || _a3 === void 0 ? void 0 : _a3.toString()) || Intl.NumberFormat.supportedLocalesOf(_this.locales)[0]
        };
      };
      this.getAst = function() {
        return _this.ast;
      };
      this.locales = locales;
      this.resolvedLocale = IntlMessageFormat2.resolveLocale(locales);
      if (typeof message === "string") {
        this.message = message;
        if (!IntlMessageFormat2.__parse) {
          throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
        }
        var _a2 = opts || {}, formatters = _a2.formatters, parseOpts = __rest(_a2, ["formatters"]);
        this.ast = IntlMessageFormat2.__parse(message, __assign(__assign({}, parseOpts), { locale: this.resolvedLocale }));
      } else {
        this.ast = message;
      }
      if (!Array.isArray(this.ast)) {
        throw new TypeError("A message must be provided as a String or AST.");
      }
      this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
      this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
      get: function() {
        if (!IntlMessageFormat2.memoizedDefaultLocale) {
          IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
        }
        return IntlMessageFormat2.memoizedDefaultLocale;
      },
      enumerable: false,
      configurable: true
    });
    IntlMessageFormat2.memoizedDefaultLocale = null;
    IntlMessageFormat2.resolveLocale = function(locales) {
      if (typeof Intl.Locale === "undefined") {
        return;
      }
      var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
      if (supportedLocales.length > 0) {
        return new Intl.Locale(supportedLocales[0]);
      }
      return new Intl.Locale(typeof locales === "string" ? locales : locales[0]);
    };
    IntlMessageFormat2.__parse = parse;
    IntlMessageFormat2.formats = {
      number: {
        integer: {
          maximumFractionDigits: 0
        },
        currency: {
          style: "currency"
        },
        percent: {
          style: "percent"
        }
      },
      date: {
        short: {
          month: "numeric",
          day: "numeric",
          year: "2-digit"
        },
        medium: {
          month: "short",
          day: "numeric",
          year: "numeric"
        },
        long: {
          month: "long",
          day: "numeric",
          year: "numeric"
        },
        full: {
          weekday: "long",
          month: "long",
          day: "numeric",
          year: "numeric"
        }
      },
      time: {
        short: {
          hour: "numeric",
          minute: "numeric"
        },
        medium: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric"
        },
        long: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        },
        full: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        }
      }
    };
    return IntlMessageFormat2;
  }()
);

// node_modules/@react-aria/i18n/dist/useMessageFormatter.module.js
init_compat_module();

// node_modules/@nextui-org/react/esm/theme/theme-provider.js
init_compat_module();

// node_modules/@react-aria/overlays/dist/module.js
init_compat_module();

// node_modules/@react-stately/utils/dist/import.mjs
init_compat_module();
function $458b0a5536c1a7cf$export$40bfa8c7b0832715(value, defaultValue, onChange) {
  let [stateValue, setStateValue] = (0, h)(value || defaultValue);
  let ref = (0, _)(value !== void 0);
  let wasControlled = ref.current;
  let isControlled = value !== void 0;
  let stateRef = (0, _)(stateValue);
  if (wasControlled !== isControlled)
    console.warn(`WARN: A component changed from ${wasControlled ? "controlled" : "uncontrolled"} to ${isControlled ? "controlled" : "uncontrolled"}.`);
  ref.current = isControlled;
  let setValue = (0, T)((value2, ...args) => {
    let onChangeCaller = (value3, ...onChangeArgs) => {
      if (onChange) {
        if (!Object.is(stateRef.current, value3))
          onChange(value3, ...onChangeArgs);
      }
      if (!isControlled)
        stateRef.current = value3;
    };
    if (typeof value2 === "function") {
      console.warn("We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320");
      let updateFunction = (oldValue, ...functionArgs) => {
        let interceptedValue = value2(isControlled ? stateRef.current : oldValue, ...functionArgs);
        onChangeCaller(interceptedValue, ...args);
        if (!isControlled)
          return interceptedValue;
        return oldValue;
      };
      setStateValue(updateFunction);
    } else {
      if (!isControlled)
        setStateValue(value2);
      onChangeCaller(value2, ...args);
    }
  }, [
    isControlled,
    onChange
  ]);
  if (isControlled)
    stateRef.current = value;
  else
    value = stateValue;
  return [
    value,
    setValue
  ];
}

// node_modules/@react-aria/overlays/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/overlays/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext2 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext2 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext2);
var $704cf1d3b684cc5c$var$canUseDOM2 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $704cf1d3b684cc5c$var$componentIds = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter(isDisabled = false) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext2);
  let ref = (0, _)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, Cn).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b262(defaultId) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext2);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext2 && !$704cf1d3b684cc5c$var$canUseDOM2)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}
function $704cf1d3b684cc5c$export$535bd6ca7f90a2732() {
  let cur = (0, q)($704cf1d3b684cc5c$var$SSRContext2);
  return cur.isSSR;
}

// node_modules/clsx/dist/clsx.m.js
function r5(e15) {
  var t9, f5, n15 = "";
  if ("string" == typeof e15 || "number" == typeof e15)
    n15 += e15;
  else if ("object" == typeof e15)
    if (Array.isArray(e15))
      for (t9 = 0; t9 < e15.length; t9++)
        e15[t9] && (f5 = r5(e15[t9])) && (n15 && (n15 += " "), n15 += f5);
    else
      for (t9 in e15)
        e15[t9] && (n15 && (n15 += " "), n15 += t9);
  return n15;
}
function clsx() {
  for (var e15, t9, f5 = 0, n15 = ""; f5 < arguments.length; )
    (e15 = arguments[f5++]) && (t9 = r5(e15)) && (n15 && (n15 += " "), n15 += t9);
  return n15;
}
var clsx_m_default = clsx;

// node_modules/@react-aria/overlays/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e37(defaultId) {
  let [value, setValue] = (0, h)(defaultId);
  let nextId = (0, _)(null);
  let res = (0, $704cf1d3b684cc5c$export$619500959fc48b262)(value);
  let updateValue = (0, T)((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap.set(res, updateValue);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    let r14 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap.delete(r14);
    };
  }, [
    res
  ]);
  (0, p)(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f842629(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe928(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f842629)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
function $7215afc6de606d6b$export$de79e2c695e052f3(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached = null;
function $7215afc6de606d6b$var$supportsPreventScroll() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached;
}
function $7215afc6de606d6b$var$getScrollableElements(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents);
}
function $bbed8b41f857bcc0$export$24490316f764c430(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed6() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $313b98861ee5dd6c$export$d6875122194c7b44(props, defaultLabel) {
  let { id, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id = (0, $bdb11010cef70236$export$f680877a34711e37)(id);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      ...labelledBy.trim().split(/\s+/),
      id
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy)
    labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel)
    label = defaultLabel;
  return {
    id,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
var $5df64b3807dc15ee$var$visualViewport = typeof window !== "undefined" && window.visualViewport;
function $c87311424ea30a05$var$testUserAgent(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea10() {
  return $c87311424ea30a05$var$testPlatform(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d99() {
  return $c87311424ea30a05$var$testPlatform(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e4224() {
  return $c87311424ea30a05$var$testPlatform(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea10() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f1() {
  return $c87311424ea30a05$export$186c6964ca17d99() || $c87311424ea30a05$export$7bef049ce92e4224();
}
function $c87311424ea30a05$export$a11b0059900ceec8() {
  return $c87311424ea30a05$var$testUserAgent(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec8)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf63(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/overlays/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state = "default";
var $14c0b72509d70225$var$savedUserSelect = "";
var $14c0b72509d70225$var$modifiedElementMap = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a4697467175487(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state === "default") {
      $14c0b72509d70225$var$savedUserSelect = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e3295(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f1)()) {
    if ($14c0b72509d70225$var$state !== "disabled")
      return;
    $14c0b72509d70225$var$state = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c430)(() => {
        if ($14c0b72509d70225$var$state === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect || "";
          $14c0b72509d70225$var$savedUserSelect = "";
          $14c0b72509d70225$var$state = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb5 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb5.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad21(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed6)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf63)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f3)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a4697467175487)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e3295)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e99 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad21)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe928)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b8 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe928)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb5).Provider, {
    value: context
  }, children);
});
var $8a9cb279dc87e130$export$905e7fc544a71f36 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc(onBlur) {
  let stateRef = (0, _)({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return (0, T)((e15) => {
    if (e15.target instanceof HTMLButtonElement || e15.target instanceof HTMLInputElement || e15.target instanceof HTMLTextAreaElement || e15.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e15.target;
      let onBlurHandler = (e16) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f36("blur", e16));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
var $507fabe10e71c6fb$var$currentModality = null;
var $507fabe10e71c6fb$var$changeHandlers = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea10)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
  if ($507fabe10e71c6fb$var$isValidKey(e15)) {
    $507fabe10e71c6fb$var$currentModality = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent(e15) {
  $507fabe10e71c6fb$var$currentModality = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    $507fabe10e71c6fb$var$currentModality = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus && !$507fabe10e71c6fb$var$hasBlurredWindowRecently) {
    $507fabe10e71c6fb$var$currentModality = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents);
}
function $9ab94262bd0047c7$export$420e68273165f4ec(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = (0, _)({
    isFocusWithin: false
  });
  let onBlur = (0, T)((e15) => {
    if (state.current.isFocusWithin && !e15.currentTarget.contains(e15.relatedTarget)) {
      state.current.isFocusWithin = false;
      if (onBlurWithin)
        onBlurWithin(e15);
      if (onFocusWithinChange)
        onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state
  ]);
  let onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc)(onBlur);
  let onFocus = (0, T)((e15) => {
    if (!state.current.isFocusWithin && document.activeElement === e15.target) {
      if (onFocusWithin)
        onFocusWithin(e15);
      if (onFocusWithinChange)
        onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e15);
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus
  ]);
  if (isDisabled)
    return {
      focusWithinProps: {
        onFocus: null,
        onBlur: null
      }
    };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}
function $e0b6e0b68ec7f50f$export$872b660ac5a1ff98(props) {
  let { ref, onInteractOutside, isDisabled, onInteractOutsideStart } = props;
  let stateRef = (0, _)({
    isPointerDown: false,
    ignoreEmulatedMouseEvents: false,
    onInteractOutside,
    onInteractOutsideStart
  });
  let state = stateRef.current;
  state.onInteractOutside = onInteractOutside;
  state.onInteractOutsideStart = onInteractOutsideStart;
  (0, p)(() => {
    if (isDisabled)
      return;
    let onPointerDown = (e15) => {
      if ($e0b6e0b68ec7f50f$var$isValidEvent(e15, ref) && state.onInteractOutside) {
        if (state.onInteractOutsideStart)
          state.onInteractOutsideStart(e15);
        state.isPointerDown = true;
      }
    };
    if (typeof PointerEvent !== "undefined") {
      let onPointerUp = (e15) => {
        if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e15, ref))
          state.onInteractOutside(e15);
        state.isPointerDown = false;
      };
      document.addEventListener("pointerdown", onPointerDown, true);
      document.addEventListener("pointerup", onPointerUp, true);
      return () => {
        document.removeEventListener("pointerdown", onPointerDown, true);
        document.removeEventListener("pointerup", onPointerUp, true);
      };
    } else {
      let onMouseUp = (e15) => {
        if (state.ignoreEmulatedMouseEvents)
          state.ignoreEmulatedMouseEvents = false;
        else if (state.isPointerDown && state.onInteractOutside && $e0b6e0b68ec7f50f$var$isValidEvent(e15, ref))
          state.onInteractOutside(e15);
        state.isPointerDown = false;
      };
      let onTouchEnd = (e15) => {
        state.ignoreEmulatedMouseEvents = true;
        if (state.onInteractOutside && state.isPointerDown && $e0b6e0b68ec7f50f$var$isValidEvent(e15, ref))
          state.onInteractOutside(e15);
        state.isPointerDown = false;
      };
      document.addEventListener("mousedown", onPointerDown, true);
      document.addEventListener("mouseup", onMouseUp, true);
      document.addEventListener("touchstart", onPointerDown, true);
      document.addEventListener("touchend", onTouchEnd, true);
      return () => {
        document.removeEventListener("mousedown", onPointerDown, true);
        document.removeEventListener("mouseup", onMouseUp, true);
        document.removeEventListener("touchstart", onPointerDown, true);
        document.removeEventListener("touchend", onTouchEnd, true);
      };
    }
  }, [
    ref,
    state,
    isDisabled
  ]);
}
function $e0b6e0b68ec7f50f$var$isValidEvent(event, ref) {
  if (event.button > 0)
    return false;
  if (event.target) {
    const ownerDocument = event.target.ownerDocument;
    if (!ownerDocument || !ownerDocument.documentElement.contains(event.target))
      return false;
    if (event.target.closest("[data-react-aria-top-layer]"))
      return false;
  }
  return ref.current && !ref.current.contains(event.target);
}

// node_modules/@react-aria/overlays/dist/module.js
init_compat_module();

// node_modules/@react-aria/utils/dist/module.js
init_compat_module();
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2 = typeof window !== "undefined" ? Cn.useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap2 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e372(defaultId) {
  let [value, setValue] = h(defaultId);
  let nextId = _(null);
  let res = $704cf1d3b684cc5c$export$619500959fc48b26(value);
  let updateValue = T((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap2.set(res, updateValue);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    let r14 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap2.delete(r14);
    };
  }, [
    res
  ]);
  p(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f8426292(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap2.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap2.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb8(depArray = []) {
  let id = $bdb11010cef70236$export$f680877a34711e372();
  let [resolvedId, setResolvedId] = $1dbecbe27a04f9af$export$14d238f342723f25(id);
  let updateId = T(() => {
    setResolvedId(function* () {
      yield id;
      yield document.getElementById(id) ? id : void 0;
    });
  }, [
    id,
    setResolvedId
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(updateId, [
    id,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e2(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe9282(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = $ff5963eb1fccf552$export$e08e3b67e392101e2(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = clsx_m_default(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = $bdb11010cef70236$export$cd8c9cb68f8426292(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
var $65484d02dcb7eb3e$var$DOMPropNames = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f32(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll2())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements2(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition2(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached2 = null;
function $7215afc6de606d6b$var$supportsPreventScroll2() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached2 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached2 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached2 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached2;
}
function $7215afc6de606d6b$var$getScrollableElements2(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition2(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement2 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks2 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents2() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement2.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement2.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement2.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement2.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement2.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks2)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks2.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents2();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents2);
}
function $bbed8b41f857bcc0$export$24490316f764c4302(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement2.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks2.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed62() {
  let globalListeners = _(/* @__PURE__ */ new Map());
  let addGlobalListener = T((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = T((eventTarget, type, listener, options) => {
    var ref;
    let fn = ((ref = globalListeners.current.get(listener)) === null || ref === void 0 ? void 0 : ref.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = T(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  p(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $313b98861ee5dd6c$export$d6875122194c7b442(props, defaultLabel) {
  let { id, "aria-label": label, "aria-labelledby": labelledBy } = props;
  id = $bdb11010cef70236$export$f680877a34711e372(id);
  if (labelledBy && label) {
    let ids = /* @__PURE__ */ new Set([
      ...labelledBy.trim().split(/\s+/),
      id
    ]);
    labelledBy = [
      ...ids
    ].join(" ");
  } else if (labelledBy)
    labelledBy = labelledBy.trim().split(/\s+/).join(" ");
  if (!label && !labelledBy && defaultLabel)
    label = defaultLabel;
  return {
    id,
    "aria-label": label,
    "aria-labelledby": labelledBy
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e2(context, ref) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
var $5df64b3807dc15ee$var$visualViewport2 = typeof window !== "undefined" && window.visualViewport;
var $ef06256079686ba0$var$descriptionId = 0;
var $ef06256079686ba0$var$descriptionNodes = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa12(description) {
  let [id1, setId] = h(void 0);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes.get(description);
    if (!desc) {
      let id = `react-aria-description-${$ef06256079686ba0$var$descriptionId++}`;
      setId(id);
      let node = document.createElement("div");
      node.id = id;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id1 : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent2(re) {
  var ref;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((ref = window.navigator["userAgentData"]) === null || ref === void 0 ? void 0 : ref.brands.some(
    (brand) => re.test(brand.brand)
  )) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform2(re) {
  var ref;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((ref = window.navigator["userAgentData"]) === null || ref === void 0 ? void 0 : ref.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea102() {
  return $c87311424ea30a05$var$testPlatform2(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d992() {
  return $c87311424ea30a05$var$testPlatform2(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e42242() {
  return $c87311424ea30a05$var$testPlatform2(/^iPad/i) || $c87311424ea30a05$export$9ac100e40613ea102() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f12() {
  return $c87311424ea30a05$export$186c6964ca17d992() || $c87311424ea30a05$export$7bef049ce92e42242();
}
function $c87311424ea30a05$export$a11b0059900ceec82() {
  return $c87311424ea30a05$var$testUserAgent2(/Android/i);
}
function $1dbecbe27a04f9af$export$14d238f342723f25(defaultValue) {
  let [value, setValue] = h(defaultValue);
  let valueRef = _(value);
  let effect = _(null);
  valueRef.current = value;
  let nextRef = _(null);
  nextRef.current = () => {
    let newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    if (value === newValue.value)
      nextRef.current();
    else
      setValue(newValue.value);
  };
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    if (effect.current)
      nextRef.current();
  });
  let queue = T((fn) => {
    effect.current = fn(valueRef.current);
    nextRef.current();
  }, [
    effect,
    nextRef
  ]);
  return [
    value,
    queue
  ];
}
function $6a7db85432448f7f$export$60278871457622de2(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ($c87311424ea30a05$export$a11b0059900ceec82() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf632(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/visually-hidden/dist/module.js
init_compat_module();

// node_modules/@react-aria/interactions/dist/module.js
init_compat_module();
var $14c0b72509d70225$var$state2 = "default";
var $14c0b72509d70225$var$savedUserSelect2 = "";
var $14c0b72509d70225$var$modifiedElementMap2 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754872(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f12()) {
    if ($14c0b72509d70225$var$state2 === "default") {
      $14c0b72509d70225$var$savedUserSelect2 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state2 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap2.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32952(target) {
  if ($c87311424ea30a05$export$fedb369cb70207f12()) {
    if ($14c0b72509d70225$var$state2 !== "disabled")
      return;
    $14c0b72509d70225$var$state2 = "restoring";
    setTimeout(() => {
      $bbed8b41f857bcc0$export$24490316f764c4302(() => {
        if ($14c0b72509d70225$var$state2 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect2 || "";
          $14c0b72509d70225$var$savedUserSelect2 = "";
          $14c0b72509d70225$var$state2 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap2.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap2.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap2.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb52 = Cn.createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb52.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext2(props) {
  let context = q($ae1eeba8b9eafd08$export$5165eccb35aaadb52);
  if (context) {
    let { register, ...contextProps } = context;
    props = $3ef42575df84b30b$export$9d1611c77c2fe9282(contextProps, props);
    register();
  }
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e2(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad212(props) {
  let {
    onPress: onPress1,
    onPressChange: onPressChange1,
    onPressStart: onPressStart1,
    onPressEnd: onPressEnd1,
    onPressUp: onPressUp1,
    isDisabled: isDisabled1,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext2(props);
  let propsRef = _(null);
  propsRef.current = {
    onPress: onPress1,
    onPressChange: onPressChange1,
    onPressStart: onPressStart1,
    onPressEnd: onPressEnd1,
    onPressUp: onPressUp1,
    isDisabled: isDisabled1,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = h(false);
  let ref = _({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = $03deb23ff14920c4$export$4eaf04e54aa8eed62();
  let pressProps1 = F(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart, onPressChange, isDisabled } = propsRef.current;
      if (isDisabled || state.didFirePressStart)
        return;
      if (onPressStart)
        onPressStart({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange)
        onPressChange(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd, onPressChange, onPress, isDisabled } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd)
        onPressEnd({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange)
        onPressChange(false);
      setPressed(false);
      if (onPress && wasPressed && !isDisabled)
        onPress({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp, isDisabled } = propsRef.current;
      if (isDisabled)
        return;
      if (onPressUp)
        onPressUp({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e32952(state.target);
      }
    };
    let pressProps = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent2(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard2(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink2(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent2(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent2(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled1)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || $6a7db85432448f7f$export$60278871457622de2(e15.nativeEvent))) {
            if (!isDisabled1 && !preventFocusOnPress)
              $7215afc6de606d6b$export$de79e2c695e052f32(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent2(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard2(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink2(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($6a7db85432448f7f$export$29bf1b5f2c56cf632(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault2(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled1 && !preventFocusOnPress)
            $7215afc6de606d6b$export$de79e2c695e052f32(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$16a46974671754872(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault2(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget2(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget2(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent2(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget2(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            $14c0b72509d70225$export$b0d6fa1ab32e32952(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault2(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = $6a7db85432448f7f$export$60278871457622de2(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled1 && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f32(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget2(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent2(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent2(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled1 && !preventFocusOnPress)
          $7215afc6de606d6b$export$de79e2c695e052f32(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$16a46974671754872(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById2(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget2(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById2(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget2(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          $14c0b72509d70225$export$b0d6fa1ab32e32952(state.target);
        removeAllGlobalListeners();
      };
      pressProps.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps;
  }, [
    addGlobalListener,
    isDisabled1,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  p(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        $14c0b72509d70225$export$b0d6fa1ab32e32952(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: $3ef42575df84b30b$export$9d1611c77c2fe9282(domProps, pressProps1)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink2(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent2(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey2(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && (!$f6c31cce2adf654f$var$isHTMLAnchorLink2(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent2(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById2(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent2(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect2(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping2(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget2(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect2(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping2(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault2(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard2(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey2(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes2 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey2(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes2.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e992 = Cn.forwardRef(({ children, ...props }, ref) => {
  let newRef = _();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad212({
    ...props,
    ref
  });
  let child = Cn.Children.only(children);
  return Cn.cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...$3ef42575df84b30b$export$9d1611c77c2fe9282(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b82 = Cn.forwardRef(({ children, ...props }, ref) => {
  let isRegistered = _(false);
  let prevContext = q($ae1eeba8b9eafd08$export$5165eccb35aaadb52);
  let context = $3ef42575df84b30b$export$9d1611c77c2fe9282(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  $e7801be82b4b2a53$export$4debdb1a3f0fa79e2(prevContext, ref);
  p(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return Cn.createElement($ae1eeba8b9eafd08$export$5165eccb35aaadb52.Provider, {
    value: context
  }, children);
});
var $8a9cb279dc87e130$export$905e7fc544a71f362 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc2(onBlur) {
  let stateRef = _({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return T((e1) => {
    if (e1.target instanceof HTMLButtonElement || e1.target instanceof HTMLInputElement || e1.target instanceof HTMLTextAreaElement || e1.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e1.target;
      let onBlurHandler = (e15) => {
        var _current, ref;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (ref = (_current = stateRef.current).onBlur) === null || ref === void 0 ? void 0 : ref.call(_current, new $8a9cb279dc87e130$export$905e7fc544a71f362("blur", e15));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e6(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = T((e15) => {
    if (e15.target === e15.currentTarget) {
      if (onBlurProp)
        onBlurProp(e15);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc2(onBlur);
  const onFocus = T((e15) => {
    if (e15.target === e15.currentTarget) {
      if (onFocusProp)
        onFocusProp(e15);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e15);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : null
    }
  };
}
var $507fabe10e71c6fb$var$currentModality2 = null;
var $507fabe10e71c6fb$var$changeHandlers2 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners2 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus2 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently2 = false;
var $507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS = {
  Tab: true,
  Escape: true
};
function $507fabe10e71c6fb$var$triggerChangeHandlers2(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers2)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey2(e15) {
  return !(e15.metaKey || !$c87311424ea30a05$export$9ac100e40613ea102() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent2(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus2 = true;
  if ($507fabe10e71c6fb$var$isValidKey2(e15)) {
    $507fabe10e71c6fb$var$currentModality2 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers2("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent2(e15) {
  $507fabe10e71c6fb$var$currentModality2 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus2 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers2("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent2(e15) {
  if ($6a7db85432448f7f$export$60278871457622de2(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus2 = true;
    $507fabe10e71c6fb$var$currentModality2 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent2(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus2 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently2) {
    $507fabe10e71c6fb$var$currentModality2 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers2("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus2 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently2 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur2() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus2 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently2 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents2() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners2)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus2 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent2, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent2, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent2, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent2, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur2, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent2, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent2, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent2, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners2 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents2();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents2);
}
function $507fabe10e71c6fb$export$b9b3dfddab17db27() {
  return $507fabe10e71c6fb$var$currentModality2 !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a9() {
  return $507fabe10e71c6fb$var$currentModality2;
}
function $507fabe10e71c6fb$var$isKeyboardFocusEvent(isTextInput, modality, e15) {
  return !(isTextInput && modality === "keyboard" && e15 instanceof KeyboardEvent && !$507fabe10e71c6fb$var$FOCUS_VISIBLE_INPUT_KEYS[e15.key]);
}
function $507fabe10e71c6fb$export$ec71b4b83ac08ec3(fn, deps, opts) {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents2();
  p(() => {
    let handler = (modality, e15) => {
      if (!$507fabe10e71c6fb$var$isKeyboardFocusEvent(opts === null || opts === void 0 ? void 0 : opts.isTextInput, modality, e15))
        return;
      fn($507fabe10e71c6fb$export$b9b3dfddab17db27());
    };
    $507fabe10e71c6fb$var$changeHandlers2.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers2.delete(handler);
    };
  }, deps);
}
function $9ab94262bd0047c7$export$420e68273165f4ec2(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = _({
    isFocusWithin: false
  });
  let onBlur = T((e15) => {
    if (state.current.isFocusWithin && !e15.currentTarget.contains(e15.relatedTarget)) {
      state.current.isFocusWithin = false;
      if (onBlurWithin)
        onBlurWithin(e15);
      if (onFocusWithinChange)
        onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state
  ]);
  let onSyntheticFocus = $8a9cb279dc87e130$export$715c682d09d639cc2(onBlur);
  let onFocus = T((e15) => {
    if (!state.current.isFocusWithin) {
      if (onFocusWithin)
        onFocusWithin(e15);
      if (onFocusWithinChange)
        onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e15);
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus
  ]);
  if (isDisabled)
    return {
      focusWithinProps: {
        onFocus: null,
        onBlur: null
      }
    };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}
var $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
var $6179b936705e76d3$var$hoverCount = 0;
function $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents() {
  $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = true;
  setTimeout(() => {
    $6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents = false;
  }, 50);
}
function $6179b936705e76d3$var$handleGlobalPointerEvent(e15) {
  if (e15.pointerType === "touch")
    $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents();
}
function $6179b936705e76d3$var$setupGlobalTouchEvents() {
  if (typeof document === "undefined")
    return;
  if (typeof PointerEvent !== "undefined")
    document.addEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
  else
    document.addEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  $6179b936705e76d3$var$hoverCount++;
  return () => {
    $6179b936705e76d3$var$hoverCount--;
    if ($6179b936705e76d3$var$hoverCount > 0)
      return;
    if (typeof PointerEvent !== "undefined")
      document.removeEventListener("pointerup", $6179b936705e76d3$var$handleGlobalPointerEvent);
    else
      document.removeEventListener("touchend", $6179b936705e76d3$var$setGlobalIgnoreEmulatedMouseEvents);
  };
}
function $6179b936705e76d3$export$ae780daf29e6d456(props) {
  let { onHoverStart, onHoverChange, onHoverEnd, isDisabled } = props;
  let [isHovered, setHovered] = h(false);
  let state = _({
    isHovered: false,
    ignoreEmulatedMouseEvents: false,
    pointerType: "",
    target: null
  }).current;
  p($6179b936705e76d3$var$setupGlobalTouchEvents, []);
  let { hoverProps: hoverProps1, triggerHoverEnd: triggerHoverEnd1 } = F(() => {
    let triggerHoverStart = (event, pointerType) => {
      state.pointerType = pointerType;
      if (isDisabled || pointerType === "touch" || state.isHovered || !event.currentTarget.contains(event.target))
        return;
      state.isHovered = true;
      let target = event.currentTarget;
      state.target = target;
      if (onHoverStart)
        onHoverStart({
          type: "hoverstart",
          target,
          pointerType
        });
      if (onHoverChange)
        onHoverChange(true);
      setHovered(true);
    };
    let triggerHoverEnd = (event, pointerType) => {
      state.pointerType = "";
      state.target = null;
      if (pointerType === "touch" || !state.isHovered)
        return;
      state.isHovered = false;
      let target = event.currentTarget;
      if (onHoverEnd)
        onHoverEnd({
          type: "hoverend",
          target,
          pointerType
        });
      if (onHoverChange)
        onHoverChange(false);
      setHovered(false);
    };
    let hoverProps = {};
    if (typeof PointerEvent !== "undefined") {
      hoverProps.onPointerEnter = (e15) => {
        if ($6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents && e15.pointerType === "mouse")
          return;
        triggerHoverStart(e15, e15.pointerType);
      };
      hoverProps.onPointerLeave = (e15) => {
        if (!isDisabled && e15.currentTarget.contains(e15.target))
          triggerHoverEnd(e15, e15.pointerType);
      };
    } else {
      hoverProps.onTouchStart = () => {
        state.ignoreEmulatedMouseEvents = true;
      };
      hoverProps.onMouseEnter = (e15) => {
        if (!state.ignoreEmulatedMouseEvents && !$6179b936705e76d3$var$globalIgnoreEmulatedMouseEvents)
          triggerHoverStart(e15, "mouse");
        state.ignoreEmulatedMouseEvents = false;
      };
      hoverProps.onMouseLeave = (e15) => {
        if (!isDisabled && e15.currentTarget.contains(e15.target))
          triggerHoverEnd(e15, "mouse");
      };
    }
    return {
      hoverProps,
      triggerHoverEnd
    };
  }, [
    onHoverStart,
    onHoverChange,
    onHoverEnd,
    isDisabled,
    state
  ]);
  p(() => {
    if (isDisabled)
      triggerHoverEnd1({
        currentTarget: state.target
      }, state.pointerType);
  }, [
    isDisabled
  ]);
  return {
    hoverProps: hoverProps1,
    isHovered
  };
}
var $8a26561d2877236e$var$DEFAULT_THRESHOLD = 500;
function $8a26561d2877236e$export$c24ed0104d07eab9(props) {
  let { isDisabled, onLongPressStart, onLongPressEnd, onLongPress, threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD, accessibilityDescription } = props;
  const timeRef = _(null);
  let { addGlobalListener, removeGlobalListener } = $03deb23ff14920c4$export$4eaf04e54aa8eed62();
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad212({
    isDisabled,
    onPressStart(e1) {
      if (e1.pointerType === "mouse" || e1.pointerType === "touch") {
        if (onLongPressStart)
          onLongPressStart({
            ...e1,
            type: "longpressstart"
          });
        timeRef.current = setTimeout(() => {
          e1.target.dispatchEvent(new PointerEvent("pointercancel", {
            bubbles: true
          }));
          if (onLongPress)
            onLongPress({
              ...e1,
              type: "longpress"
            });
          timeRef.current = null;
        }, threshold);
        if (e1.pointerType === "touch") {
          let onContextMenu = (e15) => {
            e15.preventDefault();
          };
          addGlobalListener(e1.target, "contextmenu", onContextMenu, {
            once: true
          });
          addGlobalListener(window, "pointerup", () => {
            setTimeout(() => {
              removeGlobalListener(e1.target, "contextmenu", onContextMenu);
            }, 30);
          }, {
            once: true
          });
        }
      }
    },
    onPressEnd(e15) {
      if (timeRef.current)
        clearTimeout(timeRef.current);
      if (onLongPressEnd && (e15.pointerType === "mouse" || e15.pointerType === "touch"))
        onLongPressEnd({
          ...e15,
          type: "longpressend"
        });
    }
  });
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa12(onLongPress && !isDisabled ? accessibilityDescription : null);
  return {
    longPressProps: $3ef42575df84b30b$export$9d1611c77c2fe9282(pressProps, descriptionProps)
  };
}

// node_modules/@react-aria/visually-hidden/dist/module.js
var $5c3e21d68f1c4674$var$styles = {
  border: 0,
  clip: "rect(0 0 0 0)",
  clipPath: "inset(50%)",
  height: 1,
  margin: "0 -1px -1px 0",
  overflow: "hidden",
  padding: 0,
  position: "absolute",
  width: 1,
  whiteSpace: "nowrap"
};
function $5c3e21d68f1c4674$export$a966af930f325cab(props = {}) {
  let { style, isFocusable } = props;
  let [isFocused, setFocused] = h(false);
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec2({
    isDisabled: !isFocusable,
    onFocusWithinChange: (val) => setFocused(val)
  });
  let combinedStyles = F(() => {
    if (isFocused)
      return style;
    else if (style)
      return {
        ...$5c3e21d68f1c4674$var$styles,
        ...style
      };
    else
      return $5c3e21d68f1c4674$var$styles;
  }, [
    isFocused
  ]);
  return {
    visuallyHiddenProps: {
      ...focusWithinProps,
      style: combinedStyles
    }
  };
}
function $5c3e21d68f1c4674$export$439d29a4e110a164(props) {
  let { children, elementType: Element2 = "div", isFocusable, style, ...otherProps } = props;
  let { visuallyHiddenProps } = $5c3e21d68f1c4674$export$a966af930f325cab(props);
  return Cn.createElement(Element2, $3ef42575df84b30b$export$9d1611c77c2fe9282(otherProps, visuallyHiddenProps), children);
}

// node_modules/@react-aria/overlays/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();
var $9bf71ea28793e738$var$FocusContext = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR = $9bf71ea28793e738$var$focusableElements.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope(element, scope) {
  return scope.some((node) => node.contains(element));
}
var $9bf71ea28793e738$var$Tree = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e = new $9bf71ea28793e738$var$Tree();
var $e6afbd83fe6ebbd2$var$FocusableContext = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$FocusableProvider(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd5 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider);

// node_modules/@react-aria/overlays/dist/module.js
function $parcel$interopDefault(a13) {
  return a13 && a13.__esModule ? a13.default : a13;
}
var $edcf132a9284368a$var$AXIS = {
  top: "top",
  bottom: "top",
  left: "left",
  right: "left"
};
var $edcf132a9284368a$var$FLIPPED_DIRECTION = {
  top: "bottom",
  bottom: "top",
  left: "right",
  right: "left"
};
var $edcf132a9284368a$var$CROSS_AXIS = {
  top: "left",
  left: "top"
};
var $edcf132a9284368a$var$AXIS_SIZE = {
  top: "height",
  left: "width"
};
var $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE = {};
var $edcf132a9284368a$var$visualViewport = typeof window !== "undefined" && window.visualViewport;
function $edcf132a9284368a$var$getContainerDimensions(containerNode) {
  let width = 0, height = 0, top = 0, left = 0;
  let scroll = {};
  if (containerNode.tagName === "BODY") {
    let documentElement = document.documentElement;
    var ref;
    width = (ref = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.width) !== null && ref !== void 0 ? ref : documentElement.clientWidth;
    var ref1;
    height = (ref1 = $edcf132a9284368a$var$visualViewport === null || $edcf132a9284368a$var$visualViewport === void 0 ? void 0 : $edcf132a9284368a$var$visualViewport.height) !== null && ref1 !== void 0 ? ref1 : documentElement.clientHeight;
    scroll.top = documentElement.scrollTop || containerNode.scrollTop;
    scroll.left = documentElement.scrollLeft || containerNode.scrollLeft;
  } else {
    ({ width, height, top, left } = $edcf132a9284368a$var$getOffset(containerNode));
    scroll.top = containerNode.scrollTop;
    scroll.left = containerNode.scrollLeft;
  }
  return {
    width,
    height,
    scroll,
    top,
    left
  };
}
function $edcf132a9284368a$var$getScroll(node) {
  return {
    top: node.scrollTop,
    left: node.scrollLeft,
    width: node.scrollWidth,
    height: node.scrollHeight
  };
}
function $edcf132a9284368a$var$getDelta(axis, offset, size, containerDimensions, padding) {
  let containerScroll = containerDimensions.scroll[axis];
  let containerHeight = containerDimensions[$edcf132a9284368a$var$AXIS_SIZE[axis]];
  let startEdgeOffset = offset - padding - containerScroll;
  let endEdgeOffset = offset + padding - containerScroll + size;
  if (startEdgeOffset < 0)
    return -startEdgeOffset;
  else if (endEdgeOffset > containerHeight)
    return Math.max(containerHeight - endEdgeOffset, -startEdgeOffset);
  else
    return 0;
}
function $edcf132a9284368a$var$getMargins(node) {
  let style = window.getComputedStyle(node);
  return {
    top: parseInt(style.marginTop, 10) || 0,
    bottom: parseInt(style.marginBottom, 10) || 0,
    left: parseInt(style.marginLeft, 10) || 0,
    right: parseInt(style.marginRight, 10) || 0
  };
}
function $edcf132a9284368a$var$parsePlacement(input) {
  if ($edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input])
    return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];
  let [placement, crossPlacement] = input.split(" ");
  let axis = $edcf132a9284368a$var$AXIS[placement] || "right";
  let crossAxis = $edcf132a9284368a$var$CROSS_AXIS[axis];
  if (!$edcf132a9284368a$var$AXIS[crossPlacement])
    crossPlacement = "center";
  let size = $edcf132a9284368a$var$AXIS_SIZE[axis];
  let crossSize = $edcf132a9284368a$var$AXIS_SIZE[crossAxis];
  $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input] = {
    placement,
    crossPlacement,
    axis,
    crossAxis,
    size,
    crossSize
  };
  return $edcf132a9284368a$var$PARSED_PLACEMENT_CACHE[input];
}
function $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned) {
  let { placement, crossPlacement, axis, crossAxis, size, crossSize } = placementInfo;
  let position = {};
  position[crossAxis] = childOffset[crossAxis];
  if (crossPlacement === "center")
    position[crossAxis] += (childOffset[crossSize] - overlaySize[crossSize]) / 2;
  else if (crossPlacement !== crossAxis)
    position[crossAxis] += childOffset[crossSize] - overlaySize[crossSize];
  position[crossAxis] += crossOffset;
  let minViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2 - overlaySize[crossSize];
  let maxViablePosition = childOffset[crossAxis] + childOffset[crossSize] / 2;
  position[crossAxis] = Math.min(Math.max(minViablePosition, position[crossAxis]), maxViablePosition);
  if (placement === axis) {
    const containerHeight = isContainerPositioned ? containerOffsetWithBoundary[size] : boundaryDimensions[size];
    position[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] = Math.floor(containerHeight - childOffset[axis] + offset);
  } else
    position[axis] = Math.floor(childOffset[axis] + childOffset[size] + offset);
  return position;
}
function $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding) {
  return position.top != null ? Math.max(
    0,
    boundaryDimensions.height + boundaryDimensions.top + boundaryDimensions.scroll.top - (containerOffsetWithBoundary.top + position.top) - (margins.top + margins.bottom + padding)
    // save additional space for margin and padding
  ) : Math.max(
    0,
    childOffset.top + containerOffsetWithBoundary.top - (boundaryDimensions.top + boundaryDimensions.scroll.top) - (margins.top + margins.bottom + padding)
    // save additional space for margin and padding
  );
}
function $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding, placementInfo) {
  let { placement, axis, size } = placementInfo;
  if (placement === axis)
    return Math.max(0, childOffset[axis] - boundaryDimensions[axis] - boundaryDimensions.scroll[axis] + containerOffsetWithBoundary[axis] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);
  return Math.max(0, boundaryDimensions[size] + boundaryDimensions[axis] + boundaryDimensions.scroll[axis] - containerOffsetWithBoundary[axis] - childOffset[axis] - childOffset[size] - margins[axis] - margins[$edcf132a9284368a$var$FLIPPED_DIRECTION[axis]] - padding);
}
function $edcf132a9284368a$export$6839422d1f33cee9(placementInput, childOffset, overlaySize, scrollSize, margins, padding, flip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, userSetMaxHeight) {
  let placementInfo = $edcf132a9284368a$var$parsePlacement(placementInput);
  let { size, crossAxis, crossSize, placement, crossPlacement } = placementInfo;
  let position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
  let normalizedOffset = offset;
  let space = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, placementInfo);
  if (flip && scrollSize[size] > space) {
    let flippedPlacementInfo = $edcf132a9284368a$var$parsePlacement(`${$edcf132a9284368a$var$FLIPPED_DIRECTION[placement]} ${crossPlacement}`);
    let flippedPosition = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, flippedPlacementInfo, offset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
    let flippedSpace = $edcf132a9284368a$var$getAvailableSpace(boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding + offset, flippedPlacementInfo);
    if (flippedSpace > space) {
      placementInfo = flippedPlacementInfo;
      position = flippedPosition;
      normalizedOffset = offset;
    }
  }
  let delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);
  position[crossAxis] += delta;
  let maxHeight = $edcf132a9284368a$var$getMaxHeight(position, boundaryDimensions, containerOffsetWithBoundary, childOffset, margins, padding);
  if (userSetMaxHeight && userSetMaxHeight < maxHeight)
    maxHeight = userSetMaxHeight;
  overlaySize.height = Math.min(overlaySize.height, maxHeight);
  position = $edcf132a9284368a$var$computePosition(childOffset, boundaryDimensions, overlaySize, placementInfo, normalizedOffset, crossOffset, containerOffsetWithBoundary, isContainerPositioned);
  delta = $edcf132a9284368a$var$getDelta(crossAxis, position[crossAxis], overlaySize[crossSize], boundaryDimensions, padding);
  position[crossAxis] += delta;
  let arrowPosition = {};
  arrowPosition[crossAxis] = childOffset[crossAxis] - position[crossAxis] + childOffset[crossSize] / 2;
  return {
    position,
    maxHeight,
    arrowOffsetLeft: arrowPosition.left,
    arrowOffsetTop: arrowPosition.top,
    placement: placementInfo.placement
  };
}
function $edcf132a9284368a$export$b3ceb0cbf1056d98(opts) {
  let { placement, targetNode, overlayNode, scrollNode, padding, shouldFlip, boundaryElement, offset, crossOffset, maxHeight } = opts;
  let container = overlayNode instanceof HTMLElement && overlayNode.offsetParent || document.body;
  let isBodyContainer = container.tagName === "BODY";
  const containerPositionStyle = window.getComputedStyle(container).position;
  let isContainerPositioned = !!containerPositionStyle && containerPositionStyle !== "static";
  let childOffset = isBodyContainer ? $edcf132a9284368a$var$getOffset(targetNode) : $edcf132a9284368a$var$getPosition(targetNode, container);
  if (!isBodyContainer) {
    let { marginTop, marginLeft } = window.getComputedStyle(targetNode);
    childOffset.top += parseInt(marginTop, 10) || 0;
    childOffset.left += parseInt(marginLeft, 10) || 0;
  }
  let overlaySize = $edcf132a9284368a$var$getOffset(overlayNode);
  let margins = $edcf132a9284368a$var$getMargins(overlayNode);
  overlaySize.width += margins.left + margins.right;
  overlaySize.height += margins.top + margins.bottom;
  let scrollSize = $edcf132a9284368a$var$getScroll(scrollNode);
  let boundaryDimensions = $edcf132a9284368a$var$getContainerDimensions(boundaryElement);
  let containerOffsetWithBoundary = boundaryElement.tagName === "BODY" ? $edcf132a9284368a$var$getOffset(container) : $edcf132a9284368a$var$getPosition(container, boundaryElement);
  return $edcf132a9284368a$export$6839422d1f33cee9(placement, childOffset, overlaySize, scrollSize, margins, padding, shouldFlip, boundaryDimensions, containerOffsetWithBoundary, offset, crossOffset, isContainerPositioned, maxHeight);
}
function $edcf132a9284368a$var$getOffset(node) {
  let { top, left, width, height } = node.getBoundingClientRect();
  let { scrollTop, scrollLeft, clientTop, clientLeft } = document.documentElement;
  return {
    top: top + scrollTop - clientTop,
    left: left + scrollLeft - clientLeft,
    width,
    height
  };
}
function $edcf132a9284368a$var$getPosition(node, parent) {
  let style = window.getComputedStyle(node);
  let offset;
  if (style.position === "fixed") {
    let { top, left, width, height } = node.getBoundingClientRect();
    offset = {
      top,
      left,
      width,
      height
    };
  } else {
    offset = $edcf132a9284368a$var$getOffset(node);
    let parentOffset = $edcf132a9284368a$var$getOffset(parent);
    let parentStyle = window.getComputedStyle(parent);
    parentOffset.top += (parseInt(parentStyle.borderTopWidth, 10) || 0) - parent.scrollTop;
    parentOffset.left += (parseInt(parentStyle.borderLeftWidth, 10) || 0) - parent.scrollLeft;
    offset.top -= parentOffset.top;
    offset.left -= parentOffset.left;
  }
  offset.top -= parseInt(style.marginTop, 10) || 0;
  offset.left -= parseInt(style.marginLeft, 10) || 0;
  return offset;
}
var $dd149f63282afbbf$export$f6211563215e3b37 = /* @__PURE__ */ new WeakMap();
function $dd149f63282afbbf$export$18fc8428861184da(opts) {
  let { triggerRef, isOpen, onClose } = opts;
  p(() => {
    if (!isOpen)
      return;
    let onScroll = (e15) => {
      let target = e15.target;
      if (!triggerRef.current || target instanceof Node && !target.contains(triggerRef.current))
        return;
      let onCloseHandler = onClose || $dd149f63282afbbf$export$f6211563215e3b37.get(triggerRef.current);
      if (onCloseHandler)
        onCloseHandler();
    };
    window.addEventListener("scroll", onScroll, true);
    return () => {
      window.removeEventListener("scroll", onScroll, true);
    };
  }, [
    isOpen,
    onClose,
    triggerRef
  ]);
}
var $2a41e45df1593e64$var$visualViewport = typeof window !== "undefined" && window.visualViewport;
function $2a41e45df1593e64$export$d39e1813b3bdd0e1(props) {
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let { targetRef, overlayRef, scrollRef = overlayRef, placement = "bottom", containerPadding = 12, shouldFlip = true, boundaryElement = typeof document !== "undefined" ? document.body : null, offset = 0, crossOffset = 0, shouldUpdatePosition = true, isOpen = true, onClose, maxHeight } = props;
  let [position, setPosition] = h({
    position: {},
    arrowOffsetLeft: void 0,
    arrowOffsetTop: void 0,
    maxHeight: void 0,
    placement: void 0
  });
  let deps = [
    shouldUpdatePosition,
    placement,
    overlayRef.current,
    targetRef.current,
    scrollRef.current,
    containerPadding,
    shouldFlip,
    boundaryElement,
    offset,
    crossOffset,
    isOpen,
    direction,
    maxHeight
  ];
  let updatePosition = T(() => {
    if (shouldUpdatePosition === false || !isOpen || !overlayRef.current || !targetRef.current || !scrollRef.current || !boundaryElement)
      return;
    setPosition($edcf132a9284368a$export$b3ceb0cbf1056d98({
      placement: $2a41e45df1593e64$var$translateRTL(placement, direction),
      overlayNode: overlayRef.current,
      targetNode: targetRef.current,
      scrollNode: scrollRef.current,
      padding: containerPadding,
      shouldFlip,
      boundaryElement,
      offset,
      crossOffset,
      maxHeight
    }));
  }, deps);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(updatePosition, deps);
  $2a41e45df1593e64$var$useResize(updatePosition);
  let isResizing = _(false);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    let timeout;
    let onResize = () => {
      isResizing.current = true;
      clearTimeout(timeout);
      timeout = setTimeout(() => {
        isResizing.current = false;
      }, 500);
      updatePosition();
    };
    $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.addEventListener("resize", onResize);
    return () => {
      $2a41e45df1593e64$var$visualViewport === null || $2a41e45df1593e64$var$visualViewport === void 0 ? void 0 : $2a41e45df1593e64$var$visualViewport.removeEventListener("resize", onResize);
    };
  }, [
    updatePosition
  ]);
  let close = T(() => {
    if (!isResizing.current)
      onClose();
  }, [
    onClose,
    isResizing
  ]);
  $dd149f63282afbbf$export$18fc8428861184da({
    triggerRef: targetRef,
    isOpen,
    onClose: onClose ? close : void 0
  });
  return {
    overlayProps: {
      style: {
        position: "absolute",
        zIndex: 1e5,
        ...position.position,
        maxHeight: position.maxHeight
      }
    },
    placement: position.placement,
    arrowProps: {
      style: {
        left: position.arrowOffsetLeft,
        top: position.arrowOffsetTop
      }
    },
    updatePosition
  };
}
function $2a41e45df1593e64$var$useResize(onResize) {
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    window.addEventListener("resize", onResize, false);
    return () => {
      window.removeEventListener("resize", onResize, false);
    };
  }, [
    onResize
  ]);
}
function $2a41e45df1593e64$var$translateRTL(position, direction) {
  if (direction === "rtl")
    return position.replace("start", "right").replace("end", "left");
  return position.replace("start", "left").replace("end", "right");
}
var $a11501f3d1d39e6c$var$visibleOverlays = [];
function $a11501f3d1d39e6c$export$ea8f71083e90600f(props, ref) {
  let { onClose, shouldCloseOnBlur, isOpen, isDismissable = false, isKeyboardDismissDisabled = false, shouldCloseOnInteractOutside } = props;
  p(() => {
    if (isOpen)
      $a11501f3d1d39e6c$var$visibleOverlays.push(ref);
    return () => {
      let index = $a11501f3d1d39e6c$var$visibleOverlays.indexOf(ref);
      if (index >= 0)
        $a11501f3d1d39e6c$var$visibleOverlays.splice(index, 1);
    };
  }, [
    isOpen,
    ref
  ]);
  let onHide = () => {
    if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref && onClose)
      onClose();
  };
  let onInteractOutsideStart = (e15) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e15.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e15.stopPropagation();
        e15.preventDefault();
      }
    }
  };
  let onInteractOutside = (e15) => {
    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e15.target)) {
      if ($a11501f3d1d39e6c$var$visibleOverlays[$a11501f3d1d39e6c$var$visibleOverlays.length - 1] === ref) {
        e15.stopPropagation();
        e15.preventDefault();
      }
      onHide();
    }
  };
  let onKeyDown = (e15) => {
    if (e15.key === "Escape" && !isKeyboardDismissDisabled) {
      e15.stopPropagation();
      e15.preventDefault();
      onHide();
    }
  };
  $e0b6e0b68ec7f50f$export$872b660ac5a1ff98({
    ref,
    onInteractOutside: isDismissable ? onInteractOutside : null,
    onInteractOutsideStart
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec({
    isDisabled: !shouldCloseOnBlur,
    onBlurWithin: (e15) => {
      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e15.relatedTarget))
        onClose();
    }
  });
  let onPointerDownUnderlay = (e15) => {
    if (e15.target === e15.currentTarget)
      e15.preventDefault();
  };
  return {
    overlayProps: {
      onKeyDown,
      ...focusWithinProps
    },
    underlayProps: {
      onPointerDown: onPointerDownUnderlay
    }
  };
}
function $628037886ba31236$export$f9d5c8beee7d008d(props, state, ref) {
  let { type } = props;
  let { isOpen } = state;
  p(() => {
    if (ref && ref.current)
      $dd149f63282afbbf$export$f6211563215e3b37.set(ref.current, state.close);
  });
  let ariaHasPopup = void 0;
  if (type === "menu")
    ariaHasPopup = true;
  else if (type === "listbox")
    ariaHasPopup = "listbox";
  let overlayId = $bdb11010cef70236$export$f680877a34711e37();
  return {
    triggerProps: {
      "aria-haspopup": ariaHasPopup,
      "aria-expanded": isOpen,
      "aria-controls": isOpen ? overlayId : null,
      onPress: state.toggle
    },
    overlayProps: {
      id: overlayId
    }
  };
}
var $49c51c25361d4cd2$var$visualViewport = typeof window !== "undefined" && window.visualViewport;
var $f57aed4a881a3485$var$Context = Cn.createContext(null);
function $f57aed4a881a3485$export$178405afcd8c5eb(props) {
  let { children } = props;
  let parent = q($f57aed4a881a3485$var$Context);
  let [modalCount, setModalCount] = h(0);
  let context = F(
    () => ({
      parent,
      modalCount,
      addModal() {
        setModalCount(
          (count) => count + 1
        );
        if (parent)
          parent.addModal();
      },
      removeModal() {
        setModalCount(
          (count) => count - 1
        );
        if (parent)
          parent.removeModal();
      }
    }),
    [
      parent,
      modalCount
    ]
  );
  return Cn.createElement($f57aed4a881a3485$var$Context.Provider, {
    value: context
  }, children);
}
function $f57aed4a881a3485$export$d9aaed4c3ece1bc0() {
  let context = q($f57aed4a881a3485$var$Context);
  return {
    modalProviderProps: {
      "aria-hidden": context && context.modalCount > 0 ? true : null
    }
  };
}
function $f57aed4a881a3485$var$OverlayContainerDOM(props) {
  let { modalProviderProps } = $f57aed4a881a3485$export$d9aaed4c3ece1bc0();
  return Cn.createElement("div", {
    "data-overlay-container": true,
    ...props,
    ...modalProviderProps
  });
}
function $f57aed4a881a3485$export$bf688221f59024e5(props) {
  return Cn.createElement($f57aed4a881a3485$export$178405afcd8c5eb, null, Cn.createElement($f57aed4a881a3485$var$OverlayContainerDOM, props));
}
function $f57aed4a881a3485$export$b47c3594eab58386(props) {
  let isSSR = $704cf1d3b684cc5c$export$535bd6ca7f90a2732();
  let { portalContainer = isSSR ? null : document.body, ...rest } = props;
  Cn.useEffect(() => {
    if (portalContainer === null || portalContainer === void 0 ? void 0 : portalContainer.closest("[data-overlay-container]"))
      throw new Error("An OverlayContainer must not be inside another container. Please change the portalContainer prop.");
  }, [
    portalContainer
  ]);
  if (!portalContainer)
    return null;
  let contents = Cn.createElement($f57aed4a881a3485$export$bf688221f59024e5, rest);
  return Cn.createPortal(contents, portalContainer);
}
function $f57aed4a881a3485$export$33ffd74ebf07f060(options) {
  let context = q($f57aed4a881a3485$var$Context);
  if (!context)
    throw new Error("Modal is not contained within a provider");
  p(() => {
    if ((options === null || options === void 0 ? void 0 : options.isDisabled) || !context || !context.parent)
      return;
    context.parent.addModal();
    return () => {
      if (context && context.parent)
        context.parent.removeModal();
    };
  }, [
    context,
    context.parent,
    options === null || options === void 0 ? void 0 : options.isDisabled
  ]);
  return {
    modalProps: {
      "data-ismodal": !(options === null || options === void 0 ? void 0 : options.isDisabled)
    }
  };
}
var $61fe14465afefc5e$exports = {};
var $773d5888b972f1cf$exports = {};
$773d5888b972f1cf$exports = {
  "dismiss": `تجاهل`
};
var $d11f19852b941573$exports = {};
$d11f19852b941573$exports = {
  "dismiss": `Отхвърляне`
};
var $b983974c2ee1efb3$exports = {};
$b983974c2ee1efb3$exports = {
  "dismiss": `Odstranit`
};
var $5809cc9d4e92de73$exports = {};
$5809cc9d4e92de73$exports = {
  "dismiss": `Luk`
};
var $c68c2e4fc74398d1$exports = {};
$c68c2e4fc74398d1$exports = {
  "dismiss": `Schließen`
};
var $0898b4c153db2b77$exports = {};
$0898b4c153db2b77$exports = {
  "dismiss": `Απόρριψη`
};
var $6d74810286a15183$exports = {};
$6d74810286a15183$exports = {
  "dismiss": `Dismiss`
};
var $309d73dc65f78055$exports = {};
$309d73dc65f78055$exports = {
  "dismiss": `Descartar`
};
var $44ad94f7205cf593$exports = {};
$44ad94f7205cf593$exports = {
  "dismiss": `Lõpeta`
};
var $7c28f5687f0779a9$exports = {};
$7c28f5687f0779a9$exports = {
  "dismiss": `Hylkää`
};
var $e6d75df4b68bd73a$exports = {};
$e6d75df4b68bd73a$exports = {
  "dismiss": `Rejeter`
};
var $87505c9dab186d0f$exports = {};
$87505c9dab186d0f$exports = {
  "dismiss": `התעלם`
};
var $553439c3ffb3e492$exports = {};
$553439c3ffb3e492$exports = {
  "dismiss": `Odbaci`
};
var $74cf411061b983a2$exports = {};
$74cf411061b983a2$exports = {
  "dismiss": `Elutasítás`
};
var $e933f298574dc435$exports = {};
$e933f298574dc435$exports = {
  "dismiss": `Ignora`
};
var $ac91fc9fe02f71f6$exports = {};
$ac91fc9fe02f71f6$exports = {
  "dismiss": `閉じる`
};
var $52b96f86422025af$exports = {};
$52b96f86422025af$exports = {
  "dismiss": `무시`
};
var $c0d724c3e51dafa6$exports = {};
$c0d724c3e51dafa6$exports = {
  "dismiss": `Atmesti`
};
var $c92899672a3fe72e$exports = {};
$c92899672a3fe72e$exports = {
  "dismiss": `Nerādīt`
};
var $9f576b39d8e7a9d6$exports = {};
$9f576b39d8e7a9d6$exports = {
  "dismiss": `Lukk`
};
var $9d025808aeec81a7$exports = {};
$9d025808aeec81a7$exports = {
  "dismiss": `Negeren`
};
var $fce709921e2c0fa6$exports = {};
$fce709921e2c0fa6$exports = {
  "dismiss": `Zignoruj`
};
var $2599cf0c4ab37f59$exports = {};
$2599cf0c4ab37f59$exports = {
  "dismiss": `Descartar`
};
var $3c220ae7ef8a35fd$exports = {};
$3c220ae7ef8a35fd$exports = {
  "dismiss": `Dispensar`
};
var $93562b5094072f54$exports = {};
$93562b5094072f54$exports = {
  "dismiss": `Revocare`
};
var $cd9e2abd0d06c7b4$exports = {};
$cd9e2abd0d06c7b4$exports = {
  "dismiss": `Пропустить`
};
var $45375701f409adf1$exports = {};
$45375701f409adf1$exports = {
  "dismiss": `Zrušiť`
};
var $27fab53a576de9dd$exports = {};
$27fab53a576de9dd$exports = {
  "dismiss": `Opusti`
};
var $4438748d9952e7c7$exports = {};
$4438748d9952e7c7$exports = {
  "dismiss": `Odbaci`
};
var $0936d7347ef4da4c$exports = {};
$0936d7347ef4da4c$exports = {
  "dismiss": `Avvisa`
};
var $29700c92185d38f8$exports = {};
$29700c92185d38f8$exports = {
  "dismiss": `Kapat`
};
var $662ccaf2be4c25b3$exports = {};
$662ccaf2be4c25b3$exports = {
  "dismiss": `Скасувати`
};
var $d80a27deda7cdb3c$exports = {};
$d80a27deda7cdb3c$exports = {
  "dismiss": `取消`
};
var $2b2734393847c884$exports = {};
$2b2734393847c884$exports = {
  "dismiss": `關閉`
};
$61fe14465afefc5e$exports = {
  "ar-AE": $773d5888b972f1cf$exports,
  "bg-BG": $d11f19852b941573$exports,
  "cs-CZ": $b983974c2ee1efb3$exports,
  "da-DK": $5809cc9d4e92de73$exports,
  "de-DE": $c68c2e4fc74398d1$exports,
  "el-GR": $0898b4c153db2b77$exports,
  "en-US": $6d74810286a15183$exports,
  "es-ES": $309d73dc65f78055$exports,
  "et-EE": $44ad94f7205cf593$exports,
  "fi-FI": $7c28f5687f0779a9$exports,
  "fr-FR": $e6d75df4b68bd73a$exports,
  "he-IL": $87505c9dab186d0f$exports,
  "hr-HR": $553439c3ffb3e492$exports,
  "hu-HU": $74cf411061b983a2$exports,
  "it-IT": $e933f298574dc435$exports,
  "ja-JP": $ac91fc9fe02f71f6$exports,
  "ko-KR": $52b96f86422025af$exports,
  "lt-LT": $c0d724c3e51dafa6$exports,
  "lv-LV": $c92899672a3fe72e$exports,
  "nb-NO": $9f576b39d8e7a9d6$exports,
  "nl-NL": $9d025808aeec81a7$exports,
  "pl-PL": $fce709921e2c0fa6$exports,
  "pt-BR": $2599cf0c4ab37f59$exports,
  "pt-PT": $3c220ae7ef8a35fd$exports,
  "ro-RO": $93562b5094072f54$exports,
  "ru-RU": $cd9e2abd0d06c7b4$exports,
  "sk-SK": $45375701f409adf1$exports,
  "sl-SI": $27fab53a576de9dd$exports,
  "sr-SP": $4438748d9952e7c7$exports,
  "sv-SE": $0936d7347ef4da4c$exports,
  "tr-TR": $29700c92185d38f8$exports,
  "uk-UA": $662ccaf2be4c25b3$exports,
  "zh-CN": $d80a27deda7cdb3c$exports,
  "zh-TW": $2b2734393847c884$exports
};
function $86ea4cb521eb2e37$export$2317d149ed6f78c4(props) {
  let { onDismiss, ...otherProps } = props;
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1($parcel$interopDefault($61fe14465afefc5e$exports));
  let labels = $313b98861ee5dd6c$export$d6875122194c7b44(otherProps, stringFormatter.format("dismiss"));
  let onClick = () => {
    if (onDismiss)
      onDismiss();
  };
  return Cn.createElement($5c3e21d68f1c4674$export$439d29a4e110a164, null, Cn.createElement("button", {
    ...labels,
    tabIndex: -1,
    onClick
  }));
}
var $337b884510726a0d$var$OverlayContext = Cn.createContext(null);
function $337b884510726a0d$export$14c98a7594375490() {
  let setContain = q($337b884510726a0d$var$OverlayContext);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c(() => {
    setContain === null || setContain === void 0 ? void 0 : setContain(true);
  }, [
    setContain
  ]);
}

// node_modules/@nextui-org/react/esm/theme/utils.js
var getTokenValue = (e15, r14, n15 = 1) => {
  if ("undefined" == typeof document || !e15)
    return "";
  let s9 = getComputedStyle(document.documentElement);
  const c15 = `--${common_default.prefix}-${e15}-${r14}`, u9 = s9.getPropertyValue(c15);
  if (u9 && u9.includes("var") && getTokenValue(e15, u9), u9 && 1 !== n15) {
    if (u9.includes("rgb"))
      return rgbToRgba(u9, n15);
    if (u9.includes("#"))
      return hexToRGBA(u9, n15);
  }
  return u9;
};
var getDocumentCSSTokens = () => {
  const e15 = [...Object.keys(common_default.theme.colors), ...Object.keys(light_theme_default.colors)], t9 = Object.keys(light_theme_default.shadows);
  return { colors: e15.reduce((e16, t10) => {
    const l13 = getTokenValue("colors", t10);
    return l13 && (e16[t10] = { prefix: common_default.prefix, scale: "colors", token: t10, value: l13 }), e16;
  }, {}), shadows: t9.reduce((e16, t10) => {
    const l13 = getTokenValue("shadows", t10);
    return l13 && (e16[t10] = { prefix: common_default.prefix, scale: "shadows", token: t10, value: l13 }), e16;
  }, {}) };
};
var getDocumentTheme = (e15) => {
  var t9;
  const l13 = (null == e15 || null == (t9 = e15.getAttribute("style")) ? void 0 : t9.split(";").map((e16) => e16.trim()).filter((e16) => e16.includes("color-scheme"))) || [], o14 = l13.length > 0 ? l13[0].replace("color-scheme: ", "").replace(";", "") : "";
  return (null == e15 ? void 0 : e15.getAttribute("data-theme")) || o14;
};
var getThemeName = (e15) => "string" == typeof e15 && null != e15 && e15.includes("-theme") ? null == e15 ? void 0 : e15.replace("-theme", "") : e15;
var changeTheme = (t9) => {
  var l13, o14;
  if (!document)
    return;
  const r14 = document.documentElement, n15 = (null == r14 || null == (l13 = r14.getAttribute("class")) ? void 0 : l13.split(" ").filter((e15) => !e15.includes("theme") && !e15.includes("light") && !e15.includes("dark"))) || [], s9 = (null == r14 || null == (o14 = r14.getAttribute("style")) ? void 0 : o14.split(";").filter((e15) => !e15.includes("color-scheme") && e15.length).map((e15) => `${e15};`)) || [], c15 = getThemeName(t9);
  null == r14 || r14.setAttribute("class", clsx_default(n15, `${c15}-theme`)), null == r14 || r14.setAttribute("style", clsx_default(s9, `color-scheme: ${c15};`));
};

// node_modules/@nextui-org/react/esm/theme/theme-provider.js
var theme_provider_default = with_defaults_default(({ theme: e15, disableBaseline: l13, children: x8 }) => {
  const { isBrowser: j2 } = use_ssr_default2(), [B2, N5] = h(defaultContext.type), g4 = (e16) => {
    N5((t9) => t9 !== e16 ? e16 : t9);
  }, w3 = (e16) => {
    const t9 = getDocumentTheme(e16);
    t9 && g4(t9);
  }, E2 = F(() => {
    const e16 = j2 ? getDocumentCSSTokens() : {}, t9 = t2(copyObject(defaultContext.theme), e16), r14 = getThemeName(B2);
    return { theme: t9, type: r14, isDark: "dark" === r14 };
  }, [B2, j2]);
  return p(() => {
    var e16, t9, r14;
    w3(null == (e16 = document) ? void 0 : e16.documentElement);
    const o14 = new MutationObserver((e17) => {
      var t10;
      if (e17 && e17.length > 0 && "BODY" === (null == (t10 = e17[0]) ? void 0 : t10.target.nodeName)) {
        var r15, o15, m13;
        const e18 = null == (r15 = document) || null == (o15 = r15.body) || null == (m13 = o15.dataset) ? void 0 : m13.theme;
        e18 && g4(e18);
      } else {
        var s9;
        w3(null == (s9 = document) ? void 0 : s9.documentElement);
      }
    });
    return o14.observe(null == (t9 = document) ? void 0 : t9.documentElement, { attributes: true, attributeFilter: ["data-theme", "style"] }), o14.observe(null == (r14 = document) ? void 0 : r14.body, { attributes: true, attributeFilter: ["data-theme", "style"] }), () => o14.disconnect();
  }, []), p(() => {
    j2 && e15 && null != e15 && e15.className && (changeTheme(e15.className), g4(getThemeName(e15.className)));
  }, [j2, e15]), o($704cf1d3b684cc5c$export$9f8ac96af4b1b2ae, { children: o($f57aed4a881a3485$export$bf688221f59024e5, { children: o(theme_context_default.Provider, { value: E2, children: [!l13 && o(css_baseline_default, {}), x8] }) }) });
}, { disableBaseline: false });

// node_modules/@nextui-org/react/esm/theme/shared-css.js
var sharedFocus = css({ WebkitTapHighlightColor: "transparent", "&:focus:not(&:focus-visible)": { boxShadow: "none" }, "&:focus": { outline: "none", boxShadow: "0 0 0 2px $colors$background, 0 0 0 4px $colors$primary" }, "@safari": { WebkitTapHighlightColor: "transparent", outline: "none" } });
var cssFocusVisible = css({ outline: "none", variants: { isFocusVisible: { true: { boxShadow: "0 0 0 2px $colors$background, 0 0 0 4px $colors$primary" }, false: {} } } });
var cssNoBlurriness = css({ transform: "translateZ(0)", backfaceVisibility: "hidden" });
var sharedVisuallyHidden = css({ border: "0px", clip: "rect(0px, 0px, 0px, 0px)", height: "1px", width: "1px", margin: "-1px", padding: "0px", overflow: "hidden", whiteSpace: "nowrap", position: "absolute" });
var cssHideIn = css({ variants: { hideIn: { xs: { "@xsMax": { display: "none" } }, sm: { "@smMax": { display: "none" } }, md: { "@mdMax": { display: "none" } }, lg: { "@lgMax": { display: "none" } }, xl: { "@xlMax": { display: "none" } } } } });
var cssShowIn = css({ variants: { showIn: { xs: { "@xs": { display: "none" } }, sm: { "@sm": { display: "none" } }, md: { "@md": { display: "none" } }, lg: { "@lg": { display: "none" } }, xl: { "@xl": { display: "none" } } } } });
var cssHideShowIn = css(cssHideIn, cssShowIn);

// node_modules/@react-aria/focus/dist/module.js
init_compat_module();
function $6a99195332edec8b$export$80f3e147d781571c(element) {
  if ($507fabe10e71c6fb$export$630ff653c5ada6a9() === "virtual") {
    let lastFocusedElement = document.activeElement;
    $bbed8b41f857bcc0$export$24490316f764c4302(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        $7215afc6de606d6b$export$de79e2c695e052f32(element);
    });
  } else
    $7215afc6de606d6b$export$de79e2c695e052f32(element);
}
function $645f2e67b85a24c9$var$isStyleVisible(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible(element) && $645f2e67b85a24c9$var$isAttributeVisible(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a(element.parentElement, element));
}
var $9bf71ea28793e738$var$FocusContext2 = Cn.createContext(null);
var $9bf71ea28793e738$var$activeScope = null;
var $9bf71ea28793e738$var$scopes = /* @__PURE__ */ new Map();
function $9bf71ea28793e738$export$20e40289641fbbb62(props) {
  let { children, contain, restoreFocus, autoFocus } = props;
  let startRef = _();
  let endRef = _();
  let scopeRef = _([]);
  let ctx = q($9bf71ea28793e738$var$FocusContext2);
  let parentScope = ctx === null || ctx === void 0 ? void 0 : ctx.scopeRef;
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    let node = startRef.current.nextSibling;
    let nodes = [];
    while (node && node !== endRef.current) {
      nodes.push(node);
      node = node.nextSibling;
    }
    scopeRef.current = nodes;
  }, [
    children,
    parentScope
  ]);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    $9bf71ea28793e738$var$scopes.set(scopeRef, parentScope);
    return () => {
      if ((scopeRef === $9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope(scopeRef, $9bf71ea28793e738$var$activeScope)) && (!parentScope || $9bf71ea28793e738$var$scopes.has(parentScope)))
        $9bf71ea28793e738$var$activeScope = parentScope;
      $9bf71ea28793e738$var$scopes.delete(scopeRef);
    };
  }, [
    scopeRef,
    parentScope
  ]);
  $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain);
  $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain);
  $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus);
  let focusManager = $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef);
  return Cn.createElement($9bf71ea28793e738$var$FocusContext2.Provider, {
    value: {
      scopeRef,
      focusManager
    }
  }, Cn.createElement("span", {
    "data-focus-scope-start": true,
    hidden: true,
    ref: startRef
  }), children, Cn.createElement("span", {
    "data-focus-scope-end": true,
    hidden: true,
    ref: endRef
  }));
}
function $9bf71ea28793e738$var$createFocusManagerForScope(scopeRef) {
  return {
    focusNext(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap, accept } = opts;
      let node = from || document.activeElement;
      let sentinel = scope[0].previousElementSibling;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope2(node, scope) ? node : sentinel;
      let nextNode = walker.nextNode();
      if (!nextNode && wrap) {
        walker.currentNode = sentinel;
        nextNode = walker.nextNode();
      }
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusPrevious(opts = {}) {
      let scope = scopeRef.current;
      let { from, tabbable, wrap, accept } = opts;
      let node = from || document.activeElement;
      let sentinel = scope[scope.length - 1].nextElementSibling;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = $9bf71ea28793e738$var$isElementInScope2(node, scope) ? node : sentinel;
      let previousNode = walker.previousNode();
      if (!previousNode && wrap) {
        walker.currentNode = sentinel;
        previousNode = walker.previousNode();
      }
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    },
    focusFirst(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[0].previousElementSibling;
      let nextNode = walker.nextNode();
      if (nextNode)
        $9bf71ea28793e738$var$focusElement(nextNode, true);
      return nextNode;
    },
    focusLast(opts = {}) {
      let scope = scopeRef.current;
      let { tabbable, accept } = opts;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable,
        accept
      }, scope);
      walker.currentNode = scope[scope.length - 1].nextElementSibling;
      let previousNode = walker.previousNode();
      if (previousNode)
        $9bf71ea28793e738$var$focusElement(previousNode, true);
      return previousNode;
    }
  };
}
var $9bf71ea28793e738$var$focusableElements2 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR2 = $9bf71ea28793e738$var$focusableElements2.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements2.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR2 = $9bf71ea28793e738$var$focusableElements2.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$getScopeRoot(scope) {
  return scope[0].parentElement;
}
function $9bf71ea28793e738$var$useFocusContainment(scopeRef, contain) {
  let focusedNode = _();
  let raf = _(null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    let scope1 = scopeRef.current;
    if (!contain) {
      if (raf.current) {
        cancelAnimationFrame(raf.current);
        raf.current = null;
      }
      return;
    }
    let onKeyDown = (e15) => {
      if (e15.key !== "Tab" || e15.altKey || e15.ctrlKey || e15.metaKey || scopeRef !== $9bf71ea28793e738$var$activeScope)
        return;
      let focusedElement = document.activeElement;
      let scope = scopeRef.current;
      if (!$9bf71ea28793e738$var$isElementInScope2(focusedElement, scope))
        return;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
        tabbable: true
      }, scope);
      walker.currentNode = focusedElement;
      let nextElement = e15.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!nextElement) {
        walker.currentNode = e15.shiftKey ? scope[scope.length - 1].nextElementSibling : scope[0].previousElementSibling;
        nextElement = e15.shiftKey ? walker.previousNode() : walker.nextNode();
      }
      e15.preventDefault();
      if (nextElement)
        $9bf71ea28793e738$var$focusElement(nextElement, true);
    };
    let onFocus = (e15) => {
      if (!$9bf71ea28793e738$var$activeScope || $9bf71ea28793e738$var$isAncestorScope($9bf71ea28793e738$var$activeScope, scopeRef)) {
        $9bf71ea28793e738$var$activeScope = scopeRef;
        focusedNode.current = e15.target;
      } else if (scopeRef === $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isElementInChildScope(e15.target, scopeRef)) {
        if (focusedNode.current)
          focusedNode.current.focus();
        else if ($9bf71ea28793e738$var$activeScope)
          $9bf71ea28793e738$var$focusFirstInScope($9bf71ea28793e738$var$activeScope.current);
      } else if (scopeRef === $9bf71ea28793e738$var$activeScope)
        focusedNode.current = e15.target;
    };
    let onBlur = (e15) => {
      raf.current = requestAnimationFrame(() => {
        if (scopeRef === $9bf71ea28793e738$var$activeScope && !$9bf71ea28793e738$var$isElementInChildScope(document.activeElement, scopeRef)) {
          $9bf71ea28793e738$var$activeScope = scopeRef;
          focusedNode.current = e15.target;
          focusedNode.current.focus();
        }
      });
    };
    document.addEventListener("keydown", onKeyDown, false);
    document.addEventListener("focusin", onFocus, false);
    scope1.forEach(
      (element) => element.addEventListener("focusin", onFocus, false)
    );
    scope1.forEach(
      (element) => element.addEventListener("focusout", onBlur, false)
    );
    return () => {
      document.removeEventListener("keydown", onKeyDown, false);
      document.removeEventListener("focusin", onFocus, false);
      scope1.forEach(
        (element) => element.removeEventListener("focusin", onFocus, false)
      );
      scope1.forEach(
        (element) => element.removeEventListener("focusout", onBlur, false)
      );
    };
  }, [
    scopeRef,
    contain
  ]);
  p(() => {
    return () => {
      if (raf.current)
        cancelAnimationFrame(raf.current);
    };
  }, [
    raf
  ]);
}
function $9bf71ea28793e738$var$isElementInAnyScope(element) {
  for (let scope of $9bf71ea28793e738$var$scopes.keys()) {
    if ($9bf71ea28793e738$var$isElementInScope2(element, scope.current))
      return true;
  }
  return false;
}
function $9bf71ea28793e738$var$isElementInScope2(element, scope) {
  return scope.some(
    (node) => node.contains(element)
  );
}
function $9bf71ea28793e738$var$isElementInChildScope(element, scope) {
  for (let s9 of $9bf71ea28793e738$var$scopes.keys()) {
    if ((s9 === scope || $9bf71ea28793e738$var$isAncestorScope(scope, s9)) && $9bf71ea28793e738$var$isElementInScope2(element, s9.current))
      return true;
  }
  return false;
}
function $9bf71ea28793e738$var$isAncestorScope(ancestor, scope) {
  let parent = $9bf71ea28793e738$var$scopes.get(scope);
  if (!parent)
    return false;
  if (parent === ancestor)
    return true;
  return $9bf71ea28793e738$var$isAncestorScope(ancestor, parent);
}
function $9bf71ea28793e738$var$focusElement(element, scroll = false) {
  if (element != null && !scroll)
    try {
      $6a99195332edec8b$export$80f3e147d781571c(element);
    } catch (err) {
    }
  else if (element != null)
    try {
      element.focus();
    } catch (err1) {
    }
}
function $9bf71ea28793e738$var$focusFirstInScope(scope) {
  let sentinel = scope[0].previousElementSibling;
  let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa($9bf71ea28793e738$var$getScopeRoot(scope), {
    tabbable: true
  }, scope);
  walker.currentNode = sentinel;
  $9bf71ea28793e738$var$focusElement(walker.nextNode());
}
function $9bf71ea28793e738$var$useAutoFocus(scopeRef, autoFocus) {
  const autoFocusRef = Cn.useRef(autoFocus);
  p(() => {
    if (autoFocusRef.current) {
      $9bf71ea28793e738$var$activeScope = scopeRef;
      if (!$9bf71ea28793e738$var$isElementInScope2(document.activeElement, $9bf71ea28793e738$var$activeScope.current))
        $9bf71ea28793e738$var$focusFirstInScope(scopeRef.current);
    }
    autoFocusRef.current = false;
  }, []);
}
function $9bf71ea28793e738$var$useRestoreFocus(scopeRef, restoreFocus, contain) {
  const nodeToRestoreRef = _(typeof document !== "undefined" ? document.activeElement : null);
  $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c2(() => {
    let nodeToRestore = nodeToRestoreRef.current;
    if (!restoreFocus)
      return;
    let onKeyDown = (e15) => {
      if (e15.key !== "Tab" || e15.altKey || e15.ctrlKey || e15.metaKey)
        return;
      let focusedElement = document.activeElement;
      if (!$9bf71ea28793e738$var$isElementInScope2(focusedElement, scopeRef.current))
        return;
      let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa(document.body, {
        tabbable: true
      });
      walker.currentNode = focusedElement;
      let nextElement = e15.shiftKey ? walker.previousNode() : walker.nextNode();
      if (!document.body.contains(nodeToRestore) || nodeToRestore === document.body)
        nodeToRestore = null;
      if ((!nextElement || !$9bf71ea28793e738$var$isElementInScope2(nextElement, scopeRef.current)) && nodeToRestore) {
        walker.currentNode = nodeToRestore;
        do
          nextElement = e15.shiftKey ? walker.previousNode() : walker.nextNode();
        while ($9bf71ea28793e738$var$isElementInScope2(nextElement, scopeRef.current));
        e15.preventDefault();
        e15.stopPropagation();
        if (nextElement)
          $9bf71ea28793e738$var$focusElement(nextElement, true);
        else if (!$9bf71ea28793e738$var$isElementInAnyScope(nodeToRestore))
          focusedElement.blur();
        else
          $9bf71ea28793e738$var$focusElement(nodeToRestore, true);
      }
    };
    if (!contain)
      document.addEventListener("keydown", onKeyDown, true);
    return () => {
      if (!contain)
        document.removeEventListener("keydown", onKeyDown, true);
      if (restoreFocus && nodeToRestore && $9bf71ea28793e738$var$isElementInScope2(document.activeElement, scopeRef.current))
        requestAnimationFrame(() => {
          if (document.body.contains(nodeToRestore) && document.activeElement === document.body)
            $9bf71ea28793e738$var$focusElement(nodeToRestore);
        });
    };
  }, [
    scopeRef,
    restoreFocus,
    contain
  ]);
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR2 : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR2;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var ref;
      if (opts === null || opts === void 0 ? void 0 : (ref = opts.from) === null || ref === void 0 ? void 0 : ref.contains(node))
        return NodeFilter.FILTER_REJECT;
      if (node.matches(selector) && $645f2e67b85a24c9$export$e989c0fffaa6b27a(node) && (!scope || $9bf71ea28793e738$var$isElementInScope2(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
function $f7dceffc5ad7768b$export$4e328f61c538687f(props = {}) {
  let { autoFocus = false, isTextInput, within } = props;
  let state = _({
    isFocused: false,
    isFocusVisible: autoFocus || $507fabe10e71c6fb$export$b9b3dfddab17db27()
  });
  let [isFocused1, setFocused] = h(false);
  let [isFocusVisibleState, setFocusVisible] = h(
    () => state.current.isFocused && state.current.isFocusVisible
  );
  let updateState = T(
    () => setFocusVisible(state.current.isFocused && state.current.isFocusVisible),
    []
  );
  let onFocusChange = T((isFocused) => {
    state.current.isFocused = isFocused;
    setFocused(isFocused);
    updateState();
  }, [
    updateState
  ]);
  $507fabe10e71c6fb$export$ec71b4b83ac08ec3((isFocusVisible) => {
    state.current.isFocusVisible = isFocusVisible;
    updateState();
  }, [], {
    isTextInput
  });
  let { focusProps } = $a1ea59d68270f0dd$export$f8168d8dd8fd66e6({
    isDisabled: within,
    onFocusChange
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec2({
    isDisabled: !within,
    onFocusWithinChange: onFocusChange
  });
  return {
    isFocused: isFocused1,
    isFocusVisible: state.current.isFocused && isFocusVisibleState,
    focusProps: within ? focusWithinProps : focusProps
  };
}
var $e6afbd83fe6ebbd2$var$FocusableContext2 = Cn.createContext(null);
function $e6afbd83fe6ebbd2$var$FocusableProvider2(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return Cn.createElement($e6afbd83fe6ebbd2$var$FocusableContext2.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd52 = Cn.forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider2);

// node_modules/@nextui-org/react/esm/avatar/avatar.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/dom.js
init_compat_module();
function canUseDOM() {
  return !("undefined" == typeof window || !window.document || !window.document.createElement);
}
var isBrowser = canUseDOM();
function createDOMRef(e15) {
  return { UNSAFE_getDOMNode: () => e15.current };
}
function createFocusableRef(e15, t9 = e15) {
  return { ...createDOMRef(e15), focus() {
    t9.current && t9.current.focus();
  } };
}
function useDOMRef(t9) {
  const n15 = _(null);
  return A(t9, () => n15.current), n15;
}
function useFocusableRef(t9, n15) {
  const o14 = _(null);
  return A(t9, () => createFocusableRef(o14, n15)), o14;
}
function useSyncRef(e15, r14) {
  y(() => {
    if (e15 && e15.ref && r14 && r14.current)
      return e15.ref.current = r14.current, () => {
        var t9;
        null != (t9 = e15.ref) && t9.current && (e15.ref.current = null);
      };
  }, [e15, r14]);
}

// node_modules/@nextui-org/react/esm/avatar/avatar.styles.js
var StyledAvatar = styled("span", { dflex: "center", position: "relative", zIndex: "$1", boxSizing: "border-box", overflow: "hidden", verticalAlign: "top", cursor: "auto", transition: "transform 250ms ease 0ms, box-shadow 0.25s ease 0s", ".nextui-avatar-bg": { position: "absolute", top: 0, left: 0, right: 0, bottom: 0, zIndex: "$2", transition: "$avatar", size: "100%" }, ".nextui-avatar-img": { opacity: 0, zIndex: "$3", display: "flex", bg: "$background", transition: "transform 250ms ease 0ms, opacity 200ms ease-in 0ms", width: "100%", height: "100%", objectFit: "cover" }, '&[data-state="ready"] .nextui-avatar-img': { opacity: 1 }, ".nextui-avatar-icon": { display: "flex", position: "absolute", left: "50%", top: "50%", ta: "center", zIndex: "$2", transform: "translate(-50%, -50%)", whiteSpace: "nowrap", us: "none" }, ".nextui-avatar-text": { position: "absolute", zIndex: "$2", left: "50%", top: "50%", ta: "center", color: "$text", fontWeight: "$medium", transform: "translate(-50%, -50%) scale(0.65)", whiteSpace: "nowrap", us: "none" }, "@motion": { transition: "none", ".nextui-avatar-bg, .nextui-avatar-img": { transition: "none" } }, variants: { color: { default: { ".nextui-avatar-bg": { bg: "$accents2" } }, primary: { ".nextui-avatar-bg": { bg: "$primary" } }, secondary: { ".nextui-avatar-bg": { bg: "$secondary" } }, success: { ".nextui-avatar-bg": { bg: "$success" } }, warning: { ".nextui-avatar-bg": { bg: "$warning" } }, error: { ".nextui-avatar-bg": { bg: "$error" } }, gradient: { ".nextui-avatar-bg": { bg: "$gradient" } } }, textColor: { default: { ".nextui-avatar-text": { color: "$text" } }, white: { ".nextui-avatar-text": { color: "$white" } }, primary: { ".nextui-avatar-text": { color: "$primary" } }, secondary: { ".nextui-avatar-text": { color: "$secondary" } }, success: { ".nextui-avatar-text": { color: "$success" } }, warning: { ".nextui-avatar-text": { color: "$warning" } }, error: { ".nextui-avatar-text": { color: "$error" } } }, size: { xs: { $$avatarXs: "$space$9", sizeMin: "$$avatarXs", ".nextui-avatar-text": { fontSize: "$sm" } }, sm: { $$avatarSm: "$space$11", sizeMin: "$$avatarSm", ".nextui-avatar-text": { fontSize: "$md" } }, md: { $$avatarMd: "$space$14", sizeMin: "$$avatarMd", ".nextui-avatar-text": { fontSize: "$lg" } }, lg: { $$avatarLg: "$space$16", sizeMin: "$$avatarLg", ".nextui-avatar-text": { fontSize: "$xl" } }, xl: { $$avatarXl: "$space$18", sizeMin: "$$avatarXl", ".nextui-avatar-text": { fontSize: "$2xl" } } }, borderWeight: { light: { ".nextui-avatar-img": { borderWidth: "$light" } }, normal: { ".nextui-avatar-img": { borderWidth: "$normal" } }, bold: { ".nextui-avatar-img": { borderWidth: "$normal" } }, extrabold: { ".nextui-avatar-img": { borderWidth: "$normal" } }, black: { ".nextui-avatar-img": { borderWidth: "$normal" } } }, bordered: { true: { ".nextui-avatar-img": { borderStyle: "solid", borderColor: "$background" } } }, stacked: { true: { ml: "-$5" } }, pointer: { true: { cursor: "pointer", "&:hover .nextui-avatar-bg": { boxShadow: "inset 0 0 40px 0 rgb(0 0 0 / 14%)" } } }, rounded: { true: { borderRadius: "$rounded", ".nextui-avatar-img": { borderRadius: "$rounded" } } }, squared: { true: { borderRadius: "$squared", ".nextui-avatar-img": { borderRadius: "$squared" } } }, zoomed: { true: { "&:hover .nextui-avatar-img": { transform: "scale(1.125)" } } } }, compoundVariants: [{ bordered: true, borderWeight: "light", css: { padding: "calc($1/2)" } }, { bordered: true, borderWeight: "normal", css: { padding: "$1" } }, { bordered: true, borderWeight: "bold", css: { padding: "calc($2/1.5)" } }, { bordered: true, borderWeight: "extrabold", css: { padding: "$2" } }, { bordered: true, borderWeight: "black", css: { padding: "calc($3/1.5)" } }, { rounded: true, squared: true, css: { borderRadius: "$squared", ".nextui-avatar-img": { borderRadius: "$squared" } } }, { bordered: true, pointer: true, css: { "&:hover:not(.only-text-avatar) .nextui-avatar-bg": { opacity: "0.7" } } }], defaultVariants: { size: "md", rounded: true, color: "default", textColor: "default", borderWeight: "normal" } }, cssFocusVisible);
var avatar_styles_default = StyledAvatar;

// node_modules/@nextui-org/react/esm/avatar/avatar.js
var p3 = (a13) => (null == a13 ? void 0 : a13.length) <= 4 ? a13 : null == a13 ? void 0 : a13.slice(0, 3);
var Avatar = Cn.forwardRef((t9, n15) => {
  const { as: f5, src: v4, css: x8, text: d11, icon: N5, alt: g4, className: b6, imgRef: y3, ...A3 } = t9, h4 = useDOMRef(n15), j2 = !v4, [F3, R3] = h(false), V2 = useDOMRef(y3), { isFocusVisible: w3, focusProps: I2 } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  p(() => {
    var a13;
    (null == V2 || null == (a13 = V2.current) ? void 0 : a13.complete) && R3(true);
  }, []);
  const L2 = F(() => !F3 && v4 ? "loading" : "ready", [v4, F3]), P3 = F(() => {
    if ("button" === f5)
      return { appearance: "none", outline: "none", border: "none", cursor: "pointer" };
  }, [f5]);
  return o(avatar_styles_default, { ref: h4, as: f5, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(A3, I2), className: clsx_default({ "only-text-avatar": j2 }, b6), css: { ...P3, ...x8 }, "data-state": L2, isFocusVisible: w3, children: [o("span", { className: "nextui-avatar-bg" }), !j2 && o("img", { ref: V2, alt: g4, className: clsx_default("nextui-avatar-img", `nextui-avatar--${L2}`, { "nextui-avatar-ready": F3 }), "data-state": L2, src: v4, onLoad: () => R3(true) }), j2 && !N5 && d11 && o("span", { className: "nextui-avatar-text", children: p3(d11) }), N5 && o("span", { className: "nextui-avatar-icon", children: N5 })] });
});
__DEV__ && (Avatar.displayName = "NextUI.Avatar"), Avatar.toString = () => ".nextui-avatar";
var avatar_default = Avatar;

// node_modules/@nextui-org/react/esm/avatar/avatar-group.js
init_compat_module();

// node_modules/@nextui-org/react/esm/avatar/avatar-group.styles.js
var StyledAvatarGroupCount = styled("span", { fontSize: "$xs", display: "inline-flex", alignItems: "center", marginLeft: "$3", color: "$text" });
var StyledAvatarGroup = styled("div", { dflex: "center", height: "auto", width: "max-content", "@motion": { transition: "none" }, [`& ${avatar_styles_default}`]: { marginLeft: "-$space$5", transition: "$default", ".only-text-avatar": { boxShadow: "$xs" } }, ".only-text-avatar": { boxShadow: "$xs" }, variants: { animated: { true: { [`& ${avatar_styles_default}:hover`]: { transform: "translate(-$space$5)" } } } }, defaultVariants: { animated: true } });
var avatar_group_styles_default = StyledAvatarGroup;

// node_modules/@nextui-org/react/esm/avatar/avatar-group.js
var AvatarGroup = Cn.forwardRef((r14, a13) => {
  const { count: i13, children: p7, ...s9 } = r14, m13 = useDOMRef(a13);
  return o(avatar_group_styles_default, { ref: m13, ...s9, children: [p7, i13 && o(StyledAvatarGroupCount, { className: "nextui-avatar-group-count", children: ["+", i13] })] });
});
__DEV__ && (AvatarGroup.displayName = "NextUI.AvatarGroup"), AvatarGroup.toString = () => ".nextui-avatar-group";
var avatar_group_default = AvatarGroup;

// node_modules/@nextui-org/react/esm/avatar/index.js
avatar_default.Group = avatar_group_default;
var avatar_default2 = avatar_default;

// node_modules/@nextui-org/react/esm/button/button.js
init_compat_module();

// node_modules/@react-aria/button/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/button/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext3 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext3 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext3);
var $704cf1d3b684cc5c$var$canUseDOM3 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/@react-aria/button/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c3 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap3 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$cd8c9cb68f8426293(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap3.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap3.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e3(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe9283(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e3)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f8426293)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
var $65484d02dcb7eb3e$var$DOMPropNames2 = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames2 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe2 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f2(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames2.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames2.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe2.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f33(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll3())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements3(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition3(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached3 = null;
function $7215afc6de606d6b$var$supportsPreventScroll3() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached3 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached3 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached3 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached3;
}
function $7215afc6de606d6b$var$getScrollableElements3(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition3(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement3 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks3 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents3() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement3.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement3.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement3.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement3.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement3.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks3)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks3.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents3();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents3);
}
function $bbed8b41f857bcc0$export$24490316f764c4303(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement3.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks3.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed63() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e3(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c3)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
var $5df64b3807dc15ee$var$visualViewport3 = typeof window !== "undefined" && window.visualViewport;
function $c87311424ea30a05$var$testUserAgent3(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform3(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea103() {
  return $c87311424ea30a05$var$testPlatform3(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d993() {
  return $c87311424ea30a05$var$testPlatform3(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e42243() {
  return $c87311424ea30a05$var$testPlatform3(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea103() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f13() {
  return $c87311424ea30a05$export$186c6964ca17d993() || $c87311424ea30a05$export$7bef049ce92e42243();
}
function $c87311424ea30a05$export$a11b0059900ceec83() {
  return $c87311424ea30a05$var$testUserAgent3(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de3(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec83)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf633(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/button/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/button/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state3 = "default";
var $14c0b72509d70225$var$savedUserSelect3 = "";
var $14c0b72509d70225$var$modifiedElementMap3 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754873(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f13)()) {
    if ($14c0b72509d70225$var$state3 === "default") {
      $14c0b72509d70225$var$savedUserSelect3 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state3 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap3.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32953(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f13)()) {
    if ($14c0b72509d70225$var$state3 !== "disabled")
      return;
    $14c0b72509d70225$var$state3 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c4303)(() => {
        if ($14c0b72509d70225$var$state3 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect3 || "";
          $14c0b72509d70225$var$savedUserSelect3 = "";
          $14c0b72509d70225$var$state3 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap3.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap3.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap3.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb53 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb53.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext3(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb53));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe9283)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e3)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad213(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext3(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed63)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32953)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent3(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard3(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink3(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent3(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent3(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de3)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f33)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent3(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard3(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink3(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf633)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault3(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f33)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a46974671754873)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault3(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget3(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget3(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent3(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget3(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e32953)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault3(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de3)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f33)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget3(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent3(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent3(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f33)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a46974671754873)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById3(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget3(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById3(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget3(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32953)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e32953)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9283)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink3(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent3(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey3(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink3(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent3(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById3(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent3(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect3(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping3(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget3(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect3(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping3(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault3(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard3(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey3(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes3 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey3(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes3.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e993 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad213)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe9283)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b83 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb53));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe9283)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e3)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb53).Provider, {
    value: context
  }, children);
});
var $8a9cb279dc87e130$export$905e7fc544a71f363 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc3(onBlur) {
  let stateRef = (0, _)({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c3)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return (0, T)((e15) => {
    if (e15.target instanceof HTMLButtonElement || e15.target instanceof HTMLInputElement || e15.target instanceof HTMLTextAreaElement || e15.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e15.target;
      let onBlurHandler = (e16) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f363("blur", e16));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e63(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, T)((e15) => {
    if (e15.target === e15.currentTarget) {
      if (onBlurProp)
        onBlurProp(e15);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc3)(onBlur);
  const onFocus = (0, T)((e15) => {
    if (e15.target === e15.currentTarget && document.activeElement === e15.target) {
      if (onFocusProp)
        onFocusProp(e15);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e15);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
var $507fabe10e71c6fb$var$currentModality3 = null;
var $507fabe10e71c6fb$var$changeHandlers3 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners3 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus3 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently3 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers3(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers3)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey3(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea103)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent3(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus3 = true;
  if ($507fabe10e71c6fb$var$isValidKey3(e15)) {
    $507fabe10e71c6fb$var$currentModality3 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers3("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent3(e15) {
  $507fabe10e71c6fb$var$currentModality3 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus3 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers3("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent3(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de3)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus3 = true;
    $507fabe10e71c6fb$var$currentModality3 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent3(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus3 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently3) {
    $507fabe10e71c6fb$var$currentModality3 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers3("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus3 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently3 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur3() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus3 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently3 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents3() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners3)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus3 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent3, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent3, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent3, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent3, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur3, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent3, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent3, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent3, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners3 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents3();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents3);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a93() {
  return $507fabe10e71c6fb$var$currentModality3;
}
function $93925083ecbb358c$export$48d1ea6320830260(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e15) => {
    let event = {
      ...e15,
      preventDefault() {
        e15.preventDefault();
      },
      isDefaultPrevented() {
        return e15.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e15.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd3(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea6320830260)(props.onKeyUp)
    }
  };
}

// node_modules/@react-aria/button/node_modules/@react-aria/focus/dist/import.mjs
function $6a99195332edec8b$export$80f3e147d781571c2(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a93)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c4303)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f33)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f33)(element);
}
var $9bf71ea28793e738$var$FocusContext3 = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements3 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR3 = $9bf71ea28793e738$var$focusableElements3.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements3.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR3 = $9bf71ea28793e738$var$focusableElements3.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope3(element, scope) {
  return scope.some((node) => node.contains(element));
}
var $9bf71ea28793e738$var$Tree2 = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode2({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope3(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree2();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode2({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode2 = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e2 = new $9bf71ea28793e738$var$Tree2();
var $e6afbd83fe6ebbd2$var$FocusableContext3 = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext(ref) {
  let context = (0, q)($e6afbd83fe6ebbd2$var$FocusableContext3) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e3)(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$var$FocusableProvider3(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext3.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd53 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider3);
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e63)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd3)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe9283)(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, _)(props.autoFocus);
  (0, p)(() => {
    if (autoFocusRef.current && domRef.current)
      (0, $6a99195332edec8b$export$80f3e147d781571c2)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9283)({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}

// node_modules/@react-aria/button/dist/module.js
function $701a24aa0da5b062$export$ea18c227d4417cc3(props, ref) {
  let {
    elementType = "button",
    isDisabled,
    onPress,
    onPressStart,
    onPressEnd,
    onPressChange,
    preventFocusOnPress,
    allowFocusWhenDisabled,
    // @ts-ignore
    onClick: deprecatedOnClick,
    href,
    target,
    rel,
    type = "button"
  } = props;
  let additionalProps;
  if (elementType === "button")
    additionalProps = {
      type,
      disabled: isDisabled
    };
  else
    additionalProps = {
      role: "button",
      tabIndex: isDisabled ? void 0 : 0,
      href: elementType === "a" && isDisabled ? void 0 : href,
      target: elementType === "a" ? target : void 0,
      type: elementType === "input" ? type : void 0,
      disabled: elementType === "input" ? isDisabled : void 0,
      "aria-disabled": !isDisabled || elementType === "input" ? void 0 : isDisabled,
      rel: elementType === "a" ? rel : void 0
    };
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad213({
    onPressStart,
    onPressEnd,
    onPressChange,
    onPress,
    isDisabled,
    preventFocusOnPress,
    ref
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c(props, ref);
  if (allowFocusWhenDisabled)
    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;
  let buttonProps = $3ef42575df84b30b$export$9d1611c77c2fe9283(focusableProps, pressProps, $65484d02dcb7eb3e$export$457c3d6518dd4c6f2(props, {
    labelable: true
  }));
  return {
    isPressed,
    buttonProps: $3ef42575df84b30b$export$9d1611c77c2fe9283(additionalProps, buttonProps, {
      "aria-haspopup": props["aria-haspopup"],
      "aria-expanded": props["aria-expanded"],
      "aria-controls": props["aria-controls"],
      "aria-pressed": props["aria-pressed"],
      onClick: (e15) => {
        if (deprecatedOnClick) {
          deprecatedOnClick(e15);
          console.warn("onClick is deprecated, please use onPress");
        }
      }
    })
  };
}
function $55f54f7887471b58$export$51e84d46ca0bc451(props, state, ref) {
  const { isSelected } = state;
  const { isPressed, buttonProps } = $701a24aa0da5b062$export$ea18c227d4417cc3({
    ...props,
    onPress: $ff5963eb1fccf552$export$e08e3b67e392101e3(state.toggle, props.onPress)
  }, ref);
  return {
    isPressed,
    buttonProps: $3ef42575df84b30b$export$9d1611c77c2fe9283(buttonProps, {
      "aria-pressed": isSelected
    })
  };
}

// node_modules/@nextui-org/react/esm/utils/system.js
init_compat_module();
function forwardRef(f5) {
  return k2(f5);
}

// node_modules/@nextui-org/react/esm/button/utils.js
var filterPropsWithGroup = (e15, o14) => {
  var r14, t9, n15, l13, d11, a13, i13, s9, g4, u9, b6;
  return o14.isButtonGroup ? { ...e15, auto: true, shadow: false, bordered: null != (r14 = o14.bordered) ? r14 : e15.bordered, borderWeight: null != (t9 = o14.borderWeight) ? t9 : e15.borderWeight, ghost: null != (n15 = o14.ghost) ? n15 : e15.ghost, ripple: null != (l13 = o14.ripple) ? l13 : e15.ripple, flat: null != (d11 = o14.flat) ? d11 : e15.flat, animated: null != (a13 = o14.animated) ? a13 : e15.animated, rounded: null != (i13 = o14.rounded) ? i13 : e15.rounded, light: null != (s9 = o14.light) ? s9 : e15.light, size: null != (g4 = o14.size) ? g4 : e15.size, color: null != (u9 = o14.color) ? u9 : e15.color, disabled: null != (b6 = o14.disabled) ? b6 : e15.disabled } : e15;
};
var getCssColors = (e15) => {
  if (!e15.disabled)
    return e15.auto && "gradient" === e15.color && (e15.bordered || e15.ghost) ? { px: "$$buttonBorderWeight", py: "$$buttonBorderWeight" } : {};
  const o14 = { bg: "$accents1", color: "$accents7", transform: "none", boxShadow: "none", pe: "none" };
  return e15.bordered || e15.flat || e15.ghost || e15.light ? "gradient" === e15.color && (e15.bordered || e15.ghost) ? { color: "$accents4", backgroundImage: "linear-gradient($background, $background), linear-gradient($accents2, $accents2)", transform: "none", boxShadow: "none", pe: "none", pl: "$$buttonBorderWeight", pr: "$$buttonBorderWeight" } : e15.bordered || e15.ghost || e15.light ? { ...o14, bg: "transparent", borderColor: "$accents4" } : e15.flat ? { ...o14, bg: "$accents1" } : void 0 : o14;
};

// node_modules/@nextui-org/react/esm/button/button-group-context.js
init_compat_module();
var o6 = { isButtonGroup: false, disabled: false };
var ButtonGroupContext = Cn.createContext(o6);
var useButtonGroupContext = () => Cn.useContext(ButtonGroupContext);

// node_modules/@nextui-org/react/esm/button/button-icon.js
init_compat_module();
var StyledButtonIcon = styled("span", { dflex: "center", position: "absolute", left: "$$buttonPadding", right: "auto", top: "50%", transform: "translateY(-50%)", color: "inherit", zIndex: "$1", "& svg": { background: "transparent" }, variants: { isAuto: { true: { position: "relative", transform: "none", top: "0%" } }, isRight: { true: { right: "$$buttonPadding", left: "auto" } }, isSingle: { true: { position: "static", transform: "none" } }, isGradientButtonBorder: { true: {} } }, compoundVariants: [{ isAuto: true, isRight: true, isSingle: false, css: { order: 2, ml: "calc($$buttonPadding / 2)", right: "0%", left: "0%" } }, { isAuto: true, isRight: false, isSingle: false, css: { order: 0, mr: "calc($$buttonPadding / 2)", right: "0%", left: "0%" } }, { isSingle: true, isRight: false, css: { ml: 0 } }, { isSingle: true, isRight: true, css: { mr: 0 } }, { isSingle: true, isRight: false, isGradientButtonBorder: true, css: { mr: "calc($$buttonPadding / 2)" } }] });
var e3 = ({ children: t9, className: i13, css: n15, ...e15 }) => o(StyledButtonIcon, { className: clsx_default("nextui-button-icon", { "nextui-button-icon-right": e15.isRight, "nextui-button-icon-single": e15.isSingle }, i13), css: n15, ...e15, children: t9 });
e3.toString = () => ".nextui-button-icon";
var r6 = Cn.memo(e3);
var button_icon_default = with_defaults_default(r6, { className: "" });

// node_modules/@nextui-org/react/esm/button/button.styles.js
var StyledButton = styled("button", { $$buttonBorderRadius: "$radii$md", $$buttonPressedScale: 0.97, dflex: "center", appearance: "none", boxSizing: "border-box", fontWeight: "$medium", us: "none", lineHeight: "$sm", ta: "center", whiteSpace: "nowrap", transition: "$button", position: "relative", overflow: "hidden", border: "none", cursor: "pointer", pe: "auto", p: 0, br: "$$buttonBorderRadius", "@motion": { transition: "none" }, ".nextui-button-text": { dflex: "center", zIndex: "$2", "p, pre, div": { margin: 0 } }, [`& ${StyledDrip}`]: { zIndex: "$1", ".nextui-drip-filler": { opacity: 0.25, fill: "$accents2" } }, variants: { bordered: { true: { bg: "transparent", borderStyle: "solid", color: "$text" } }, ghost: { true: {} }, color: { default: { bg: "$primary", color: "$primarySolidContrast" }, primary: { bg: "$primary", color: "$primarySolidContrast" }, secondary: { bg: "$secondary", color: "$secondarySolidContrast" }, success: { bg: "$success", color: "$successSolidContrast" }, warning: { bg: "$warning", color: "$warningSolidContrast" }, error: { bg: "$error", color: "$errorSolidContrast" }, gradient: { bg: "$gradient", color: "$primarySolidContrast" } }, size: { xs: { $$buttonPadding: "$space$3", $$buttonBorderRadius: "$radii$xs", $$buttonHeight: "$space$10", px: "$3", height: "$$buttonHeight", lh: "$space$10", width: "auto", minWidth: "$20", fontSize: "$xs" }, sm: { $$buttonPadding: "$space$5", $$buttonBorderRadius: "$radii$sm", $$buttonHeight: "$space$12", px: "$5", height: "$$buttonHeight", lh: "$space$14", width: "auto", minWidth: "$36", fontSize: "$sm" }, md: { $$buttonPadding: "$space$7", $$buttonBorderRadius: "$radii$md", $$buttonHeight: "$space$14", px: "$7", height: "$$buttonHeight", lh: "$space$14", width: "auto", minWidth: "$48", fontSize: "$sm" }, lg: { $$buttonPadding: "$space$9", $$buttonBorderRadius: "$radii$base", $$buttonHeight: "$space$16", px: "$9", height: "$$buttonHeight", lh: "$space$15", width: "auto", minWidth: "$60", fontSize: "$md" }, xl: { $$buttonPadding: "$space$10", $$buttonBorderRadius: "$radii$xl", $$buttonHeight: "$space$18", px: "$10", height: "$$buttonHeight", lh: "$space$17", width: "auto", minWidth: "$72", fontSize: "$lg" } }, borderWeight: { light: { bw: "$light", $$buttonBorderWeight: "$borderWeights$light" }, normal: { bw: "$normal", $$buttonBorderWeight: "$borderWeights$normal" }, bold: { bw: "$bold", $$buttonBorderWeight: "$borderWeights$bold" }, extrabold: { bw: "$extrabold", $$buttonBorderWeight: "$borderWeights$extrabold" }, black: { bw: "$black", $$buttonBorderWeight: "$borderWeights$black" } }, flat: { true: { color: "$text" } }, light: { true: { bg: "transparent", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$accents2" } } } }, shadow: { true: { bs: "$sm" } }, animated: { false: { transition: "none" } }, auto: { true: { width: "auto", minWidth: "min-content" } }, rounded: { true: { $$buttonBorderRadius: "$radii$pill" } }, isPressed: { true: {} }, isHovered: { true: {} }, isChildLess: { true: { p: 0, width: "$$buttonHeight", height: "$$buttonHeight" } }, isFocusVisible: { true: {}, false: {} } }, compoundVariants: [{ isPressed: true, animated: true, css: { transform: "scale($$buttonPressedScale)" } }, { auto: true, isChildLess: false, size: "xs", css: { px: "$5", minWidth: "min-content" } }, { auto: true, isChildLess: false, size: "sm", css: { px: "$8", minWidth: "min-content" } }, { auto: true, isChildLess: false, size: "md", css: { px: "$9", minWidth: "min-content" } }, { auto: true, isChildLess: false, size: "lg", css: { px: "$10", minWidth: "min-content" } }, { auto: true, isChildLess: false, size: "xl", css: { px: "$11", minWidth: "min-content" } }, { shadow: true, isFocusVisible: false, color: "default", css: { normalShadow: "$primaryShadow" } }, { shadow: true, isFocusVisible: false, color: "primary", css: { normalShadow: "$primaryShadow" } }, { shadow: true, isFocusVisible: false, color: "secondary", css: { normalShadow: "$secondaryShadow" } }, { shadow: true, isFocusVisible: false, color: "warning", css: { normalShadow: "$warningShadow" } }, { shadow: true, isFocusVisible: false, color: "success", css: { normalShadow: "$successShadow" } }, { shadow: true, isFocusVisible: false, color: "error", css: { normalShadow: "$errorShadow" } }, { shadow: true, isFocusVisible: false, color: "gradient", css: { normalShadow: "$primaryShadow" } }, { light: true, color: "default", css: { bg: "transparent", color: "$text", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$primaryLightActive" } } } }, { light: true, color: "primary", css: { bg: "transparent", color: "$primary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$primaryLightActive" } } } }, { light: true, color: "secondary", css: { bg: "transparent", color: "$secondary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$secondaryLightActive" } } } }, { light: true, color: "warning", css: { bg: "transparent", color: "$warning", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$warningLightActive" } } } }, { light: true, color: "success", css: { bg: "transparent", color: "$success", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$successLightActive" } } } }, { light: true, color: "error", css: { bg: "transparent", color: "$error", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.8, fill: "$errorLightActive" } } } }, { bordered: true, color: "default", css: { bg: "transparent", borderColor: "$primary", color: "$primary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$primary" } } } }, { bordered: true, color: "primary", css: { bg: "transparent", borderColor: "$primary", color: "$primary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$primary" } } } }, { bordered: true, color: "secondary", css: { bg: "transparent", borderColor: "$secondary", color: "$secondary", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$secondary" } } } }, { bordered: true, color: "success", css: { bg: "transparent", borderColor: "$success", color: "$success", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$success" } } } }, { bordered: true, color: "warning", css: { bg: "transparent", borderColor: "$warning", color: "$warning", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$warning" } } } }, { bordered: true, color: "error", css: { bg: "transparent", borderColor: "$error", color: "$error", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$error" } } } }, { bordered: true, color: "gradient", css: { bg: "transparent", color: "$text", padding: "$$buttonBorderWeight", bgClip: "content-box, border-box", borderColor: "$primary", backgroundImage: "linear-gradient($background, $background), $gradient", border: "none", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { fill: "$secondary" } } } }, { ghost: true, isHovered: true, color: "default", css: { bg: "$primary", color: "$primarySolidContrast" } }, { ghost: true, isHovered: true, color: "primary", css: { bg: "$primary", color: "$primarySolidContrast" } }, { ghost: true, isHovered: true, color: "secondary", css: { bg: "$secondary", color: "$secondarySolidContrast" } }, { ghost: true, isHovered: true, color: "success", css: { bg: "$success", color: "$successSolidContrast" } }, { ghost: true, isHovered: true, color: "warning", css: { bg: "$warning", color: "$warningSolidContrast" } }, { ghost: true, isHovered: true, color: "error", css: { bg: "$error", color: "$errorSolidContrast" } }, { ghost: true, color: "gradient", isHovered: true, css: { bg: "$gradient", color: "$white" } }, { flat: true, color: "default", css: { bg: "$primaryLight", color: "$primaryLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$primary" } } } }, { flat: true, color: "primary", css: { bg: "$primaryLight", color: "$primaryLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$primary" } } } }, { flat: true, color: "secondary", css: { bg: "$secondaryLight", color: "$secondaryLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$secondary" } } } }, { flat: true, color: "success", css: { bg: "$successLight", color: "$successLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$success" } } } }, { flat: true, color: "warning", css: { bg: "$warningLight", color: "$warningLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$warning" } } } }, { flat: true, color: "error", css: { bg: "$errorLight", color: "$errorLightContrast", [`& ${StyledDrip}`]: { ".nextui-drip-filler": { opacity: 0.4, fill: "$error" } } } }, { flat: true, isHovered: true, color: "default", css: { bg: "$primaryLightHover" } }, { flat: true, isHovered: true, color: "primary", css: { bg: "$primaryLightHover" } }, { flat: true, isHovered: true, color: "secondary", css: { bg: "$secondaryLightHover" } }, { flat: true, isHovered: true, color: "success", css: { bg: "$successLightHover" } }, { flat: true, isHovered: true, color: "warning", css: { bg: "$warningLightHover" } }, { flat: true, isHovered: true, color: "error", css: { bg: "$errorLightHover" } }, { flat: true, isPressed: true, color: "default", css: { bg: "$primaryLightActive" } }, { flat: true, isPressed: true, color: "primary", css: { bg: "$primaryLightActive" } }, { flat: true, isPressed: true, color: "secondary", css: { bg: "$secondaryLightActive" } }, { flat: true, isPressed: true, color: "success", css: { bg: "$successLightActive" } }, { flat: true, isPressed: true, color: "warning", css: { bg: "$warningLightActive" } }, { flat: true, isPressed: true, color: "error", css: { bg: "$errorLightActive" } }, { auto: true, color: "gradient", bordered: true, css: { ".nextui-button-text": { px: "$$buttonPadding" }, ".nextui-button-icon": { ml: "$$buttonPadding" }, ".nextui-button-icon-right": { mr: "$$buttonPadding" }, ".nextui-button-text-left": { pl: 0 }, ".nextui-button-text-right": { pr: 0 } } }, { rounded: true, size: "xs", css: { br: "$pill" } }, { rounded: true, size: "sm", css: { br: "$pill" } }, { rounded: true, size: "md", css: { br: "$pill" } }, { rounded: true, size: "lg", css: { br: "$pill" } }, { rounded: true, size: "xl", css: { br: "$pill" } }], defaultVariants: { color: "default", borderWeight: "normal", animated: true, size: "md" } }, cssFocusVisible);
var button_styles_default = StyledButton;

// node_modules/@nextui-org/react/esm/button/button.js
var C2 = forwardRef((d11, p7) => {
  const { as: C4, css: v4, iconLeftCss: N5, iconRightCss: F3, onClick: B2, onPress: j2, onPressStart: S2, onPressEnd: k6, onPressChange: R3, onPressUp: U2, ...T3 } = d11, A3 = useButtonGroupContext(), D3 = filterPropsWithGroup(T3, A3), E2 = getCssColors(D3), { flat: G3, children: H2, disabled: L2, animated: V2, light: W2, ripple: I2, bordered: $2, auto: q3, borderWeight: z3, icon: J2, iconRight: K, ghost: M2, autoFocus: O3, className: Q, ...X } = D3, Y2 = (t9) => {
    V2 && I2 && Z.current && nt(t9);
  }, Z = useDOMRef(p7), { buttonProps: _2, isPressed: tt } = $701a24aa0da5b062$export$ea18c227d4417cc3({ ...T3, isDisabled: L2, elementType: C4, onPress: (t9) => {
    "keyboard" === t9.pointerType || "virtual" === t9.pointerType ? Y2(t9) : "undefined" != typeof window && window.event && Y2(window.event), B2 && (B2(t9), console.warn("onClick is deprecated, please use onPress")), null == j2 || j2(t9);
  }, onPressStart: S2, onPressEnd: k6, onPressChange: R3, onPressUp: U2 }, Z), { hoverProps: et, isHovered: ot } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: L2 }), { isFocused: rt, isFocusVisible: st, focusProps: it } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: O3 }), { onClick: nt, ...at } = use_drip_default2(false, Z);
  __DEV__ && "gradient" === D3.color && (G3 || W2) && warn("Using the gradient color on flat and light buttons will have no effect.");
  const lt = J2 || K, ut = 0 === Cn.Children.count(H2), dt = Boolean(K), ct = F(() => tt ? "pressed" : ot ? "hovered" : L2 ? "disabled" : "ready", [L2, ot, tt]), mt = F(() => dt ? F3 : N5, [dt, F3, N5]);
  return o(button_styles_default, { ref: Z, animated: V2, as: C4, auto: q3, borderWeight: z3, bordered: $2 || M2, className: clsx_default("nextui-button", `nextui-button--${ct}`, Q), css: { ...v4, ...E2 }, "data-state": ct, flat: G3, ghost: M2, isChildLess: ut, isFocusVisible: st && !L2, isHovered: ot || M2 && rt, isPressed: tt, light: W2, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(_2, it, et, X), children: [0 === Cn.Children.count(H2) ? o(button_icon_default, { isSingle: true, css: mt, isAuto: q3, isGradientButtonBorder: "gradient" === d11.color && ($2 || M2), isRight: dt, children: lt }) : lt ? o(k, { children: [o(button_icon_default, { css: mt, isAuto: q3, isGradientButtonBorder: "gradient" === d11.color && ($2 || M2), isRight: dt, isSingle: false, children: lt }), o("div", { className: clsx_default("nextui-button-text", { "nextui-button-text-right": dt, "nextui-button-text-left": !dt }), children: H2 })] }) : o("span", { className: "nextui-button-text", children: H2 }), o(drip_default, { className: "nextui-button-drip", color: "white", ...at })] });
});
__DEV__ && (C2.displayName = "NextUI.Button"), C2.toString = () => ".nextui-button";
var button_default = with_defaults_default(C2, { ghost: false, bordered: false, ripple: true, animated: true, disabled: false, autoFocus: false, auto: false, className: "", type: "button" });

// node_modules/@nextui-org/react/esm/button/button-group.js
init_compat_module();

// node_modules/@nextui-org/react/esm/button/button-group.styles.js
var StyledButtonGroup = styled("div", { display: "inline-flex", margin: "$3", backgroundColor: "transparent", height: "min-content", [`& ${button_styles_default}`]: { ".nextui-button-text": { top: 0 } }, variants: { vertical: { true: { fd: "column", [`& ${button_styles_default}`]: { "&:not(:first-child)": { btlr: 0, btrr: 0 }, "&:not(:last-child)": { bblr: 0, bbrr: 0 } } }, false: { fd: "row", [`& ${button_styles_default}`]: { "&:not(:first-child)": { btlr: 0, bblr: 0 }, "&:not(:last-child)": { btrr: 0, bbrr: 0 } } } }, size: { xs: { br: "$xs" }, sm: { br: "$sm" }, md: { br: "$md" }, lg: { br: "$base" }, xl: { br: "$xl" } }, rounded: { true: { br: "$pill" } }, bordered: { true: { bg: "transparent" } }, gradient: { true: { pl: 0 } } }, defaultVariants: { vertical: false }, compoundVariants: [{ bordered: true, vertical: true, css: { [`& ${button_styles_default}`]: { "&:not(:last-child)": { borderBottom: "none", paddingBottom: "0" } } } }, { bordered: true, vertical: false, css: { [`& ${button_styles_default}`]: { "&:not(:first-child)": { borderLeft: "none" } } } }, { bordered: true, vertical: false, gradient: true, css: { [`& ${button_styles_default}`]: { "&:not(:last-child)&:not(:first-child)": { pl: 0 }, "&:last-child": { pl: 0 } } } }] });
var button_group_styles_default = StyledButtonGroup;

// node_modules/@nextui-org/react/esm/button/button-group.js
var a3 = (o14) => {
  const { disabled: t9, size: a13, color: l13, bordered: n15, ghost: s9, light: u9, flat: m13, shadow: p7, auto: c15, animated: g4, rounded: h4, ripple: b6, borderWeight: f5, children: x8, ...z3 } = o14, w3 = F(() => ({ disabled: t9, size: a13, color: l13, bordered: n15, light: u9, ghost: s9, flat: m13, shadow: p7, auto: c15, borderWeight: f5, animated: g4, rounded: h4, ripple: b6, isButtonGroup: true }), [t9, g4, a13, b6, l13, n15, u9, s9, m13, f5]);
  return o(ButtonGroupContext.Provider, { value: w3, children: o(button_group_styles_default, { bordered: n15 || s9, gradient: "gradient" === o14.color, size: a13, ...z3, children: x8 }) });
};
a3.toString = () => ".nextui-button-group";
var l3 = Cn.memo(a3);
var button_group_default = with_defaults_default(l3, { borderWeight: "normal", size: "md", color: "default" });

// node_modules/@nextui-org/react/esm/button/index.js
button_default.Group = button_group_default;
var button_default2 = button_default;

// node_modules/@nextui-org/react/esm/image/image.js
init_compat_module();

// node_modules/@nextui-org/react/esm/image/image.styles.js
var i3 = keyframes({ "0%": { backgroundPosition: "200% 0" }, to: { backgroundPosition: "-200% 0" } });
var StyledImageContainer = styled("div", { opacity: 0, margin: "0 auto", position: "relative", overflow: "hidden", maxWidth: "100%", transition: "transform 250ms ease 0ms, opacity 200ms ease-in 0ms", "@motion": { transition: "none" }, variants: { ready: { true: { opacity: 1 }, false: { opacity: 0 } } } });
var StyledImage = styled("img", { size: "100%", display: "block" });
var StyledImageSkeleton = styled("div", { position: "absolute", top: 0, left: 0, right: 0, bottom: 0, size: "100%", borderRadius: "inherit", backgroundImage: "linear-gradient(270deg, $colors$accents1, $colors$accents2, $colors$accents2, $colors$accents1)", backgroundSize: "400% 100%", animation: `${i3} 5s ease-in-out infinite`, transition: "opacity 300ms ease-out" });

// node_modules/@nextui-org/react/esm/image/image.skeleton.js
init_compat_module();
var a4 = Cn.memo(({ opacity: t9, css: e15, className: m13, ...a13 }) => o(StyledImageSkeleton, { className: clsx_default("nextui-image-skeleton", m13), css: { opacity: t9, ...e15 }, ...a13 }));
__DEV__ && (a4.displayName = "NextUI.ImageSkeleton"), a4.toString = () => ".nextui-image-skeleton";
var image_skeleton_default = with_defaults_default(a4, { opacity: 0.5, className: "" });

// node_modules/@nextui-org/react/esm/image/image.js
var Image = Cn.forwardRef((t9, n15) => {
  const { src: g4, width: h4, height: x8, showSkeleton: w3 = true, className: y3, maxDelay: j2 = 3e3, autoResize: I2 = false, objectFit: N5 = "scale-down", containerCss: b6, css: T3, ...$2 } = t9, k6 = useDOMRef(n15), [z3, F3] = h(true), [R3, S2] = h(w3), { w: C4, h: D3 } = F(() => ({ w: h4 ? "number" == typeof h4 ? `${h4}px` : h4 : "auto", h: x8 ? "number" == typeof x8 ? `${x8}px` : x8 : "auto" }), [h4, x8]), [L2, U2, q3] = use_current_state_default2(D3), [v4, A3] = use_real_shape_default2(k6), B2 = w3 && !!h4 && !!x8;
  p(() => {
    k6.current && k6.current.complete && (F3(false), S2(false));
  }), p(() => {
    const t10 = setTimeout(() => {
      B2 && S2(false), clearTimeout(t10);
    }, j2);
    return () => clearTimeout(t10);
  }, [z3]), p(() => {
    if (!I2)
      return;
    const t10 = 0 === v4.width, e15 = "auto" === q3.current;
    !t10 && h4 && x8 && (v4.width < h4 ? !e15 && U2("auto") : e15 && U2(D3));
  }, [v4, h4]), use_resize_default2(() => {
    I2 && A3();
  });
  const E2 = F(() => z3 ? "loading" : "ready", [z3]);
  return o(StyledImageContainer, { className: clsx_default("nextui-image-container", `nextui-image--${E2}`, y3), css: { width: C4, height: L2, ...b6 }, "data-state": E2, ready: !z3 || R3, children: [R3 && o(image_skeleton_default, { opacity: 1 }), o(StyledImage, { ref: k6, alt: t9.alt || "", className: "nextui-image", css: { objectFit: N5, ...T3 }, "data-state": E2, height: x8, src: g4, width: h4, onLoad: () => {
    F3(false);
  }, ...$2 })] });
});
__DEV__ && (Image.displayName = "NextUI.Image"), Image.toString = () => ".nextui-image";
var image_default = Cn.memo(Image);

// node_modules/@nextui-org/react/esm/image/index.js
var image_default2 = image_default;

// node_modules/@nextui-org/react/esm/divider/divider.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/dimensions.js
var getMargin = (t9) => `calc(${15.25 * t9}pt + 1px * ${t9 - 1})`;

// node_modules/@nextui-org/react/esm/divider/divider.styles.js
var StyledDivider = styled("div", { width: "100%", maxWidth: "100%", position: "relative", variants: { color: { default: { bg: "$border" }, primary: { bg: "$primary" }, secondary: { bg: "$secondary" }, success: { bg: "$success" }, warning: { bg: "$warning" }, error: { bg: "$error" } } }, defaultVariants: { color: "default" } });
var StyledDividerText = styled("span", { position: "absolute", left: "50%", top: "50%", minHeight: "100%", display: "inline-flex", jc: "center", ai: "center", transform: "translate(-50%, -50%)", padding: "0 $lg", fontSize: "$base", fontWeight: "bold", textTransform: "capitalize", backgroundColor: "$background", zIndex: "$1", variants: { color: { default: { color: "$text" }, primary: { color: "$primary" }, secondary: { color: "$secondary" }, success: { color: "$success" }, warning: { color: "$warning" }, error: { color: "$error" } } } });

// node_modules/@nextui-org/react/esm/divider/divider.js
var a5 = ({ height: t9, x: e15, y: a13, align: l13, children: m13, textColor: c15, css: f5, ...d11 }) => {
  const h4 = F(() => {
    if (l13 && "center" !== l13)
      return "left" === l13 || "start" === l13 ? { transform: "translateY(-50%)", left: "7%" } : { transform: "translateY(-50%)", left: "auto", right: "7%" };
  }, [l13]), u9 = a13 ? getMargin(a13 / 2) : 0, x8 = e15 ? getMargin(e15 / 2) : 0;
  return o(StyledDivider, { css: { margin: `${u9} ${x8}`, height: `calc(${t9} * 1px)`, ...f5 }, role: "separator", ...d11, children: m13 && o(StyledDividerText, { className: "nextui-divider-text", color: c15, css: { ...h4 }, children: m13 }) });
};
a5.toString = () => ".nextui-divider";
var l4 = Cn.memo(a5);
var divider_default = with_defaults_default(l4, { x: 0, y: 0, height: 1, align: "center" });

// node_modules/@nextui-org/react/esm/divider/index.js
var divider_default2 = divider_default;

// node_modules/@nextui-org/react/esm/card/card.js
init_compat_module();

// node_modules/@nextui-org/react/esm/card/use-card.js
init_compat_module();
var useCard = (l13) => {
  const { ref: n15, disableAnimation: p7 = false, disableRipple: c15 = false, variant: d11 = "shadow", isHoverable: u9 = false, borderWeight: m13 = "light", isPressable: b6 = false, onClick: P3, onPress: f5, autoFocus: v4, allowTextSelectionOnPress: C4 = true, ...g4 } = l13, h4 = useDOMRef(n15), { onClick: k6, ...F3 } = use_drip_default2(false, h4), H2 = (r14) => {
    p7 || c15 || !h4.current || k6(r14);
  }, { isPressed: T3, pressProps: w3 } = $f6c31cce2adf654f$export$45712eceda6fad212({ isDisabled: !b6, onPress: (r14) => {
    "keyboard" !== r14.pointerType && "virtual" !== r14.pointerType || (H2(r14), null == P3 || P3(r14)), null == f5 || f5(r14);
  }, allowTextSelectionOnPress: C4, ...g4 }), { hoverProps: x8, isHovered: y3 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: !u9, ...g4 }), { isFocusVisible: D3, focusProps: R3 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: v4 });
  w3.onClick = (r14) => {
    b6 && (H2(r14), null == P3 || P3(r14));
  };
  const A3 = T((r14 = {}) => ({ ...$3ef42575df84b30b$export$9d1611c77c2fe9282(b6 ? { ...w3, ...R3 } : {}, u9 ? x8 : {}, g4, r14) }), [b6, u9, w3, R3, x8, g4]);
  return { cardRef: h4, variant: d11, borderWeight: m13, isPressable: b6, isHovered: y3, isPressed: T3, disableAnimation: p7, disableRipple: c15, dripBindings: F3, onDripClickHandler: k6, isFocusVisible: D3, getCardProps: A3 };
};

// node_modules/@nextui-org/react/esm/card/card.styles.js
var StyledCardBody = styled("div", { d: "flex", w: "100%", h: "auto", flex: "1 1 auto", fd: "column", jc: "inherit", ai: "inherit", ac: "inherit", py: "$lg", px: "$sm", oy: "auto", position: "relative", ta: "left" });
var StyledCard = styled("div", { $$cardColor: "$colors$backgroundContrast", $$cardTextColor: "$colors$text", m: 0, p: 0, br: "$lg", bg: "$$cardColor", color: "$$cardTextColor", position: "relative", display: "flex", overflow: "hidden", fd: "column", width: "100%", height: "auto", boxSizing: "border-box", "@motion": { transition: "none" }, ".nextui-image": { width: "100%" }, [`& ${StyledDrip}`]: { zIndex: "$1", ".nextui-drip-filler": { opacity: 0.25, fill: "$accents6" } }, variants: { variant: { flat: { bg: "$accents0" }, shadow: { dropShadow: "$lg", "@safari": { boxShadow: "$lg", dropShadow: "none" }, "@-moz-document url-prefix()": { boxShadow: "$lg", dropShadow: "none" } }, bordered: { borderStyle: "solid", borderColor: "$border" } }, borderWeight: { light: { bw: "$light" }, normal: { bw: "$normal" }, bold: { bw: "$bold" }, extrabold: { bw: "$extrabold" }, black: { bw: "$black" } }, disableAnimation: { true: { transition: "none" }, false: { transition: "$card" } }, isPressable: { true: { cursor: "pointer", us: "none", WebkitTapHighlightColor: "transparent" } }, isPressed: { true: {} }, isHovered: { true: { dropShadow: "$lg", "@safari": { boxShadow: "$lg", dropShadow: "none" }, "@-moz-document url-prefix()": { boxShadow: "$lg", dropShadow: "none" } } } }, compoundVariants: [{ isPressed: true, disableAnimation: false, css: { transform: "scale(0.97)" } }, { isHovered: true, disableAnimation: false, css: { transform: "translateY(-2px)" } }, { isHovered: true, variant: "shadow", css: { dropShadow: "$xl", "@safari": { boxShadow: "$xl", dropShadow: "none" }, "@-moz-document url-prefix()": { boxShadow: "$xl", dropShadow: "none" } } }] }, cssNoBlurriness, cssFocusVisible);
var StyledCardHeader = styled("div", { w: "100%", display: "flex", flexShrink: 0, zIndex: "$1", jc: "flex-start", ai: "center", overflow: "hidden", color: "inherit", p: "$sm" });
var StyledCardFooter = styled("div", { w: "100%", h: "auto", p: "$sm", d: "flex", ai: "center", overflow: "hidden", color: "inherit", bblr: "$lg", bbrr: "$lg", variants: { isBlurred: { true: { bf: "saturate(180%) blur(10px)", bg: "$$cardColor" } } } });

// node_modules/@nextui-org/react/esm/card/card.js
var d2 = Cn.forwardRef(({ ...r14 }, e15) => {
  const { as: d11, css: n15, children: m13, ...l13 } = r14, { cardRef: c15, variant: p7, isFocusVisible: f5, isPressable: b6, isPressed: u9, disableAnimation: x8, disableRipple: g4, borderWeight: P3, isHovered: h4, getCardProps: j2, dripBindings: v4 } = useCard({ ...l13, ref: e15 });
  return o(StyledCard, { ref: c15, as: d11, borderWeight: P3, css: n15, disableAnimation: x8, isFocusVisible: f5, isHovered: h4, isPressable: b6, isPressed: u9, role: b6 ? "button" : "region", tabIndex: b6 ? 0 : -1, variant: p7, ...j2(), children: [b6 && !x8 && !g4 && o(drip_default, { ...v4 }), m13] });
});
__DEV__ && (d2.displayName = "NextUI.Card"), d2.toString = () => ".nextui-card";
var card_default = d2;

// node_modules/@nextui-org/react/esm/card/index.js
card_default.Header = StyledCardHeader, card_default.Body = StyledCardBody, card_default.Footer = StyledCardFooter, card_default.Image = image_default2, card_default.Divider = divider_default2;
var card_default2 = card_default;

// node_modules/@nextui-org/react/esm/checkbox/checkbox.js
init_compat_module();

// node_modules/@nextui-org/react/esm/checkbox/use-checkbox.js
init_compat_module();

// node_modules/@react-stately/toggle/dist/module.js
function $3017fa7ffdddec74$export$8042c6c013fd5226(props = {}) {
  let { isReadOnly } = props;
  let [isSelected, setSelected] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.isSelected, props.defaultSelected || false, props.onChange);
  function updateSelected(value) {
    if (!isReadOnly)
      setSelected(value);
  }
  function toggleState() {
    if (!isReadOnly)
      setSelected(!isSelected);
  }
  return {
    isSelected,
    setSelected: updateSelected,
    toggle: toggleState
  };
}

// node_modules/@react-aria/checkbox/dist/module.js
init_compat_module();

// node_modules/@react-aria/toggle/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/toggle/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext4 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext4 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext4);
var $704cf1d3b684cc5c$var$canUseDOM4 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/@react-aria/toggle/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c4 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap4 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$cd8c9cb68f8426294(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap4.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap4.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e4(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe9284(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e4)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f8426294)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
var $65484d02dcb7eb3e$var$DOMPropNames3 = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames3 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe3 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f3(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames3.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames3.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe3.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f34(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll4())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements4(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition4(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached4 = null;
function $7215afc6de606d6b$var$supportsPreventScroll4() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached4 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached4 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached4 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached4;
}
function $7215afc6de606d6b$var$getScrollableElements4(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition4(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement4 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks4 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents4() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement4.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement4.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement4.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement4.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement4.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks4)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks4.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents4();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents4);
}
function $bbed8b41f857bcc0$export$24490316f764c4304(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement4.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks4.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed64() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e4(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c4)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
var $5df64b3807dc15ee$var$visualViewport4 = typeof window !== "undefined" && window.visualViewport;
function $c87311424ea30a05$var$testUserAgent4(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform4(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea104() {
  return $c87311424ea30a05$var$testPlatform4(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d994() {
  return $c87311424ea30a05$var$testPlatform4(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e42244() {
  return $c87311424ea30a05$var$testPlatform4(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea104() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f14() {
  return $c87311424ea30a05$export$186c6964ca17d994() || $c87311424ea30a05$export$7bef049ce92e42244();
}
function $c87311424ea30a05$export$a11b0059900ceec84() {
  return $c87311424ea30a05$var$testUserAgent4(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de4(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec84)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf634(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/toggle/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state4 = "default";
var $14c0b72509d70225$var$savedUserSelect4 = "";
var $14c0b72509d70225$var$modifiedElementMap4 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754874(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f14)()) {
    if ($14c0b72509d70225$var$state4 === "default") {
      $14c0b72509d70225$var$savedUserSelect4 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state4 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap4.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32954(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f14)()) {
    if ($14c0b72509d70225$var$state4 !== "disabled")
      return;
    $14c0b72509d70225$var$state4 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c4304)(() => {
        if ($14c0b72509d70225$var$state4 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect4 || "";
          $14c0b72509d70225$var$savedUserSelect4 = "";
          $14c0b72509d70225$var$state4 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap4.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap4.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap4.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb54 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb54.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext4(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb54));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe9284)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e4)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad214(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext4(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed64)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent4(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32954)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent4(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard4(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink4(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent4(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent4(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de4)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f34)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent4(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard4(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent4(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink4(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf634)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault4(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f34)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a46974671754874)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault4(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget4(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget4(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent4(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent4(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget4(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent4(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent4(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e32954)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault4(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de4)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f34)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget4(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent4(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent4(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent4(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f34)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a46974671754874)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById4(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget4(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById4(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget4(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32954)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e32954)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9284)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink4(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent4(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey4(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink4(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent4(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById4(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent4(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect4(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping4(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget4(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect4(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping4(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault4(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard4(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey4(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes4 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey4(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes4.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e994 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad214)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe9284)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b84 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb54));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe9284)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e4)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb54).Provider, {
    value: context
  }, children);
});
var $8a9cb279dc87e130$export$905e7fc544a71f364 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc4(onBlur) {
  let stateRef = (0, _)({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c4)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return (0, T)((e15) => {
    if (e15.target instanceof HTMLButtonElement || e15.target instanceof HTMLInputElement || e15.target instanceof HTMLTextAreaElement || e15.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e15.target;
      let onBlurHandler = (e16) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f364("blur", e16));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e64(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, T)((e15) => {
    if (e15.target === e15.currentTarget) {
      if (onBlurProp)
        onBlurProp(e15);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc4)(onBlur);
  const onFocus = (0, T)((e15) => {
    if (e15.target === e15.currentTarget && document.activeElement === e15.target) {
      if (onFocusProp)
        onFocusProp(e15);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e15);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
var $507fabe10e71c6fb$var$currentModality4 = null;
var $507fabe10e71c6fb$var$changeHandlers4 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners4 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus4 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently4 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers4(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers4)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey4(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea104)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent4(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus4 = true;
  if ($507fabe10e71c6fb$var$isValidKey4(e15)) {
    $507fabe10e71c6fb$var$currentModality4 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers4("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent4(e15) {
  $507fabe10e71c6fb$var$currentModality4 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus4 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers4("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent4(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de4)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus4 = true;
    $507fabe10e71c6fb$var$currentModality4 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent4(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus4 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently4) {
    $507fabe10e71c6fb$var$currentModality4 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers4("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus4 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently4 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur4() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus4 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently4 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents4() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners4)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus4 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent4, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent4, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent4, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent4, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur4, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent4, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent4, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent4, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent4, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent4, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent4, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners4 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents4();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents4);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a94() {
  return $507fabe10e71c6fb$var$currentModality4;
}
function $93925083ecbb358c$export$48d1ea63208302602(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e15) => {
    let event = {
      ...e15,
      preventDefault() {
        e15.preventDefault();
      },
      isDefaultPrevented() {
        return e15.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e15.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd4(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea63208302602)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea63208302602)(props.onKeyUp)
    }
  };
}

// node_modules/@react-aria/toggle/node_modules/@react-aria/focus/dist/import.mjs
function $6a99195332edec8b$export$80f3e147d781571c3(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a94)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c4304)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f34)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f34)(element);
}
var $9bf71ea28793e738$var$FocusContext4 = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements4 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR4 = $9bf71ea28793e738$var$focusableElements4.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements4.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR4 = $9bf71ea28793e738$var$focusableElements4.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope4(element, scope) {
  return scope.some((node) => node.contains(element));
}
var $9bf71ea28793e738$var$Tree3 = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode3({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope4(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree3();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode3({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode3 = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e3 = new $9bf71ea28793e738$var$Tree3();
var $e6afbd83fe6ebbd2$var$FocusableContext4 = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext2(ref) {
  let context = (0, q)($e6afbd83fe6ebbd2$var$FocusableContext4) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e4)(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$var$FocusableProvider4(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext4.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd54 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider4);
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c2(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e64)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd4)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe9284)(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext2(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, _)(props.autoFocus);
  (0, p)(() => {
    if (autoFocusRef.current && domRef.current)
      (0, $6a99195332edec8b$export$80f3e147d781571c3)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9284)({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}

// node_modules/@react-aria/toggle/dist/import.mjs
function $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {
  let { isDisabled = false, isRequired = false, isReadOnly = false, value, name, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby, validationState = "valid" } = props;
  let onChange = (e15) => {
    e15.stopPropagation();
    state.setSelected(e15.target.checked);
  };
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel)
    console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad214)({
    isDisabled
  });
  let { focusableProps } = (0, $e6afbd83fe6ebbd2$export$4c014de7c8940b4c2)(props, ref);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe9284)(pressProps, focusableProps);
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f3)(props, {
    labelable: true
  });
  return {
    inputProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9284)(domProps, {
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-controls": props["aria-controls"],
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      onChange,
      disabled: isDisabled,
      ...value == null ? {} : {
        value
      },
      name,
      type: "checkbox",
      ...interactions
    }),
    isSelected: state.isSelected,
    isPressed,
    isDisabled,
    isReadOnly
  };
}

// node_modules/@react-aria/label/dist/module.js
function $d191a55c9702f145$export$8467354a121f1b9f(props) {
  let { id, label, "aria-labelledby": ariaLabelledby, "aria-label": ariaLabel, labelElementType = "label" } = props;
  id = $bdb11010cef70236$export$f680877a34711e372(id);
  let labelId = $bdb11010cef70236$export$f680877a34711e372();
  let labelProps = {};
  if (label) {
    ariaLabelledby = ariaLabelledby ? `${ariaLabelledby} ${labelId}` : labelId;
    labelProps = {
      id: labelId,
      htmlFor: labelElementType === "label" ? id : void 0
    };
  } else if (!ariaLabelledby && !ariaLabel)
    console.warn("If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility");
  let fieldProps = $313b98861ee5dd6c$export$d6875122194c7b442({
    id,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby
  });
  return {
    labelProps,
    fieldProps
  };
}
function $2baaea4c71418dea$export$294aa081a6c6f55d(props) {
  let { description, errorMessage, validationState } = props;
  let { labelProps, fieldProps } = $d191a55c9702f145$export$8467354a121f1b9f(props);
  let descriptionId = $bdb11010cef70236$export$b4cc09c592e8fdb8([
    Boolean(description),
    Boolean(errorMessage),
    validationState
  ]);
  let errorMessageId = $bdb11010cef70236$export$b4cc09c592e8fdb8([
    Boolean(description),
    Boolean(errorMessage),
    validationState
  ]);
  fieldProps = $3ef42575df84b30b$export$9d1611c77c2fe9282(fieldProps, {
    "aria-describedby": [
      descriptionId,
      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268
      errorMessageId,
      props["aria-describedby"]
    ].filter(Boolean).join(" ") || void 0
  });
  return {
    labelProps,
    fieldProps,
    descriptionProps: {
      id: descriptionId
    },
    errorMessageProps: {
      id: errorMessageId
    }
  };
}

// node_modules/@react-aria/checkbox/dist/module.js
function $406796ff087fe49b$export$e375f10ce42261c5(props, state, inputRef) {
  let { inputProps } = $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, inputRef);
  let { isSelected } = state;
  let { isIndeterminate } = props;
  p(() => {
    if (inputRef.current)
      inputRef.current.indeterminate = isIndeterminate;
  });
  return {
    inputProps: {
      ...inputProps,
      checked: isSelected,
      "aria-checked": isIndeterminate ? "mixed" : isSelected
    }
  };
}
var $1ae600c947479353$export$31440636951aa68c = /* @__PURE__ */ new WeakMap();
var $1ae600c947479353$export$a3077e9c93f7360f = /* @__PURE__ */ new WeakMap();
var $1ae600c947479353$export$d5679492e2864181 = /* @__PURE__ */ new WeakMap();
function $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(props, state) {
  let { isDisabled, name } = props;
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = $2baaea4c71418dea$export$294aa081a6c6f55d({
    ...props,
    // Checkbox group is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  $1ae600c947479353$export$a3077e9c93f7360f.set(state, descriptionProps.id);
  $1ae600c947479353$export$d5679492e2864181.set(state, errorMessageProps.id);
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  $1ae600c947479353$export$31440636951aa68c.set(state, name);
  return {
    groupProps: $3ef42575df84b30b$export$9d1611c77c2fe9282(domProps, {
      role: "group",
      "aria-disabled": isDisabled || void 0,
      ...fieldProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}
function $fba3e38d5ca8983f$export$353b32fc6898d37d(props, state, inputRef) {
  const toggleState = $3017fa7ffdddec74$export$8042c6c013fd5226({
    isReadOnly: props.isReadOnly || state.isReadOnly,
    isSelected: state.isSelected(props.value),
    onChange(isSelected) {
      if (isSelected)
        state.addValue(props.value);
      else
        state.removeValue(props.value);
      if (props.onChange)
        props.onChange(isSelected);
    }
  });
  let { inputProps } = $406796ff087fe49b$export$e375f10ce42261c5({
    ...props,
    isReadOnly: props.isReadOnly || state.isReadOnly,
    isDisabled: props.isDisabled || state.isDisabled,
    name: props.name || $1ae600c947479353$export$31440636951aa68c.get(state)
  }, toggleState, inputRef);
  return {
    inputProps: {
      ...inputProps,
      "aria-describedby": [
        state.validationState === "invalid" ? $1ae600c947479353$export$d5679492e2864181.get(state) : null,
        $1ae600c947479353$export$a3077e9c93f7360f.get(state)
      ].filter(Boolean).join(" ") || void 0
    }
  };
}

// node_modules/@nextui-org/react/esm/utils/context.js
init_compat_module();
function createContext(t9 = {}) {
  const { strict: e15 = true, errorMessage: o14 = "useContext: `context` is undefined. Seems you forgot to wrap component within the Provider", name: n15 } = t9, c15 = G(void 0);
  return c15.displayName = n15, [c15.Provider, function t10() {
    const n16 = q(c15);
    if (!n16 && e15) {
      const r14 = new Error(o14);
      throw r14.name = "ContextError", null == Error.captureStackTrace || Error.captureStackTrace(r14, t10), r14;
    }
    return n16;
  }, c15];
}

// node_modules/@nextui-org/react/esm/checkbox/checkbox-context.js
var [CheckboxGroupProvider, useCheckboxGroupContext] = createContext({ name: "CheckboxGroupContext", strict: false });

// node_modules/@nextui-org/react/esm/checkbox/use-checkbox.js
var useCheckbox = (a13) => {
  var s9, u9, d11;
  const c15 = useCheckboxGroupContext(), { size: m13 = null != (s9 = null == c15 ? void 0 : c15.size) ? s9 : "md", color: p7 = null != (u9 = null == c15 ? void 0 : c15.color) ? u9 : "default", labelColor: b6 = null != (d11 = null == c15 ? void 0 : c15.labelColor) ? d11 : "default", lineThrough: h4, isRounded: f5 = false, disableAnimation: v4 = false, isIndeterminate: C4 = false, containerCss: x8, ...g4 } = a13;
  if (c15 && __DEV__) {
    const e15 = "The Checkbox.Group is being used, `%s` will be ignored. Use the `%s` of the Checkbox.Group instead.";
    "isSelected" in g4 && console.warn(e15, "isSelected", "value"), "defaultSelected" in g4 && console.warn(e15, "defaultSelected", "defaultValue");
  }
  const k6 = _(null), S2 = F(() => {
    var e15, o14;
    return { ...g4, isIndeterminate: C4, value: null != (e15 = g4.value) ? e15 : "", isRequired: null != (o14 = g4.isRequired) && o14 };
  }, [C4, g4]), { inputProps: R3 } = c15 ? $fba3e38d5ca8983f$export$353b32fc6898d37d({ ...S2, validationState: g4.validationState }, c15.groupState, k6) : $406796ff087fe49b$export$e375f10ce42261c5(S2, $3017fa7ffdddec74$export$8042c6c013fd5226(S2), k6);
  return { size: m13, color: p7, labelColor: b6, isRounded: f5, lineThrough: h4, disableAnimation: v4, isIndeterminate: C4, inputRef: k6, inputProps: R3, containerCss: x8 };
};

// node_modules/@nextui-org/react/esm/checkbox/checkbox.styles.js
var StyledCheckboxLabel = styled("label", { $$checkboxBorderColor: "$colors$border", $$checkboxBorderRadius: "$radii$squared", d: "inline-flex", jc: "flex-start", ai: "center", position: "relative", w: "auto", cursor: "pointer", zIndex: "$1", opacity: 1, transition: "opacity 0.25s ease", "@motion": { transition: "none" }, variants: { size: { xs: { $$checkboxSize: "$space$7" }, sm: { $$checkboxSize: "$space$8" }, md: { $$checkboxSize: "$space$9" }, lg: { $$checkboxSize: "$space$10" }, xl: { $$checkboxSize: "$space$11" } }, isDisabled: { true: { opacity: 0.75, cursor: "not-allowed" } }, disableAnimation: { true: { transition: "none" } } }, defaultVariants: { size: "md" } });
var StyledIconCheckFirstLine = styled("div", { content: "", background: "transparent", position: "absolute", width: "8px", height: "1px", br: "5px", zIndex: "$1", bottom: "0px", "&:after": { content: "", position: "absolute", left: "0px", width: "0%", height: "2px", background: "$white", br: "5px 0px 0px 5px" }, "@motion": { "&:after": { transition: "none" } }, variants: { isIndeterminate: { true: { display: "none" } }, isChecked: { true: { "&:after": { width: "100%", transition: "width 0.25s ease 0.1s" } } }, disableAnimation: { true: { "&:after": { transition: "none" } } } }, compoundVariants: [{ isChecked: true, disableAnimation: true, css: { "&:after": { transition: "none" } } }] });
var StyledIconCheckSecondLine = styled("div", { content: "", position: "absolute", h: "13px", br: "5px", bottom: "0", right: "0", zIndex: "$1", background: "transparent", width: "2px", "&:after": { content: "", position: "absolute", width: "2px", height: "0%", background: "$white", left: "0px", bottom: "0px", br: "5px 5px 0px 0px" }, "@motion": { "&:after": { transition: "none" } }, variants: { isIndeterminate: { true: { display: "none" } }, isChecked: { true: { "&:after": { height: "100%", transition: "height 0.2s ease 0.3s" } } }, disableAnimation: { true: { "&:after": { transition: "none" } } } }, compoundVariants: [{ isChecked: true, disableAnimation: true, css: { "&:after": { transition: "none" } } }] });
var StyledIconCheck = styled("i", { size: "$$checkboxSize", dflex: "center", br: "inherit", opacity: 0, zIndex: "$2", transition: "transform 0.35s ease", "&:after": { content: "", opacity: 0, position: "relative", width: "10px", height: "2px", br: "1px", background: "$white", display: "block" }, "@motion": { transition: "none", "&:after": { transition: "none" } }, variants: { isIndeterminate: { true: { opacity: 1, transform: "rotate(0deg)", width: "auto", height: "auto", margin: "0px", "&:after": { opacity: 1 } }, false: { width: "8px", height: "14px", display: "block", position: "relative", marginTop: "-4px" } }, size: { xs: { marginTop: "-2px", transform: "rotate(45deg) scale(0.5)" }, sm: { marginTop: "-2px", transform: "rotate(45deg) scale(0.5)" }, md: { transform: "rotate(45deg) scale(0.8)" }, lg: { transform: "rotate(45deg)" }, xl: { transform: "rotate(45deg)" } }, isChecked: { true: { opacity: 1 } }, disableAnimation: { true: { transition: "none", "&:after": { transition: "none" } } } }, compoundVariants: [{ isIndeterminate: true, size: "xs", css: { scale: "0.5" } }, { isIndeterminate: true, size: "sm", css: { scale: "0.5" } }, { isIndeterminate: true, size: "md", css: { scale: "0.8" } }, { isIndeterminate: true, size: "lg", css: { transform: "none" } }, { isIndeterminate: true, size: "lg", css: { transform: "none" } }] });
var StyledCheckboxMask = styled("div", { $$checkboxMaskTransition: "transform 0.25s ease 0s, opacity 0.25s ease 0s, background 0.25s ease 0s, border-color 0.25s ease 0s", size: "100%", position: "absolute", pe: "none", boxSizing: "border-box", dflex: "center", zIndex: "-$1", br: "inherit", color: "$$checkboxBorderColor", "&:before": { content: "", position: "absolute", top: "0px", left: "0px", size: "100%", br: "inherit", transition: "$$checkboxMaskTransition", zIndex: "-$1", border: "$borderWeights$normal solid currentColor", boxSizing: "border-box" }, "&:after": { content: "", position: "absolute", top: "0px", left: "0px", size: "100%", bg: "$$checkboxColor", scale: 0.5, br: "inherit", opacity: 0, transition: "$$checkboxMaskTransition", zIndex: "-$1" }, "@motion": { "&:before": { transition: "none" }, "&:after": { transition: "none" } }, variants: { isChecked: { true: { "&:before": { opacity: 0, scale: 1.2 }, "&:after": { opacity: 1, scale: 1 } } }, isIndeterminate: { true: { "&:before": { opacity: 0, scale: 1.2 }, "&:after": { opacity: 1, scale: 1 } } }, disableAnimation: { true: { "&:before": { transition: "none" }, "&:after": { transition: "none" } } } } });
var StyledCheckboxText = styled("span", { position: "relative", dflex: "center", color: "$text", opacity: 1, pl: "calc($$checkboxSize * 0.57)", ln: "$$checkboxSize", fontSize: "$$checkboxSize", us: "none", transition: "opacity 0.25s ease 0s", "@motion": { transition: "none", "&:before": { transition: "none" } }, variants: { color: { default: { color: "$text" }, primary: { color: "$primary" }, secondary: { color: "$secondary" }, success: { color: "$success" }, warning: { color: "$warning" }, error: { color: "$error" } }, lineThrough: { true: { "&:before": { content: "", position: "absolute", width: "0px", height: "2px", background: "$text", transition: "width 0.25s ease 0s" } } }, isChecked: { true: { "&:before": { opacity: 0.8 } } }, isDisabled: { true: { color: "$accents5" } }, disableAnimation: { true: { transition: "none", "&:before": { transition: "none" } } } }, compoundVariants: [{ lineThrough: true, isChecked: true, css: { opacity: 0.6, "&:before": { w: "calc(100% - 10px)" } } }] });
var StyledCheckboxContainer = styled("div", { br: "$$checkboxBorderRadius", position: "relative", sizeMin: "$$checkboxSize", transition: "box-shadow 0.25s ease", zIndex: "$1", ".nextui-checkbox-input": { position: "absolute", width: "100%", height: "100%", top: "0px", left: "0px", margin: "0px", padding: "0px", opacity: 0, zIndex: "$1", cursor: "pointer", "&:disabled": { cursor: "not-allowed" } }, "@motion": { transition: "none" }, variants: { color: { default: { $$checkboxColor: "$colors$primary", $$checkboxColorHover: "$colors$primarySolidHover" }, primary: { $$checkboxColor: "$colors$primary", $$checkboxColorHover: "$colors$primarySolidHover" }, secondary: { $$checkboxColor: "$colors$secondary", $$checkboxColorHover: "$colors$secondarySolidHover" }, success: { $$checkboxColor: "$colors$success", $$checkboxColorHover: "$colors$successSolidHover" }, warning: { $$checkboxColor: "$colors$warning", $$checkboxColorHover: "$colors$warningSolidHover" }, error: { $$checkboxColor: "$colors$error", $$checkboxColorHover: "$colors$errorSolidHover" }, gradient: { $$checkboxColor: "$colors$gradient", $$checkboxColorHover: "$colors$gradient" } }, isRounded: { true: { $$checkboxBorderRadius: "$radii$pill" } }, isDisabled: { true: { opacity: 0.4, cursor: "not-allowed" } }, disableAnimation: { true: { transition: "none" } }, isHovered: { true: { [`& ${StyledCheckboxMask}:before`]: { bg: "$$checkboxBorderColor", border: "2px solid transparent" }, [`& ${StyledCheckboxMask}:after`]: { bg: "$$checkboxColorHover" } } } }, defaultVariants: { color: "default" } }, cssFocusVisible);
var StyledCheckboxGroup = styled("div", { display: "flex", flexDirection: "column", "& .nextui-checkbox-group-label": { d: "block", fontWeight: "$normal", fontSize: "calc($$checkboxSize * 0.8)", color: "$accents7", mb: "$3" }, variants: { size: { xs: { $$checkboxSize: "$space$7" }, sm: { $$checkboxSize: "$space$8" }, md: { $$checkboxSize: "$space$9" }, lg: { $$checkboxSize: "$space$10" }, xl: { $$checkboxSize: "$space$11" } }, isDisabled: { true: { "& .nextui-checkbox-group-label": { color: "$accents5" } } } } });
var StyledCheckboxGroupContainer = styled("div", { display: "flex", flexDirection: "column", variants: { isRow: { true: { flexDirection: "row", mt: 0, [`& ${StyledCheckboxLabel}`]: { mr: "$$checkboxSize" } }, false: { mr: 0, flexDirection: "column", [`& ${StyledCheckboxLabel}:not(:first-child)`]: { mt: "$$checkboxSize" } } } }, defaultVariants: { isRow: false } });

// node_modules/@nextui-org/react/esm/checkbox/checkbox.js
var C3 = Cn.forwardRef((e15, l13) => {
  const { className: C4, as: I2, css: v4, children: D3, label: j2, ...F3 } = e15, { size: P3, color: R3, labelColor: g4, isRounded: y3, lineThrough: z3, disableAnimation: H2, isIndeterminate: T3, inputRef: V2, inputProps: w3, containerCss: S2 } = useCheckbox({ ...F3, children: null != D3 ? D3 : j2 }), U2 = useFocusableRef(l13, V2), { hoverProps: $2, isHovered: q3 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: w3.disabled }), { pressProps: B2 } = $f6c31cce2adf654f$export$45712eceda6fad212({ isDisabled: w3.disabled }), { focusProps: E2, isFocusVisible: G3 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: w3.autoFocus }), J2 = F(() => q3 ? "hovered" : T3 && w3.checked ? "mixed" : w3.checked ? "checked" : "unchecked", [q3, T3, w3.checked]);
  return o(StyledCheckboxLabel, { ref: U2, ...$3ef42575df84b30b$export$9d1611c77c2fe9282($2, B2, $65484d02dcb7eb3e$export$457c3d6518dd4c6f(F3, { labelable: true })), as: I2, className: clsx_default("nextui-checkbox-label", `nextui-checkbox--${J2}`, C4), css: v4, disableAnimation: H2, isDisabled: w3.disabled, size: P3, children: [o(StyledCheckboxContainer, { className: "nextui-checkbox-container", color: R3, css: S2, disableAnimation: H2, isDisabled: w3.disabled, isFocusVisible: G3, isHovered: q3, isRounded: y3, ...E2, children: [o($5c3e21d68f1c4674$export$439d29a4e110a164, { children: o("input", { ref: V2, className: "nextui-checkbox-input", ...$3ef42575df84b30b$export$9d1611c77c2fe9282(w3, E2) }) }), o(StyledCheckboxMask, { className: "nextui-checkbox-mask", disableAnimation: H2, isChecked: w3.checked, isIndeterminate: T3, children: o(StyledIconCheck, { className: "nextui-icon-check", disableAnimation: H2, isChecked: w3.checked, isIndeterminate: T3, size: P3, children: [o(StyledIconCheckFirstLine, { className: "nextui-icon-check-line1", disableAnimation: H2, isChecked: w3.checked, isIndeterminate: T3 }), o(StyledIconCheckSecondLine, { className: "nextui-icon-check-line2", disableAnimation: H2, isChecked: w3.checked, isIndeterminate: T3 })] }) })] }), (D3 || j2) && o(StyledCheckboxText, { className: "nextui-checkbox-text", color: g4, disableAnimation: H2, isChecked: w3.checked, isDisabled: w3.disabled, lineThrough: z3, children: D3 || j2 })] });
});
__DEV__ && (C3.displayName = "NextUI.Checkbox"), C3.toString = () => ".nextui-checkbox";
var checkbox_default = C3;

// node_modules/@nextui-org/react/esm/checkbox/checkbox-group.js
init_compat_module();

// node_modules/@react-stately/checkbox/dist/module.js
function $587d3ad58be6d31f$export$daff6da51032a415(props = {}) {
  let [selectedValues, setValue] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.value, props.defaultValue || [], props.onChange);
  const state = {
    value: selectedValues,
    setValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      setValue(value);
    },
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false,
    isSelected(value) {
      return selectedValues.includes(value);
    },
    addValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (!selectedValues.includes(value))
        setValue(selectedValues.concat(value));
    },
    removeValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (selectedValues.includes(value))
        setValue(selectedValues.filter(
          (existingValue) => existingValue !== value
        ));
    },
    toggleValue(value) {
      if (props.isReadOnly || props.isDisabled)
        return;
      if (selectedValues.includes(value))
        setValue(selectedValues.filter(
          (existingValue) => existingValue !== value
        ));
      else
        setValue(selectedValues.concat(value));
    },
    validationState: props.validationState
  };
  return state;
}

// node_modules/@nextui-org/react/esm/checkbox/use-checkbox-group.js
var useCheckboxGroup = (e15 = {}) => {
  const { size: t9 = "md", color: a13 = "default", labelColor: l13 = "default", orientation: s9 = "vertical", css: c15, ...p7 } = e15, i13 = $587d3ad58be6d31f$export$daff6da51032a415(p7), { labelProps: u9, groupProps: b6 } = $1e9fce0cfacc738b$export$49ff6f28c54f1cbe(p7, i13);
  return { css: c15, size: t9, orientation: s9, color: a13, labelColor: l13, groupState: i13, labelProps: u9, groupProps: b6 };
};

// node_modules/@nextui-org/react/esm/checkbox/checkbox-group.js
var n6 = Cn.forwardRef((e15, s9) => {
  const { children: n15, className: p7, as: u9, label: x8, ...b6 } = e15, { css: h4, ...f5 } = useCheckboxGroup({ ...b6, label: x8 }), d11 = useDOMRef(s9);
  return o(StyledCheckboxGroup, { ref: d11, ...f5.groupProps, as: u9, className: clsx_default("nextui-checkbox-group", p7), css: h4, isDisabled: f5.groupState.isDisabled, size: f5.size, children: [x8 && o("label", { className: "nextui-checkbox-group-label", ...f5.labelProps, children: x8 }), o(StyledCheckboxGroupContainer, { className: "nextui-checkbox-group-items", isRow: "horizontal" === f5.orientation, role: "presentation", children: o(CheckboxGroupProvider, { value: f5, children: n15 }) })] });
});
__DEV__ && (n6.displayName = "NextUI.CheckboxGroup"), n6.toString = () => ".nextui-checkbox-group";
var checkbox_group_default = n6;

// node_modules/@nextui-org/react/esm/checkbox/index.js
checkbox_default.Group = checkbox_group_default;
var checkbox_default2 = checkbox_default;

// node_modules/@nextui-org/react/esm/code/code.js
init_compat_module();

// node_modules/@nextui-org/react/esm/code/code.styles.js
var StyledCode = styled("code", {});
var StyledPre = styled("pre", { width: "initial", mw: "100" });

// node_modules/@nextui-org/react/esm/code/code.js
var c3 = ({ block: t9, children: o14, ...c15 }) => t9 ? o(StyledPre, { ...c15, children: o(StyledCode, { children: o14 }) }) : o(StyledCode, { ...c15, children: o14 });
c3.toString = () => ".nextui-code";
var m4 = Cn.memo(c3);
var code_default = with_defaults_default(m4, { block: false });

// node_modules/@nextui-org/react/esm/code/index.js
var code_default2 = code_default;

// node_modules/@nextui-org/react/esm/col/col.js
init_compat_module();

// node_modules/@nextui-org/react/esm/col/col.styles.js
var StyledCol = styled("div", { float: "left", boxSizing: "border-box", pl: "calc($$rowGap / 2)", pr: "calc($$rowGap / 2)" });
var col_styles_default = StyledCol;

// node_modules/@nextui-org/react/esm/col/col.js
var e4 = ({ children: t9, span: o14, offset: e15, css: i13, ...m13 }) => o(col_styles_default, { css: { width: 100 / 12 * o14 + "%", marginLeft: 100 / 12 * e15 + "%", ...i13 }, ...m13, children: t9 });
e4.toString = () => ".nextui-column";
var i4 = Cn.memo(e4);
var col_default = with_defaults_default(i4, { span: 12, offset: 0 });

// node_modules/@nextui-org/react/esm/col/index.js
var col_default2 = col_default;

// node_modules/@nextui-org/react/esm/collapse/collapse.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/expand.js
init_compat_module();
var s3 = styled("div", { p: 0, m: 0, h: 0, opacity: 0, overflow: "hidden", variants: { expanded: { true: { opacity: 1 } } } });
var expand_default = with_defaults_default(({ isExpanded: e15, delay: n15, animated: a13, css: u9, children: m13 }) => {
  const [d11, h4] = h(e15 ? "auto" : "0"), [l13, p7] = h(e15), f5 = _(null), x8 = _(), T3 = _(), w3 = _(), [g4, y3] = use_real_shape_default2(f5);
  return p(() => h4(`${g4.height}px`), [g4.height]), p(() => {
    if (e15 !== l13)
      return e15 || (y3(), h4(`${g4.height}px`)), x8.current = window.setTimeout(() => {
        p7(e15), clearTimeout(x8.current);
      }, 30), e15 ? w3.current = window.setTimeout(() => {
        h4("auto"), clearTimeout(w3.current);
      }, n15) : T3.current = window.setTimeout(() => {
        clearTimeout(T3.current);
      }, n15 / 2), () => {
        clearTimeout(x8.current), clearTimeout(T3.current), clearTimeout(w3.current);
      };
  }, [e15]), o(s3, { css: { height: l13 ? d11 : "0", transition: a13 ? `height ${n15}ms ease 0ms,
    opacity ${1.5 * n15}ms ease 0ms;` : "none", ...u9 }, expanded: l13, children: o("div", { ref: f5, className: "nextui-expand-content", children: m13 }) });
}, { isExpanded: false, animated: true, delay: 200 });

// node_modules/@nextui-org/react/esm/collapse/collapse-context.js
init_compat_module();
var e5 = { values: [] };
var CollapseContext = Cn.createContext(e5);
var useCollapseContext = () => Cn.useContext(CollapseContext);

// node_modules/@nextui-org/react/esm/collapse/collapse.styles.js
var StyledCollapse = styled("div", { transition: "$default", ".nextui-collapse-title-content": { w: "100%", "h1,h2,h3,h4,h5,h6,p,span,b": { margin: 0 } }, ".nextui-collapse-title-container": { d: "flex", jc: "space-between", ai: "center" }, ".nextui-collapse-title": { color: "$foreground" }, ".nextui-collapse-subtitle": { color: "$accents7", margin: 0, "*": { margin: 0 } }, ".nextui-collapse-title-content-left": { mr: "$sm" }, ".nextui-collapse-title-content-left, .nextui-collapse-title-content-right": { d: "flex", ai: "center" }, "@motion": { transition: "none", ".nextui-collapse-title-content-right ": { svg: { transition: "none" } } }, variants: { shadow: { true: { border: "none", boxShadow: "$md", br: "$lg", p: "0 $lg", bg: "$backgroundContrast" } }, borderWeight: { light: { $$collapseBorderWidth: "$borderWeights$light" }, normal: { $$collapseBorderWidth: "$borderWeights$normal" }, bold: { $$collapseBorderWidth: "$borderWeights$bold" }, extrabold: { $$collapseBorderWidth: "$borderWeights$extrabold" }, black: { $$collapseBorderWidth: "$borderWeights$black" } }, divider: { true: { borderTop: "$$collapseBorderWidth solid $border", borderBottom: "$$collapseBorderWidth solid $border" } }, bordered: { true: { br: "$lg", p: "0 $lg", border: "$$collapseBorderWidth solid $border" } }, animated: { true: { ".nextui-collapse-title-content-right ": { svg: { transition: "transform 200ms ease" } } }, false: { transition: "none" } }, visible: { true: { ".nextui-collapse-title-content-right ": { svg: { transform: "rotateZ(-90deg)" } } }, false: { ".nextui-collapse-title-content-right": { svg: { transform: "rotateZ(0deg)" } } } } }, defaultVariants: { borderWeight: "light" } }, sharedFocus);
var StyledCollapseView = styled("div", { w: "100%", d: "block", ta: "left", bg: "transparent", border: "none", cursor: "pointer", outline: "none", padding: "$lg 0", variants: { disabled: { true: { cursor: "not-allowed", ".nextui-collapse-title, .nextui-collapse-subtitle": { opacity: 0.5 } } } } }, cssFocusVisible);
var StyledCollapseContent = styled("div", { fontSize: "$base", lineHeight: "$lg", pb: "$lg", "*:first-child": { mt: 0 }, "*:last-child": { mb: 0 } });
var StyledCollapseIcon = styled("svg", { path: { stroke: "$accents7" } });
var StyledCollapseGroup = styled("div", { width: "auto", padding: "0 $sm", "div + div": { borderTop: "none" }, [`& ${StyledCollapse}:first-child`]: { borderTop: "none" }, [`& ${StyledCollapse}:last-child`]: { borderBottom: "none" }, variants: { borderWeight: { light: { $$collapseGroupBorderWidth: "$borderWeights$light" }, normal: { $$collapseGroupBorderWidth: "$borderWeights$normal" }, bold: { $$collapseGroupBorderWidth: "$borderWeights$bold" }, extrabold: { $$collapseGroupBorderWidth: "$borderWeights$extrabold" }, black: { $$collapseGroupBorderWidth: "$borderWeights$black" } }, shadow: { true: { br: "$lg", border: "none", boxShadow: "$md", p: "0 $lg", bg: "$backgroundContrast" } }, bordered: { true: { br: "$lg", p: "0 $lg", border: "$$collapseGroupBorderWidth solid $border" } }, splitted: { true: { [`& ${StyledCollapse}`]: { br: "$lg", border: "none", bg: "$backgroundContrast", boxShadow: "$md", p: "0 $lg", margin: "$md 0" } } } }, defaultVariants: { borderWeight: "light", shadow: false, bordered: false, splitted: false } });

// node_modules/@nextui-org/react/esm/collapse/collapse-icon.js
init_compat_module();
var r7 = ({ ...o14 }) => o(StyledCollapseIcon, { className: "nextui-collapse-icon", fill: "none", focusable: "false", height: "20", role: "presentation", viewBox: "0 0 24 24", width: "20", xmlns: "http://www.w3.org/2000/svg", ...o14, children: o("path", { d: "M15.5 19l-7-7 7-7", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 1.5 }) });
r7.toString = () => ".nextui-collapse-icon";
var s4 = Cn.memo(r7);
var collapse_icon_default = s4;

// node_modules/@nextui-org/react/esm/collapse/collapse.js
var w2 = "nextui-collapse";
var N2 = ({ children: m13, title: N5, subtitle: $2, expanded: g4, shadow: j2, className: E2, divider: I2, arrowIcon: V2, showArrow: y3, disabled: C4, onChange: D3, bordered: k6, contentLeft: A3, preventDefault: F3, animated: S2, borderWeight: W2, index: q3, ...G3 }) => {
  const [L2, P3, z3] = use_current_state_default2(g4), { values: B2, divider: H2, animated: J2, updateValues: K } = useCollapseContext(), { isFocusVisible: M2, focusProps: O3 } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  N5 || warn('"title" is required.', "Collapse"), p(() => {
    L2 !== g4 && P3(g4);
  }, [g4]), p(() => {
    if (!B2.length)
      return;
    const e15 = !!B2.find((e16) => e16 === q3);
    P3(e15);
  }, [B2.join(",")]);
  const Q = $bdb11010cef70236$export$f680877a34711e372(), R3 = $bdb11010cef70236$export$f680877a34711e372(), T3 = F(() => y3 ? V2 || o(collapse_icon_default, {}) : null, [V2, y3]), U2 = void 0 === H2 ? I2 : H2, X = F(() => void 0 === J2 ? S2 : J2, [J2, S2]), Y2 = (e15) => {
    if (C4)
      return;
    const t9 = !z3.current;
    P3(t9), K && K(q3, t9), D3 && D3(e15, q3, t9);
  }, { bindings: Z } = use_keyboard_default2((e15) => {
    Y2(e15);
  }, [KeyCode.Enter, KeyCode.Space], { disableGlobalEvent: true, preventDefault: F3 }), _2 = F(() => L2 ? "open" : "closed", [L2]);
  return o(StyledCollapse, { animated: X, borderWeight: W2, bordered: k6, className: clsx_default(E2, w2, `${w2}--${_2}`), "data-state": _2, divider: U2, shadow: j2, tabIndex: -1, visible: L2, ...G3, children: [o(StyledCollapseView, { "aria-controls": R3, "aria-disabled": C4, "aria-expanded": L2, className: `${w2}-view`, "data-state": _2, disabled: C4, id: Q, isFocusVisible: M2, role: "button", tabIndex: C4 ? -1 : 0, onClick: Y2, ...O3, ...Z, children: o("div", { className: clsx_default(`${w2}-title-container`), children: [A3 && o("div", { className: `${w2}-title-content-left`, children: A3 }), o("div", { className: `${w2}-title-content`, children: [Cn.isValidElement(N5) ? N5 : o("h3", { className: `${w2}-title`, children: N5 }), $2 && o("div", { className: `${w2}-subtitle`, children: $2 })] }), o("div", { className: `${w2}-title-content-right`, children: T3 })] }) }), o(expand_default, { animated: X, isExpanded: L2, children: o(StyledCollapseContent, { "aria-labelledby": Q, className: `${w2}-content`, id: R3, role: "region", tabIndex: -1, children: m13 }) })] });
};
N2.toString = () => ".nextui-collapse";
var collapse_default = with_defaults_default(N2, { shadow: false, divider: true, bordered: false, showArrow: true, animated: true, disabled: false, preventDefault: true, expanded: false });

// node_modules/@nextui-org/react/esm/collapse/collapse-group.js
init_compat_module();
var s5 = ({ children: r14, accordion: e15, animated: s9, divider: u9, onChange: m13, ...d11 }) => {
  const [f5, p7, h4] = use_current_state_default2([]), v4 = (r15, t9) => {
    const o14 = h4.current.find((t10) => t10 === r15);
    if (m13 && m13(r15, t9), e15)
      return p7(t9 ? [r15] : []);
    if (t9) {
      if (o14)
        return;
      return p7([...h4.current, r15]);
    }
    p7(h4.current.filter((t10) => t10 !== r15));
  }, x8 = F(() => ({ values: f5, updateValues: v4, divider: u9, animated: s9 }), [f5.join(",")]), g4 = F(() => setChildrenIndex(r14, [collapse_default]), [r14]);
  return o(CollapseContext.Provider, { value: x8, children: o(StyledCollapseGroup, { ...d11, children: g4 }) });
};
s5.toString = () => ".nextui-collapse-group";
var collapse_group_default = with_defaults_default(s5, { accordion: true });

// node_modules/@nextui-org/react/esm/collapse/index.js
collapse_default.Group = collapse_group_default;
var collapse_default2 = collapse_default;

// node_modules/@nextui-org/react/esm/container/container.js
init_compat_module();

// node_modules/@nextui-org/react/esm/container/container.styles.js
var StyledContainer = styled("div", { w: "100%", mr: "auto", ml: "auto", variants: { fluid: { true: { maxWidth: "100%" } }, responsive: { true: { "@xs": { maxWidth: "$breakpoints$xs" }, "@sm": { maxWidth: "$breakpoints$sm" }, "@md": { maxWidth: "$breakpoints$md" }, "@lg": { maxWidth: "$breakpoints$lg" }, "@xl": { maxWidth: "$breakpoints$xl" } } } }, defaultVariants: { fluid: false, responsive: true } });
var container_styles_default = StyledContainer;

// node_modules/@nextui-org/react/esm/container/container.js
var a6 = Cn.forwardRef((s9, a13) => {
  const { xs: n15, sm: o14, md: l13, lg: p7, xl: m13, wrap: d11, gap: c15, as: f5, display: x8, justify: $2, direction: u9, alignItems: g4, alignContent: y3, children: b6, responsive: k6, fluid: j2, css: v4, ...w3 } = s9, C4 = useDOMRef(a13), h4 = F(() => `calc(${c15} * $space$sm)`, [c15]);
  return o(container_styles_default, { ref: C4, as: f5, css: { px: h4, maxWidth: n15 ? "$breakpoints$xs" : o14 ? "$breakpoints$sm" : l13 ? "$breakpoints$md" : p7 ? "$breakpoints$lg" : m13 ? "$breakpoints$xl" : "", alignItems: g4, alignContent: y3, flexWrap: d11, display: x8, justifyContent: $2, flexDirection: u9, ...v4 }, fluid: j2, responsive: k6, ...w3, children: b6 });
});
a6.displayName = "NextUI.Container", a6.toString = () => ".nextui-container", a6.defaultProps = { gap: 2, xs: false, sm: false, md: false, lg: false, xl: false, responsive: true, fluid: false, wrap: "wrap", as: "div", display: "block" };
var container_default = Cn.memo(a6);

// node_modules/@nextui-org/react/esm/container/index.js
var container_default2 = container_default;

// node_modules/@nextui-org/react/esm/grid/grid.js
init_compat_module();

// node_modules/@nextui-org/react/esm/grid/grid-item.js
init_compat_module();

// node_modules/@nextui-org/react/esm/grid/grid.styles.js
var StyledGridContainer = styled("div", {});
var StyledGridItem = styled("div", { margin: 0, boxSizing: "border-box", padding: "$$gridGapUnit" });

// node_modules/@nextui-org/react/esm/grid/grid-item.js
var l5 = (t9) => {
  const s9 = 0 === t9 ? "none" : "inherit";
  if ("number" == typeof t9) {
    const e15 = 100 / 12 * t9, i13 = e15 > 100 ? "100%" : e15 < 0 ? "0" : `${e15}%`;
    return { flexGrow: 0, display: s9, maxWidth: i13, flexBasis: i13 };
  }
  return { flexGrow: 1, display: s9, maxWidth: "100%", flexBasis: "0" };
};
var n7 = Cn.forwardRef(({ xs: t9, sm: i13, md: n15, lg: o14, xl: x8, css: a13, justify: d11, direction: c15, alignItems: f5, alignContent: u9, children: g4, className: p7, ...y3 }, h4) => {
  const j2 = F(() => {
    const s9 = { xs: t9, sm: i13, md: n15, lg: o14, xl: x8 };
    return Object.keys(s9).reduce((t10, e15) => void 0 !== s9[e15] && false !== s9[e15] ? `${t10} ${e15}` : t10, "").trim();
  }, [t9, i13, n15, o14, x8]);
  return o(StyledGridItem, { ref: h4, className: clsx_default("nextui-grid-item", j2, p7), css: { alignItems: f5, alignContent: u9, justifyContent: d11, flexDirection: c15, "&.xs": { ...l5(t9) }, "@xsMax": { "&.xs": { ...l5(t9) } }, "@sm": { "&.sm": { ...l5(i13) } }, "@md": { "&.md": { ...l5(n15) } }, "@lg": { "&.lg": { ...l5(o14) } }, "@xl": { "&.xl": { ...l5(x8) } }, ...a13 }, ...y3, children: g4 });
});
n7.displayName = "NextUI.GridItem", n7.toString = () => ".nextui-grid-item";
var grid_item_default = with_defaults_default(n7, { xs: false, sm: false, md: false, lg: false, xl: false, className: "" });

// node_modules/@nextui-org/react/esm/grid/grid.js
var i5 = Cn.forwardRef(({ children: r14, css: i13, ...o14 }, m13) => o(grid_item_default, { ref: m13, css: i13, ...o14, children: r14 }));
i5.displayName = "NextUI.Grid", i5.toString = () => ".nextui-grid";
var grid_default = i5;

// node_modules/@nextui-org/react/esm/grid/grid-container.js
init_compat_module();
var c4 = Cn.forwardRef(({ gap: r14, wrap: t9, css: c15, children: o14, className: n15, ...p7 }, l13) => {
  const m13 = F(() => `calc(${r14} * $space$3)`, [r14]);
  return o(grid_item_default, { ref: l13, className: clsx_default("nextui-grid-container", n15), css: { $$gridGapUnit: m13, display: "flex", flexWrap: t9, boxSizing: "border-box", margin: "calc(-1 * $$gridGapUnit)", width: "calc(100% + $$gridGapUnit * 2)", ...c15 }, ...p7, children: o14 });
});
c4.displayName = "NextUI.GridContainer", c4.toString = () => ".nextui-grid-container";
var grid_container_default = with_defaults_default(c4, { gap: 0, wrap: "wrap", className: "" });

// node_modules/@nextui-org/react/esm/grid/index.js
grid_default.Container = grid_container_default;
var grid_default2 = grid_default;

// node_modules/@nextui-org/react/esm/spacer/spacer.js
init_compat_module();

// node_modules/@nextui-org/react/esm/spacer/spacer.styles.js
var StyledSpacer = styled("span", { size: "1px", variants: { inline: { true: { display: "inline-block" }, false: { display: "block" } } }, defaultVariants: { inline: false } });

// node_modules/@nextui-org/react/esm/spacer/spacer.js
var m5 = ({ x: t9, y: r14, css: m13, ...e15 }) => {
  const n15 = getMargin(t9), a13 = getMargin(r14);
  return o(StyledSpacer, { "aria-hidden": "true", css: { marginLeft: `${n15} !important`, marginTop: `${a13} !important`, ...m13 }, ...e15 });
};
m5.toString = () => ".nextui-spacer";
var e6 = Cn.memo(m5);
var spacer_default = with_defaults_default(e6, { x: 1, y: 1 });

// node_modules/@nextui-org/react/esm/spacer/index.js
var spacer_default2 = spacer_default;

// node_modules/@nextui-org/react/esm/snippet/snippet.js
init_compat_module();

// node_modules/@nextui-org/react/esm/tooltip/tooltip.js
init_compat_module();

// node_modules/@nextui-org/react/esm/tooltip/tooltip-content.js
init_compat_module();
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/css-transition.js
init_compat_module();
var c5 = ({ children: c15, onExited: i13, onEntered: s9, className: a13, childrenRef: m13, enterTime: o14 = 60, leaveTime: u9 = 60, clearTime: T3 = 60, visible: d11 = false, name: p7 = "transition", ...f5 }) => {
  const [$2, v4] = h(""), [N5, E2] = h(d11);
  return y(() => {
    const e15 = d11 ? "enter" : "leave";
    d11 && !N5 && E2(true), v4(`${p7}-${e15}`);
    const t9 = d11 ? o14 : u9, l13 = setTimeout(() => {
      v4(`${p7}-${e15} ${p7}-${e15}-active`), "leave" === e15 ? null == i13 || i13() : null == s9 || s9(), clearTimeout(l13);
    }, t9), r14 = setTimeout(() => {
      d11 || (v4(""), E2(false)), clearTimeout(r14);
    }, t9 + T3);
    return () => {
      clearTimeout(l13), clearTimeout(r14);
    };
  }, [d11, N5]), p(() => {
    if (null == m13 || !m13.current)
      return;
    const e15 = $2.split(" "), t9 = m13.current.className.split(" ").filter((e16) => !e16.includes(p7));
    m13.current.className = clsx_default(t9, e15);
  }, [m13, $2]), Cn.isValidElement(c15) && N5 ? Cn.cloneElement(c15, { ...f5, className: clsx_default(c15.props.className, a13, !(null != m13 && m13.current) && $2) }) : null;
};
var css_transition_default = Cn.memo(c5);

// node_modules/@nextui-org/react/esm/tooltip/tooltip.styles.js
var StyledTooltipTrigger = styled("div", { width: "max-content", display: "inherit" });
var StyledTooltipArrow = styled("span", { display: "none", content: "", size: "$5", zIndex: "-2", background: "$$tooltipColor", br: "0px 0px 2px 0px", position: "absolute" });
var StyledTooltip = styled("div", { position: "relative", fs: "$sm", padding: 0, variants: { hideArrow: { false: { [`& ${StyledTooltipArrow}`]: { display: "block" } } } } });
var StyledTooltipContent = styled("div", { position: "absolute", width: "auto", padding: "$3 $sm", opacity: 0, zIndex: "$10", br: "$lg", "@motion": { transition: "none" }, variants: { color: { default: { $$tooltipColor: "$colors$background", bg: "$$tooltipColor" }, primary: { $$tooltipColor: "$colors$primary", bg: "$$tooltipColor" }, secondary: { $$tooltipColor: "$colors$secondary", bg: "$$tooltipColor" }, success: { $$tooltipColor: "$colors$success", bg: "$$tooltipColor" }, warning: { $$tooltipColor: "$colors$warning", bg: "$$tooltipColor" }, error: { $$tooltipColor: "$colors$error", bg: "$$tooltipColor" }, invert: { $$tooltipColor: "$colors$foreground", bg: "$$tooltipColor" } }, contentColor: { default: { $$tooltipTextColor: "$colors$text", color: "$$tooltipTextColor" }, primary: { $$tooltipTextColor: "$colors$primary", color: "$$tooltipTextColor" }, secondary: { $$tooltipTextColor: "$colors$secondary", color: "$$tooltipTextColor" }, success: { $$tooltipTextColor: "$colors$success", color: "$$tooltipTextColor" }, warning: { $$tooltipTextColor: "$colors$warning", color: "$$tooltipTextColor" }, error: { $$tooltipTextColor: "$colors$error", color: "$$tooltipTextColor" }, invert: { $$tooltipTextColor: "$colors$invert", color: "$$tooltipTextColor" } }, rounded: { true: { br: "$pill" } }, shadow: { true: { bs: "$md" } }, animated: { true: { transition: "opacity 0.25s ease 0s, top 0.25s ease 0s" }, false: { transition: "none" } } }, compoundVariants: [{ color: "primary", contentColor: "default", css: { $$tooltipTextColor: "$colors$white" } }, { color: "secondary", contentColor: "default", css: { $$tooltipTextColor: "$colors$white" } }, { color: "success", contentColor: "default", css: { $$tooltipTextColor: "$colors$white" } }, { color: "error", contentColor: "default", css: { $$tooltipTextColor: "$colors$white" } }, { color: "invert", contentColor: "default", css: { $$tooltipTextColor: "$colors$background" } }], defaultVariants: { color: "default", contentColor: "default" } });

// node_modules/@nextui-org/react/esm/tooltip/placement.js
var t4 = { top: -1e3, left: -1e3, right: -1e3, bottom: -1e3, width: 0, height: 0 };
var getRect = (o14) => {
  if (!o14 || !o14.current)
    return t4;
  const e15 = o14.current.getBoundingClientRect();
  return { ...e15, width: e15.width || e15.right - e15.left, height: e15.height || e15.bottom - e15.top, top: e15.top + document.documentElement.scrollTop, bottom: e15.bottom + document.documentElement.scrollTop, left: e15.left + document.documentElement.scrollLeft, right: e15.right + document.documentElement.scrollLeft };
};
var defaultTooltipPlacement = { top: "-1000px", left: "-1000px", transform: "none" };
var getPlacement = (t9, o14, e15) => {
  const r14 = { top: { top: o14.top - e15 + "px", left: `${o14.left + o14.width / 2}px`, transform: "translate(-50%, -100%)" }, topStart: { top: o14.top - e15 + "px", left: `${o14.left}px`, transform: "translate(0, -100%)" }, topEnd: { top: o14.top - e15 + "px", left: `${o14.left + o14.width}px`, transform: "translate(-100%, -100%)" }, bottom: { top: `${o14.bottom + e15}px`, left: `${o14.left + o14.width / 2}px`, transform: "translate(-50%, 0)" }, bottomStart: { top: `${o14.bottom + e15}px`, left: `${o14.left}px`, transform: "translate(0, 0)" }, bottomEnd: { top: `${o14.bottom + e15}px`, left: `${o14.left + o14.width}px`, transform: "translate(-100%, 0)" }, left: { top: `${o14.top + o14.height / 2}px`, left: o14.left - e15 + "px", transform: "translate(-100%, -50%)" }, leftStart: { top: `${o14.top}px`, left: o14.left - e15 + "px", transform: "translate(-100%, 0)" }, leftEnd: { top: `${o14.top + o14.height}px`, left: o14.left - e15 + "px", transform: "translate(-100%, -100%)" }, right: { top: `${o14.top + o14.height / 2}px`, left: `${o14.right + e15}px`, transform: "translate(0, -50%)" }, rightStart: { top: `${o14.top}px`, left: `${o14.right + e15}px`, transform: "translate(0, 0)" }, rightEnd: { top: `${o14.top + o14.height}px`, left: `${o14.right + e15}px`, transform: "translate(0, -100%)" } };
  return r14[t9] || r14.top;
};
var getIconPlacement = (t9, o14) => {
  const e15 = { top: { top: "auto", right: "auto", left: "50%", bottom: "0px", transform: "translate(-50%, 100%) rotate(45deg)" }, topStart: { top: "auto", right: "auto", left: "8%", bottom: "0px", transform: "translate(8%, 100%) rotate(45deg)" }, topEnd: { top: "auto", right: "8%", left: "auto", bottom: "0px", transform: "translate(8%, 100%) rotate(45deg)" }, bottom: { top: "0px", right: "auto", left: "50%", bottom: "auto", transform: "translate(-50%, -100%) rotate(225deg)" }, bottomStart: { top: "0px", right: "auto", left: "8%", bottom: "auto", transform: "translate(8%, -100%) rotate(225deg)" }, bottomEnd: { top: "0px", right: "8%", left: "auto", bottom: "auto", transform: "translate(8%, -100%) rotate(225deg)" }, left: { top: "50%", right: `-${o14 - 1}px`, left: "auto", bottom: "auto", transform: "translate(100%, -50%) rotate(-45deg)" }, leftStart: { top: "calc(15% + 1px)", right: `-${o14 - 1}px`, left: "auto", bottom: "auto", transform: "translate(100%, 0) rotate(-45deg)" }, leftEnd: { top: "auto", right: `-${o14 - 1}px`, left: "auto", bottom: "calc(15% + 1px)", transform: "translate(100%, 0) rotate(-45deg)" }, right: { top: "50%", right: "auto", left: `-${o14 - 1}px`, bottom: "auto", transform: "translate(-100%, -50%) rotate(135deg)" }, rightStart: { top: "calc(15% + 1px)", right: "auto", left: `-${o14 - 1}px`, bottom: "auto", transform: "translate(-100%, 0) rotate(135deg)" }, rightEnd: { top: "auto", right: "auto", left: `-${o14 - 1}px`, bottom: "calc(15% + 1px)", transform: "translate(-100%, 0) rotate(135deg)" } };
  return e15[t9] || e15.top;
};

// node_modules/@nextui-org/react/esm/tooltip/tooltip-content.js
var N3 = "nextui-tooltip";
var b2 = ({ children: t9, parent: c15, visible: b6, offset: j2, placement: y3, rounded: k6, animated: A3, className: P3, hideArrow: T3, css: z3, ...C4 }) => {
  const E2 = use_portal_default2("tooltip"), I2 = _(null), [S2, q3] = h(defaultTooltipPlacement);
  if (!c15)
    return null;
  const B2 = () => {
    const t10 = getPlacement(y3, getRect(c15), j2);
    q3(t10);
  }, { transform: D3, top: F3, left: G3, right: H2, bottom: J2 } = F(() => getIconPlacement(y3, 5), [y3]);
  use_resize_default2(B2), use_click_anywhere_default2(() => B2()), p(() => {
    B2();
  }, [b6]);
  const K = F(() => b6 ? "open" : "closed", [b6]);
  return E2 ? z(o(css_transition_default, { enterTime: 20, leaveTime: 20, name: `${N3}-wrapper`, visible: b6, children: o(StyledTooltipContent, { ref: I2, animated: A3, className: clsx_default(`${N3}-content`, `${N3}--${K}`, P3), css: { left: S2.left, top: `calc(${S2.top} + 6px)`, transform: S2.transform, [`&.${N3}-wrapper-enter-active`]: { opacity: 1, top: S2.top }, ...z3 }, "data-state": K, onClick: (t10) => {
    t10.stopPropagation(), t10.nativeEvent.stopImmediatePropagation();
  }, ...C4, children: o(StyledTooltip, { className: clsx_default(N3, { [`${N3}--with-arrow`]: !T3 }), "data-state": K, hideArrow: T3, role: "tooltip", children: [o(StyledTooltipArrow, { className: `${N3}-arrow`, css: { left: G3, top: F3, right: H2, bottom: J2, transform: D3 } }), t9] }) }) }), E2) : null;
};
b2.toString = () => ".nextui-tooltip-content";
var tooltip_content_default = with_defaults_default(b2, { placement: "top", offset: 12, className: "" });

// node_modules/@nextui-org/react/esm/tooltip/tooltip.js
var m6 = ({ children: e15, initialVisible: r14, content: m13, offset: u9, placement: d11, portalClassName: p7, enterDelay: f5, leaveDelay: h4, trigger: w3, rounded: b6, animated: C4, shadow: g4, className: v4, color: x8, contentColor: k6, onVisibleChange: y3, hideArrow: D3, css: N5, triggerCss: j2, onClick: M2, keepMounted: V2, visible: A3, isDisabled: T3, ...B2 }) => {
  const E2 = _(), F3 = _(null), [I2, K] = h(r14), L2 = { animated: C4, visible: I2, css: N5, shadow: g4, offset: u9, placement: d11, rounded: b6, color: x8, contentColor: k6, hideArrow: D3, parent: F3, className: p7 }, S2 = (e16) => {
    const o14 = () => {
      clearTimeout(E2.current), E2.current = void 0;
    }, t9 = (e17) => {
      K(e17), y3(e17), o14();
    };
    o14(), E2.current = e16 ? window.setTimeout(() => t9(true), f5) : window.setTimeout(() => t9(false), h4);
  }, U2 = (e16) => {
    "hover" === w3 && S2(e16);
  };
  return use_click_away_default2(F3, () => "click" === w3 && !V2 && S2(false)), p(() => {
    void 0 !== A3 && S2(A3);
  }, [A3]), o(StyledTooltipTrigger, { ref: F3, className: `nextui-tooltip-button ${v4}`, css: j2, role: "button", tabIndex: -1, onBlur: () => U2(false), onClickCapture: () => {
    "click" === w3 && S2(!I2), null == M2 || M2();
  }, onFocus: () => U2(true), onKeyUp: () => U2(true), onMouseEnter: () => U2(true), onMouseLeave: () => U2(false), ...B2, children: [e15, m13 && !T3 ? o(tooltip_content_default, { ...L2, children: m13 }) : null] });
};
m6.toString = () => ".nextui-tooltip";
var tooltip_default = with_defaults_default(m6, { initialVisible: false, hideArrow: false, animated: true, shadow: true, rounded: false, keepMounted: false, isDisabled: false, trigger: "hover", enterDelay: 0, leaveDelay: 0, className: "", portalClassName: "", onVisibleChange: () => {
} });

// node_modules/@nextui-org/react/esm/tooltip/index.js
var tooltip_default2 = tooltip_default;

// node_modules/@nextui-org/react/esm/snippet/snippet-icon.js
init_compat_module();

// node_modules/@nextui-org/react/esm/snippet/snippet.styles.js
var StyledSnippet = styled("div", { display: "flex", position: "relative", width: "initial", maxWidth: "100%", padding: "calc($space$lg * 0.75) $space$lg", br: "$lg", bg: "$background", variants: { color: { default: { $$snippetBorderColor: "$border", $$snippetBgColor: "$background", color: "$text" }, primary: { $$snippetBorderColor: "$border", $$snippetBgColor: "$primary", color: "$text" }, success: { $$snippetBorderColor: "$success", $$snippetBgColor: "$background", color: "$success" }, warning: { $$snippetBorderColor: "$warning", $$snippetBgColor: "$background", color: "$warning" }, error: { $$snippetBorderColor: "$error", $$snippetBgColor: "$background", color: "$error" }, secondary: { $$snippetBorderColor: "$secondary", $$snippetBgColor: "$background", color: "$secondary" }, invert: { $$snippetBorderColor: "$foreground", $$snippetBgColor: "$foreground", color: "$background" } }, borderWeight: { light: { $$borderWeight: "$light" }, normal: { $$borderWeight: "$normal" }, bold: { $$borderWeight: "$bold" }, extrabold: { $$borderWeight: "$extrabold" }, black: { $$borderWeight: "$black" } }, bordered: { true: { border: "$$borderWeight solid $$snippetBorderColor" } }, filled: { true: { backgroundColor: "$$snippetBgColor" } } }, defaultVariants: { color: "default", borderWeight: "normal", filled: false } });
var StyledSnippetPre = styled("pre", { margin: 0, padding: 0, border: "none", br: 0, bgColor: "transparent", color: "inherit", fontSize: "$sm", "*": { margin: 0, padding: 0, fontSize: "inherit", color: "inherit" }, variants: { withCopyButton: { true: { width: "calc(100% - 2 * $lg)" }, false: { width: "100%" } } } });
var StyledSnippetCopyButtonIcon = styled("svg", {});
var StyledSnippetCopyButton = styled("button", { display: "inline-flex", jc: "center", border: "none", ai: "flex-start", bg: "transparent", width: "calc(2 * $space$lg)", br: "$xs", color: "inherit", transition: "opacity 0.2s ease 0s", cursor: "pointer", us: "none", "@motion": { transition: "none" }, "&:hover": { opacity: "0.7" }, [`& ${StyledSnippetCopyButtonIcon}`]: { path: { fill: "$accents6" } } }, sharedFocus);

// node_modules/@nextui-org/react/esm/snippet/snippet-icon.js
var o7 = ({ size: t9, fill: i13, width: o14, height: r14, ...s9 }) => o(StyledSnippetCopyButtonIcon, { height: t9 || r14, viewBox: "0 0 24 24", width: t9 || o14, xmlns: "http://www.w3.org/2000/svg", ...s9, children: o("path", { d: "M20 2H10c-1.103 0-2 .897-2 2v4H4c-1.103 0-2 .897-2 2v10c0 1.103.897 2 2 2h10c1.103 0 2-.897 2-2v-4h4c1.103 0 2-.897 2-2V4c0-1.103-.897-2-2-2zM4 20V10h10l.002 10H4zm16-6h-4v-4c0-1.103-.897-2-2-2h-4V4h10v10z", fill: i13 }) });
o7.toString = () => ".nextui-snippet-copy-icon";
var r8 = x(o7);
var snippet_icon_default = with_defaults_default(r8, { width: 18, height: 18 });

// node_modules/@nextui-org/react/esm/snippet/snippet.js
var x3 = ({ bordered: t9, children: n15, symbol: s9, showTooltip: x8, text: f5, tooltipCopyText: y3, tooltipCopiedText: h4, tooltipColor: C4, copy: b6, ...T3 }) => {
  const [N5, $2] = h(false), { copy: j2 } = use_clipboard_default2(), w3 = _(null), A3 = f5 && Array.isArray(f5), g4 = F(() => "prevent" !== b6, [b6]), k6 = F(() => A3 ? ((t10) => t10.reduce((t11, o14) => o14 ? t11 ? `${t11}
${o14}` : o14 : t11, ""))(f5) : n15 ? w3.current ? w3.current.textContent : "" : f5, [w3.current, n15, f5]), v4 = F(() => {
    const t10 = s9.trim();
    return t10 ? `${t10} ` : "";
  }, [s9]), S2 = () => {
    k6 && g4 && (j2(k6), "slient" !== b6 && $2(true));
  };
  return o(StyledSnippet, { ...T3, children: [A3 ? f5.map((t10, o14) => o(StyledSnippetPre, { className: "nextui-snippet-pre", css: { "&:before": { content: v4, us: "none" } }, children: t10 }, `${o14}-${t10}`)) : o(StyledSnippetPre, { ref: w3, className: "nextui-snippet-pre", css: { "&:before": { content: v4, us: "none" } }, children: n15 || f5 }), g4 && "slient" !== b6 ? o(tooltip_default2, { hideArrow: true, rounded: true, color: C4, content: N5 ? h4 : y3, onVisibleChange: () => {
    setTimeout(() => {
      N5 && $2(false);
    }, 400);
  }, children: o(StyledSnippetCopyButton, { className: "nextui-snippet-copy-button", onClick: S2, children: o(snippet_icon_default, {}) }) }) : "prevent" !== b6 && o(StyledSnippetCopyButton, { className: "nextui-snippet-copy-button", onClick: S2, children: o(snippet_icon_default, {}) })] });
};
__DEV__ && (x3.displayName = "NextUI.Snippet"), x3.toString = () => ".nextui-snippet";
var f2 = Cn.memo(x3);
var snippet_default = with_defaults_default(f2, { symbol: "$", showTooltip: true, copy: "default", tooltipColor: "default", tooltipCopyText: "Copy", tooltipCopiedText: "Copied" });

// node_modules/@nextui-org/react/esm/snippet/index.js
var snippet_default2 = snippet_default;

// node_modules/@nextui-org/react/esm/row/row.js
init_compat_module();

// node_modules/@nextui-org/react/esm/row/row.styles.js
var StyledRow = styled("div", { display: "flex", position: "relative", boxSizing: "border-box", variants: { fluid: { true: { width: "100%" } } }, defaultVariants: { fluid: true } });
var row_styles_default = StyledRow;

// node_modules/@nextui-org/react/esm/row/row.js
var e7 = ({ children: t9, gap: r14, justify: e15, align: i13, wrap: l13, css: o14, ...c15 }) => o(row_styles_default, { css: { flexWrap: l13, $$rowGap: `calc(${r14} * $space$lg)`, marginLeft: `calc(${r14} * $space$lg / 2)`, marginRight: `calc(${r14} * $space$lg / 2)`, justifyContent: e15, alignItems: i13, ...o14 }, ...c15, children: t9 });
e7.toString = () => ".nextui-row";
var i6 = Cn.memo(e7);
var row_default = with_defaults_default(i6, { gap: 0, wrap: "nowrap", justify: "flex-start", align: "flex-start" });

// node_modules/@nextui-org/react/esm/row/index.js
var row_default2 = row_default;

// node_modules/@nextui-org/react/esm/link/link.js
init_compat_module();

// node_modules/@react-aria/link/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/link/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext5 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext5 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext5);
var $704cf1d3b684cc5c$var$canUseDOM5 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/@react-aria/link/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c5 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap5 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$cd8c9cb68f8426295(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap5.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap5.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e5(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe9285(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e5)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f8426295)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
var $65484d02dcb7eb3e$var$DOMPropNames4 = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames4 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe4 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f4(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames4.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames4.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe4.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f35(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll5())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements5(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition5(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached5 = null;
function $7215afc6de606d6b$var$supportsPreventScroll5() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached5 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached5 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached5 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached5;
}
function $7215afc6de606d6b$var$getScrollableElements5(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition5(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement5 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks5 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents5() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement5.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement5.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement5.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement5.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement5.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks5)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks5.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents5();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents5);
}
function $bbed8b41f857bcc0$export$24490316f764c4305(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement5.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks5.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed65() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e5(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c5)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
var $5df64b3807dc15ee$var$visualViewport5 = typeof window !== "undefined" && window.visualViewport;
function $c87311424ea30a05$var$testUserAgent5(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform5(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea105() {
  return $c87311424ea30a05$var$testPlatform5(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d995() {
  return $c87311424ea30a05$var$testPlatform5(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e42245() {
  return $c87311424ea30a05$var$testPlatform5(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea105() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f15() {
  return $c87311424ea30a05$export$186c6964ca17d995() || $c87311424ea30a05$export$7bef049ce92e42245();
}
function $c87311424ea30a05$export$a11b0059900ceec85() {
  return $c87311424ea30a05$var$testUserAgent5(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de5(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec85)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf635(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/link/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/link/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state5 = "default";
var $14c0b72509d70225$var$savedUserSelect5 = "";
var $14c0b72509d70225$var$modifiedElementMap5 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754875(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f15)()) {
    if ($14c0b72509d70225$var$state5 === "default") {
      $14c0b72509d70225$var$savedUserSelect5 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state5 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap5.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32955(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f15)()) {
    if ($14c0b72509d70225$var$state5 !== "disabled")
      return;
    $14c0b72509d70225$var$state5 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c4305)(() => {
        if ($14c0b72509d70225$var$state5 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect5 || "";
          $14c0b72509d70225$var$savedUserSelect5 = "";
          $14c0b72509d70225$var$state5 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap5.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap5.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap5.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb55 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb55.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext5(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb55));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe9285)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e5)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad215(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext5(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed65)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent5(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32955)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent5(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard5(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink5(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent5(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent5(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de5)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f35)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent5(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard5(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent5(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink5(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf635)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault5(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f35)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a46974671754875)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault5(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget5(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget5(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent5(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent5(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget5(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent5(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent5(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e32955)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault5(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de5)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f35)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget5(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent5(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent5(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent5(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f35)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a46974671754875)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById5(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget5(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById5(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget5(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32955)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e32955)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9285)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink5(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent5(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey5(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink5(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent5(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById5(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent5(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect5(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping5(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget5(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect5(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping5(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault5(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard5(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey5(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes5 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey5(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes5.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e995 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad215)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe9285)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b85 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb55));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe9285)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e5)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb55).Provider, {
    value: context
  }, children);
});
var $8a9cb279dc87e130$export$905e7fc544a71f365 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc5(onBlur) {
  let stateRef = (0, _)({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c5)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return (0, T)((e15) => {
    if (e15.target instanceof HTMLButtonElement || e15.target instanceof HTMLInputElement || e15.target instanceof HTMLTextAreaElement || e15.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e15.target;
      let onBlurHandler = (e16) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f365("blur", e16));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e65(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, T)((e15) => {
    if (e15.target === e15.currentTarget) {
      if (onBlurProp)
        onBlurProp(e15);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc5)(onBlur);
  const onFocus = (0, T)((e15) => {
    if (e15.target === e15.currentTarget && document.activeElement === e15.target) {
      if (onFocusProp)
        onFocusProp(e15);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e15);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
var $507fabe10e71c6fb$var$currentModality5 = null;
var $507fabe10e71c6fb$var$changeHandlers5 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners5 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus5 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently5 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers5(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers5)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey5(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea105)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent5(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus5 = true;
  if ($507fabe10e71c6fb$var$isValidKey5(e15)) {
    $507fabe10e71c6fb$var$currentModality5 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers5("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent5(e15) {
  $507fabe10e71c6fb$var$currentModality5 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus5 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers5("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent5(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de5)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus5 = true;
    $507fabe10e71c6fb$var$currentModality5 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent5(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus5 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently5) {
    $507fabe10e71c6fb$var$currentModality5 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers5("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus5 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently5 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur5() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus5 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently5 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents5() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners5)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus5 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent5, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent5, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent5, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent5, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur5, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent5, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent5, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent5, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent5, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent5, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent5, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners5 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents5();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents5);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a95() {
  return $507fabe10e71c6fb$var$currentModality5;
}
function $93925083ecbb358c$export$48d1ea63208302603(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e15) => {
    let event = {
      ...e15,
      preventDefault() {
        e15.preventDefault();
      },
      isDefaultPrevented() {
        return e15.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e15.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd5(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea63208302603)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea63208302603)(props.onKeyUp)
    }
  };
}

// node_modules/@react-aria/link/node_modules/@react-aria/focus/dist/import.mjs
function $6a99195332edec8b$export$80f3e147d781571c4(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a95)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c4305)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f35)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f35)(element);
}
var $9bf71ea28793e738$var$FocusContext5 = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements5 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR5 = $9bf71ea28793e738$var$focusableElements5.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements5.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR5 = $9bf71ea28793e738$var$focusableElements5.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope5(element, scope) {
  return scope.some((node) => node.contains(element));
}
var $9bf71ea28793e738$var$Tree4 = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode4({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope5(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree4();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode4({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode4 = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e4 = new $9bf71ea28793e738$var$Tree4();
var $e6afbd83fe6ebbd2$var$FocusableContext5 = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext3(ref) {
  let context = (0, q)($e6afbd83fe6ebbd2$var$FocusableContext5) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e5)(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$var$FocusableProvider5(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext5.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd55 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider5);
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c3(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e65)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd5)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe9285)(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext3(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, _)(props.autoFocus);
  (0, p)(() => {
    if (autoFocusRef.current && domRef.current)
      (0, $6a99195332edec8b$export$80f3e147d781571c4)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9285)({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}

// node_modules/@react-aria/link/dist/module.js
function $298d61e98472621b$export$dcf14c9974fe2767(props, ref) {
  let {
    elementType = "a",
    onPress,
    onPressStart,
    onPressEnd,
    // @ts-ignore
    onClick: deprecatedOnClick,
    isDisabled,
    ...otherProps
  } = props;
  let linkProps;
  if (elementType !== "a")
    linkProps = {
      role: "link",
      tabIndex: !isDisabled ? 0 : void 0
    };
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c3(props, ref);
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad215({
    onPress,
    onPressStart,
    onPressEnd,
    isDisabled,
    ref
  });
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f4(otherProps, {
    labelable: true
  });
  let interactionHandlers = $3ef42575df84b30b$export$9d1611c77c2fe9285(focusableProps, pressProps);
  return {
    isPressed,
    linkProps: $3ef42575df84b30b$export$9d1611c77c2fe9285(domProps, {
      ...interactionHandlers,
      ...linkProps,
      "aria-disabled": isDisabled || void 0,
      onClick: (e15) => {
        pressProps.onClick(e15);
        if (deprecatedOnClick) {
          deprecatedOnClick(e15);
          console.warn("onClick is deprecated, please use onPress");
        }
      }
    })
  };
}

// node_modules/@nextui-org/react/esm/link/icon.js
init_compat_module();

// node_modules/@nextui-org/react/esm/link/link.styles.js
var StyledLinkIcon = styled("svg", { ml: "$1", as: "center", display: "flex", color: "currentColor" });
var StyledLink = styled("a", { $$linkColor: "$colors$link", display: "inline-flex", alignItems: "center", lineHeight: "inherit", textDecoration: "none", width: "$fit", backgroundColor: "transparent", backgroundImage: "inherit", backgroundClip: "inherit", WebkitTextFillColor: "inherit", color: "$$linkColor", outline: "none", maxW: "$max", "&:hover": { opacity: 0.8 }, "@motion": { transition: "none" }, variants: { color: { inherit: { $$linkColor: "inherit" }, default: { $$linkColor: "$colors$link" }, text: { $$linkColor: "$colors$text" }, primary: { $$linkColor: "$colors$primary" }, secondary: { $$linkColor: "$colors$secondary" }, success: { $$linkColor: "$colors$success" }, warning: { $$linkColor: "$colors$warning" }, error: { $$linkColor: "$colors$error" } }, underline: { true: { "&:hover, &:active, &:focus": { textDecoration: "underline" } } }, block: { true: { padding: "$2 $4", borderRadius: "$base", "&:hover": { backgroundColor: "$$linkBackgroundColor" } } }, animated: { true: { transition: "opacity 0.25s ease 0s, box-shadow 0.25s ease 0s" } } }, compoundVariants: [{ block: true, animated: true, css: { transition: "opacity 0.25s ease 0s, box-shadow 0.25s ease 0s, background 0.25s ease 0s", "@motion": { transition: "none" } } }], defaultVariants: { color: "default", animated: true } }, cssFocusVisible);
var link_styles_default = StyledLink;

// node_modules/@nextui-org/react/esm/link/icon.js
var LinkIcon = () => o(StyledLinkIcon, { className: "nextui-link-icon", fill: "none", height: "1em", shapeRendering: "geometricPrecision", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "1.5", viewBox: "0 0 24 24", width: "1em", children: [o("path", { d: "M18 13v6a2 2 0 01-2 2H5a2 2 0 01-2-2V8a2 2 0 012-2h6" }), o("path", { d: "M15 3h6v6" }), o("path", { d: "M10 14L21 3" })] });
LinkIcon.toString = () => ".nextui-link-icon";
var icon_default = Cn.memo(LinkIcon);

// node_modules/@nextui-org/react/esm/link/link.js
var x4 = forwardRef((r14, e15) => {
  const { children: c15, isExternal: x8 = false, as: k6, css: d11, color: $2 = "default", autoFocus: h4, className: g4, ...j2 } = r14, F3 = useDOMRef(e15), { linkProps: y3 } = $298d61e98472621b$export$dcf14c9974fe2767({ ...j2, elementType: k6 }, F3), { isFocusVisible: L2, focusProps: N5 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: h4 }), b6 = F(() => {
    let r15 = `$colors$${$2}Light`;
    switch ($2) {
      case "inherit":
      case "text":
        r15 = "$colors$textLight";
        break;
      case "default":
        r15 = "$colors$linkLight";
    }
    return { ...d11, $$linkBackgroundColor: r15 };
  }, [d11, $2]);
  return o(link_styles_default, { ref: F3, as: k6, className: clsx_default("nextui-link", g4), color: $2, css: b6, isFocusVisible: L2, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(y3, N5, j2), children: o(k, { children: [c15, x8 && o(icon_default, {})] }) });
});
__DEV__ && (x4.displayName = "NextUI.Link"), x4.toString = () => ".nextui-link";
var link_default = x4;

// node_modules/@nextui-org/react/esm/link/index.js
var link_default2 = link_default;

// node_modules/@nextui-org/react/esm/loading/loading.js
init_compat_module();

// node_modules/@nextui-org/react/esm/loading/loading.styles.js
var a7 = keyframes({ "0%": { opacity: "0.2" }, "20%": { opacity: 1 }, "100%": { opacity: "0.2" } });
var e8 = keyframes({ "0%": { transform: "rotate(0deg)" }, "100%": { transform: "rotate(360deg)" } });
var n8 = keyframes({ "0%": { transform: "translate(0px, 0px)" }, "50%": { transform: "translate(0, calc(-$$loadingSize * 1.4))" }, "100%": { transform: "translate(0px, 0px)" } });
var t5 = keyframes({ "0%": { opacity: 1 }, "100%": { opacity: 0.15 } });
var StyledLoadingContainer = styled("div", { d: "inline-flex", fd: "column", ai: "center", position: "relative", variants: { color: { currentColor: { $$loadingColor: "currentColor" }, white: { $$loadingColor: "$colors$white" }, default: { $$loadingColor: "$colors$primary" }, primary: { $$loadingColor: "$colors$primary" }, secondary: { $$loadingColor: "$colors$secondary" }, success: { $$loadingColor: "$colors$success" }, warning: { $$loadingColor: "$colors$warning" }, error: { $$loadingColor: "$colors$error" } }, textColor: { white: { $$loadingTextColor: "$colors$white" }, default: { $$loadingTextColor: "$colors$text" }, primary: { $$loadingTextColor: "$colors$primary" }, secondary: { $$loadingTextColor: "$colors$secondary" }, success: { $$loadingTextColor: "$colors$success" }, warning: { $$loadingTextColor: "$colors$warning" }, error: { $$loadingTextColor: "$colors$error" } } }, defaultVariants: { color: "default", textColor: "default" } });
var StyledSpinnerContainer = styled("div", { size: "100%", position: "relative", left: "50%", top: "50%" });
var StyledSpinner = styled("div", { d: "flex", fd: "column", jc: "center", ai: "center", position: "relative", variants: { size: { xs: { size: "$6" }, sm: { size: "$8" }, md: { size: "$9" }, lg: { size: "$11" }, xl: { size: "$12" } } } });
var StyledSpinnerSpan = styled("span", { bg: "$$loadingColor", position: "absolute", top: "-3.9%", width: "24%", height: "8%", left: "-10%", br: "$lg", animation: `${t5} 1.2s linear 0s infinite normal none running`, "&:nth-child(1)": { animationDelay: "-1.2s", transform: "rotate(0deg) translate(146%)" }, "&:nth-child(2)": { animationDelay: "-1.1s", transform: "rotate(30deg) translate(146%)" }, "&:nth-child(3)": { animationDelay: "-1s", transform: "rotate(60deg) translate(146%)" }, "&:nth-child(4)": { animationDelay: "-0.9s", transform: "rotate(90deg) translate(146%)" }, "&:nth-child(5)": { animationDelay: "-0.8s", transform: "rotate(120deg) translate(146%)" }, "&:nth-child(6)": { animationDelay: "-0.7s", transform: "rotate(150deg) translate(146%)" }, "&:nth-child(7)": { animationDelay: "-0.6s", transform: "rotate(180deg) translate(146%)" }, "&:nth-child(8)": { animationDelay: "-0.5s", transform: "rotate(210deg) translate(146%)" }, "&:nth-child(9)": { animationDelay: "-0.4s", transform: "rotate(240deg) translate(146%)" }, "&:nth-child(10)": { animationDelay: "-0.3s", transform: "rotate(270deg) translate(146%)" }, "&:nth-child(11)": { animationDelay: "-0.2s", transform: "rotate(300deg) translate(146%)" }, "&:nth-child(12)": { animationDelay: "-0.1s", transform: "rotate(330deg) translate(146%)" } });
var StyledLoading = styled("span", { position: "absolute", top: 0, left: 0, right: 0, bottom: 0, size: "100%", dflex: "center", bgColor: "transparent", us: "none", variants: { size: { xs: { $$loadingSize: "$space$8", $$loadingBorder: "$space$1" }, sm: { $$loadingSize: "$space$10", $$loadingBorder: "$space$1" }, md: { $$loadingSize: "$space$12", $$loadingBorder: "calc($space$1 * 1.5)" }, lg: { $$loadingSize: "$space$15", $$loadingBorder: "$space$2" }, xl: { $$loadingSize: "$space$18", $$loadingBorder: "$space$3" } }, type: { default: { d: "flex", br: "$rounded", position: "relative", size: "$$loadingSize", i: { top: "0px", size: "100%", position: "absolute", br: "inherit" }, "._1": { border: "$$loadingBorder solid $$loadingColor", borderTop: "$$loadingBorder solid transparent", borderLeft: "$$loadingBorder solid transparent", borderRight: "$$loadingBorder solid transparent", animation: `${e8} 0.8s ease infinite` }, "._2": { border: "$$loadingBorder dotted $$loadingColor", borderTop: "$$loadingBorder solid transparent", borderLeft: "$$loadingBorder solid transparent", borderRight: "$$loadingBorder solid transparent", animation: `${e8} 0.8s linear infinite`, opacity: 0.5 }, "._3": { display: "none" } }, points: { d: "flex", position: "relative", transform: "translate(0, calc($$loadingSize * 0.6))", i: { size: "$$loadingSize", margin: "0 3px", bg: "$$loadingColor" }, "._1": { br: "$rounded", animation: `${n8} 0.75s ease infinite` }, "._2": { br: "$rounded", animation: `${n8} 0.75s ease infinite 0.25s` }, "._3": { br: "$rounded", animation: `${n8} 0.75s ease infinite 0.5s` } }, "points-opacity": { d: "flex", position: "relative", i: { display: "inline-block", size: "$$loadingSize", br: "$rounded", bg: "$$loadingColor", margin: "0 1px", animation: `${a7} 1.4s infinite both` }, "._2": { animationDelay: "0.2s" }, "._3": { animationDelay: "0.4s" } }, spinner: {}, gradient: { display: "flex", position: "relative", size: "$$loadingSize", "._1": { position: "absolute", size: "100%", border: "0px", animation: `${e8} 1s linear infinite`, top: "0px", br: "$rounded", bg: "linear-gradient(0deg, $background 33%,$$loadingColor 100%)" }, "._2": { top: "2px", position: "absolute", size: "calc(100% - 4px)", border: "0px", bg: "$background", br: "$rounded" }, "._3": { display: "none" } } } }, compoundVariants: [{ size: "xs", type: "points-opacity", css: { $$loadingSize: "$space$1" } }, { size: "sm", type: "points-opacity", css: { $$loadingSize: "$space$2" } }, { size: "md", type: "points-opacity", css: { $$loadingSize: "$space$3" } }, { size: "lg", type: "points-opacity", css: { $$loadingSize: "$space$4" } }, { size: "xl", type: "points-opacity", css: { $$loadingSize: "$space$5" } }, { size: "xs", type: "points", css: { $$loadingSize: "$space$1" } }, { size: "sm", type: "points", css: { $$loadingSize: "$space$2" } }, { size: "md", type: "points", css: { $$loadingSize: "$space$3" } }, { size: "lg", type: "points", css: { $$loadingSize: "$space$4" } }, { size: "xl", type: "points", css: { $$loadingSize: "$space$5" } }], defaultVariants: { type: "default" } });
var StyledLoadingLabel = styled("label", { mt: "$1", color: "$$loadingTextColor", fontSize: "$$loadingSize", "*": { margin: 0 }, variants: { size: { xs: { fontSize: "$space$5", marginTop: "$2" }, sm: { fontSize: "$space$6", marginTop: "$3" }, md: { fontSize: "$base", marginTop: "$4" }, lg: { fontSize: "$space$10", marginTop: "$4" }, xl: { fontSize: "$space$11", marginTop: "$5" } } } });

// node_modules/@nextui-org/react/esm/loading/spinner.js
init_compat_module();
var l6 = ({ children: r14, size: l13, color: c15, textColor: m13, className: p7, ...x8 }) => {
  const d11 = Array.isArray(r14) ? (null == r14 ? void 0 : r14.length) > 1 && void 0 !== r14[0] : void 0 !== r14, u9 = r14 && d11 ? "" : "Loading";
  return o(StyledSpinner, { className: clsx_default("nextui-spinner", p7), color: c15, size: l13, ...x8, children: [o(StyledSpinnerContainer, { "aria-label": u9, className: "nextui-spinner-container", children: [...new Array(12)].map((r15, e15) => o(StyledSpinnerSpan, {}, `nextui-spinner-${e15}`)) }), r14 && o(StyledLoadingLabel, { color: m13, size: l13, children: r14 })] });
};
l6.toString = () => ".nextui-spinner";
var spinner_default = l6;

// node_modules/@nextui-org/react/esm/loading/loading.js
var c6 = ({ children: e15, size: r14, gradientBackground: c15, loadingCss: d11, type: u9, ...g4 }) => {
  const p7 = e15 ? "" : "Loading", f5 = F(() => {
    if ("gradient" === u9)
      return { "._2": { bg: c15 } };
  }, [u9]);
  return o(StyledLoadingContainer, { ...g4, children: "spinner" === u9 ? o(spinner_default, { size: r14, children: e15 }) : o(k, { children: [o(StyledLoading, { "aria-label": p7, className: `nextui-loading nextui-loading-${u9}`, css: { ...d11, ...f5 }, size: r14, type: u9, children: [o("i", { className: "_1" }), o("i", { className: "_2" }), o("i", { className: "_3" })] }), e15 && o(StyledLoadingLabel, { className: "nextui-loading-label", size: r14, children: e15 })] }) });
};
c6.toString = () => ".nextui-loading";
var d3 = Cn.memo(c6);
var loading_default = with_defaults_default(d3, { size: "md", type: "default" });

// node_modules/@nextui-org/react/esm/loading/index.js
var loading_default2 = loading_default;

// node_modules/@nextui-org/react/esm/radio/radio.js
init_compat_module();

// node_modules/@nextui-org/react/esm/radio/use-radio.js
init_compat_module();

// node_modules/@react-aria/radio/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/radio/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext6 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext6 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext6);
var $704cf1d3b684cc5c$var$canUseDOM6 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $704cf1d3b684cc5c$var$componentIds2 = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter2(isDisabled = false) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext6);
  let ref = (0, _)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, Cn).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds2.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds2.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds2.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b266(defaultId) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext6);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext6 && !$704cf1d3b684cc5c$var$canUseDOM6)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter2(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}

// node_modules/@react-aria/radio/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c6 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap6 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e373(defaultId) {
  let [value, setValue] = (0, h)(defaultId);
  let nextId = (0, _)(null);
  let res = (0, $704cf1d3b684cc5c$export$619500959fc48b266)(value);
  let updateValue = (0, T)((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap6.set(res, updateValue);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c6)(() => {
    let r14 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap6.delete(r14);
    };
  }, [
    res
  ]);
  (0, p)(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f8426296(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap6.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap6.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e6(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe9286(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e6)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f8426296)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
var $65484d02dcb7eb3e$var$DOMPropNames5 = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames5 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe5 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f5(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames5.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames5.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe5.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f36(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll6())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements6(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition6(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached6 = null;
function $7215afc6de606d6b$var$supportsPreventScroll6() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached6 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached6 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached6 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached6;
}
function $7215afc6de606d6b$var$getScrollableElements6(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition6(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement6 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks6 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents6() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement6.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement6.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement6.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement6.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement6.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks6)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks6.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents6();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents6);
}
function $bbed8b41f857bcc0$export$24490316f764c4306(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement6.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks6.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed66() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e6(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c6)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
var $5df64b3807dc15ee$var$visualViewport6 = typeof window !== "undefined" && window.visualViewport;
function $c87311424ea30a05$var$testUserAgent6(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform6(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea106() {
  return $c87311424ea30a05$var$testPlatform6(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d996() {
  return $c87311424ea30a05$var$testPlatform6(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e42246() {
  return $c87311424ea30a05$var$testPlatform6(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea106() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f16() {
  return $c87311424ea30a05$export$186c6964ca17d996() || $c87311424ea30a05$export$7bef049ce92e42246();
}
function $c87311424ea30a05$export$a11b0059900ceec86() {
  return $c87311424ea30a05$var$testUserAgent6(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de6(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec86)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf636(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/radio/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/radio/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state6 = "default";
var $14c0b72509d70225$var$savedUserSelect6 = "";
var $14c0b72509d70225$var$modifiedElementMap6 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754876(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f16)()) {
    if ($14c0b72509d70225$var$state6 === "default") {
      $14c0b72509d70225$var$savedUserSelect6 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state6 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap6.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32956(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f16)()) {
    if ($14c0b72509d70225$var$state6 !== "disabled")
      return;
    $14c0b72509d70225$var$state6 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c4306)(() => {
        if ($14c0b72509d70225$var$state6 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect6 || "";
          $14c0b72509d70225$var$savedUserSelect6 = "";
          $14c0b72509d70225$var$state6 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap6.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap6.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap6.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb56 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb56.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext6(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb56));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe9286)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e6)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad216(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext6(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed66)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent6(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32956)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent6(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard6(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink6(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent6(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent6(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de6)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f36)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent6(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard6(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent6(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink6(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf636)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault6(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f36)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a46974671754876)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault6(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget6(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget6(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent6(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent6(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget6(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent6(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent6(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e32956)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault6(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de6)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f36)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget6(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent6(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent6(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent6(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f36)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a46974671754876)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById6(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget6(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById6(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget6(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32956)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e32956)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9286)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink6(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent6(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey6(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink6(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent6(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById6(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent6(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect6(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping6(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget6(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect6(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping6(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault6(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard6(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey6(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes6 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey6(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes6.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e996 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad216)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe9286)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b86 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb56));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe9286)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e6)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb56).Provider, {
    value: context
  }, children);
});
var $8a9cb279dc87e130$export$905e7fc544a71f366 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc6(onBlur) {
  let stateRef = (0, _)({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c6)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return (0, T)((e15) => {
    if (e15.target instanceof HTMLButtonElement || e15.target instanceof HTMLInputElement || e15.target instanceof HTMLTextAreaElement || e15.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e15.target;
      let onBlurHandler = (e16) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f366("blur", e16));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e66(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, T)((e15) => {
    if (e15.target === e15.currentTarget) {
      if (onBlurProp)
        onBlurProp(e15);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc6)(onBlur);
  const onFocus = (0, T)((e15) => {
    if (e15.target === e15.currentTarget && document.activeElement === e15.target) {
      if (onFocusProp)
        onFocusProp(e15);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e15);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
var $507fabe10e71c6fb$var$currentModality6 = null;
var $507fabe10e71c6fb$var$changeHandlers6 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners6 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus6 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently6 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers6(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers6)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey6(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea106)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent6(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus6 = true;
  if ($507fabe10e71c6fb$var$isValidKey6(e15)) {
    $507fabe10e71c6fb$var$currentModality6 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers6("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent6(e15) {
  $507fabe10e71c6fb$var$currentModality6 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus6 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers6("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent6(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de6)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus6 = true;
    $507fabe10e71c6fb$var$currentModality6 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent6(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus6 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently6) {
    $507fabe10e71c6fb$var$currentModality6 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers6("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus6 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently6 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur6() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus6 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently6 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents6() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners6)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus6 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent6, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent6, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent6, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent6, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur6, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent6, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent6, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent6, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent6, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent6, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent6, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners6 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents6();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents6);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a96() {
  return $507fabe10e71c6fb$var$currentModality6;
}
function $9ab94262bd0047c7$export$420e68273165f4ec6(props) {
  let { isDisabled, onBlurWithin, onFocusWithin, onFocusWithinChange } = props;
  let state = (0, _)({
    isFocusWithin: false
  });
  let onBlur = (0, T)((e15) => {
    if (state.current.isFocusWithin && !e15.currentTarget.contains(e15.relatedTarget)) {
      state.current.isFocusWithin = false;
      if (onBlurWithin)
        onBlurWithin(e15);
      if (onFocusWithinChange)
        onFocusWithinChange(false);
    }
  }, [
    onBlurWithin,
    onFocusWithinChange,
    state
  ]);
  let onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc6)(onBlur);
  let onFocus = (0, T)((e15) => {
    if (!state.current.isFocusWithin && document.activeElement === e15.target) {
      if (onFocusWithin)
        onFocusWithin(e15);
      if (onFocusWithinChange)
        onFocusWithinChange(true);
      state.current.isFocusWithin = true;
      onSyntheticFocus(e15);
    }
  }, [
    onFocusWithin,
    onFocusWithinChange,
    onSyntheticFocus
  ]);
  if (isDisabled)
    return {
      focusWithinProps: {
        onFocus: null,
        onBlur: null
      }
    };
  return {
    focusWithinProps: {
      onFocus,
      onBlur
    }
  };
}
function $93925083ecbb358c$export$48d1ea63208302604(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e15) => {
    let event = {
      ...e15,
      preventDefault() {
        e15.preventDefault();
      },
      isDefaultPrevented() {
        return e15.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e15.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd6(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea63208302604)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea63208302604)(props.onKeyUp)
    }
  };
}

// node_modules/@react-aria/radio/node_modules/@react-aria/focus/dist/import.mjs
function $6a99195332edec8b$export$80f3e147d781571c5(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a96)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c4306)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f36)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f36)(element);
}
function $645f2e67b85a24c9$var$isStyleVisible2(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible2(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a2(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible2(element) && $645f2e67b85a24c9$var$isAttributeVisible2(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a2(element.parentElement, element));
}
var $9bf71ea28793e738$var$FocusContext6 = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements6 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR6 = $9bf71ea28793e738$var$focusableElements6.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements6.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR6 = $9bf71ea28793e738$var$focusableElements6.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope6(element, scope) {
  return scope.some((node) => node.contains(element));
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa2(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR6 : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR6;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node))
        return NodeFilter.FILTER_REJECT;
      if (node.matches(selector) && (0, $645f2e67b85a24c9$export$e989c0fffaa6b27a2)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope6(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
var $9bf71ea28793e738$var$Tree5 = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode5({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope6(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree5();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode5({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode5 = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e5 = new $9bf71ea28793e738$var$Tree5();
var $e6afbd83fe6ebbd2$var$FocusableContext6 = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext4(ref) {
  let context = (0, q)($e6afbd83fe6ebbd2$var$FocusableContext6) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e6)(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$var$FocusableProvider6(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext6.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd56 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider6);
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c4(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e66)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd6)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe9286)(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext4(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, _)(props.autoFocus);
  (0, p)(() => {
    if (autoFocusRef.current && domRef.current)
      (0, $6a99195332edec8b$export$80f3e147d781571c5)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9286)({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}

// node_modules/@react-aria/radio/dist/module.js
var $884aeceb3d67f00f$export$3b7b268d09480394 = /* @__PURE__ */ new WeakMap();
var $884aeceb3d67f00f$export$8e8b214e06dd397d = /* @__PURE__ */ new WeakMap();
var $884aeceb3d67f00f$export$61c8d3f0151e21b2 = /* @__PURE__ */ new WeakMap();
function $0d5c49892c1215da$export$37b0961d2f4751e2(props, state, ref) {
  let { value, children, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledby } = props;
  const isDisabled = props.isDisabled || state.isDisabled;
  let hasChildren = children != null;
  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;
  if (!hasChildren && !hasAriaLabel)
    console.warn("If you do not provide children, you must specify an aria-label for accessibility");
  let checked = state.selectedValue === value;
  let onChange = (e15) => {
    e15.stopPropagation();
    state.setSelectedValue(value);
  };
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad216({
    isDisabled
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c4($3ef42575df84b30b$export$9d1611c77c2fe9286(props, {
    onFocus: () => state.setLastFocusedValue(value)
  }), ref);
  let interactions = $3ef42575df84b30b$export$9d1611c77c2fe9286(pressProps, focusableProps);
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f5(props, {
    labelable: true
  });
  let tabIndex = state.lastFocusedValue === value || state.lastFocusedValue == null ? 0 : -1;
  if (isDisabled)
    tabIndex = void 0;
  return {
    inputProps: $3ef42575df84b30b$export$9d1611c77c2fe9286(domProps, {
      ...interactions,
      type: "radio",
      name: $884aeceb3d67f00f$export$3b7b268d09480394.get(state),
      tabIndex,
      disabled: isDisabled,
      checked,
      value,
      onChange,
      "aria-describedby": [
        state.validationState === "invalid" ? $884aeceb3d67f00f$export$61c8d3f0151e21b2.get(state) : null,
        $884aeceb3d67f00f$export$8e8b214e06dd397d.get(state)
      ].filter(Boolean).join(" ") || void 0
    }),
    isDisabled,
    isSelected: checked
  };
}
function $430f30ed08ec25fa$export$62b9571f283ff5c2(props, state) {
  let { name, validationState, isReadOnly, isRequired, isDisabled, orientation = "vertical" } = props;
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let { labelProps, fieldProps, descriptionProps, errorMessageProps } = $2baaea4c71418dea$export$294aa081a6c6f55d({
    ...props,
    // Radio group is not an HTML input element so it
    // shouldn't be labeled by a <label> element.
    labelElementType: "span"
  });
  $884aeceb3d67f00f$export$8e8b214e06dd397d.set(state, descriptionProps.id);
  $884aeceb3d67f00f$export$61c8d3f0151e21b2.set(state, errorMessageProps.id);
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f5(props, {
    labelable: true
  });
  let { focusWithinProps } = $9ab94262bd0047c7$export$420e68273165f4ec6({
    onBlurWithin() {
      if (!state.selectedValue)
        state.setLastFocusedValue(null);
    }
  });
  let onKeyDown = (e15) => {
    let nextDir;
    switch (e15.key) {
      case "ArrowRight":
        if (direction === "rtl" && orientation !== "vertical")
          nextDir = "prev";
        else
          nextDir = "next";
        break;
      case "ArrowLeft":
        if (direction === "rtl" && orientation !== "vertical")
          nextDir = "next";
        else
          nextDir = "prev";
        break;
      case "ArrowDown":
        nextDir = "next";
        break;
      case "ArrowUp":
        nextDir = "prev";
        break;
      default:
        return;
    }
    e15.preventDefault();
    let walker = $9bf71ea28793e738$export$2d6ec8fc375ceafa2(e15.currentTarget, {
      from: e15.target
    });
    let nextElem;
    if (nextDir === "next") {
      nextElem = walker.nextNode();
      if (!nextElem) {
        walker.currentNode = e15.currentTarget;
        nextElem = walker.firstChild();
      }
    } else {
      nextElem = walker.previousNode();
      if (!nextElem) {
        walker.currentNode = e15.currentTarget;
        nextElem = walker.lastChild();
      }
    }
    if (nextElem) {
      nextElem.focus();
      state.setSelectedValue(nextElem.value);
    }
  };
  let groupName = $bdb11010cef70236$export$f680877a34711e373(name);
  $884aeceb3d67f00f$export$3b7b268d09480394.set(state, groupName);
  return {
    radioGroupProps: $3ef42575df84b30b$export$9d1611c77c2fe9286(domProps, {
      // https://www.w3.org/TR/wai-aria-1.2/#radiogroup
      role: "radiogroup",
      onKeyDown,
      "aria-invalid": validationState === "invalid" || void 0,
      "aria-errormessage": props["aria-errormessage"],
      "aria-readonly": isReadOnly || void 0,
      "aria-required": isRequired || void 0,
      "aria-disabled": isDisabled || void 0,
      "aria-orientation": orientation,
      ...fieldProps,
      ...focusWithinProps
    }),
    labelProps,
    descriptionProps,
    errorMessageProps
  };
}

// node_modules/@nextui-org/react/esm/radio/radio-context.js
var [RadioGroupProvider, useRadioGroupContext] = createContext({ name: "RadioGroupContext", strict: true, errorMessage: "useRadioGroupContext: `context` is undefined. Seems you forgot to wrap all checkbox components within `<Radio.Group />`" });

// node_modules/@nextui-org/react/esm/radio/use-radio.js
var useRadio = (t9) => {
  var d11, u9, n15;
  const p7 = useRadioGroupContext(), { size: c15 = null != (d11 = p7.size) ? d11 : "md", color: m13 = null != (u9 = p7.color) ? u9 : "default", labelColor: v4 = null != (n15 = p7.labelColor) ? n15 : "default", autoFocus: b6, isSquared: f5 = false, isDisabled: R3 = false, disableAnimation: h4 = false, ...q3 } = t9;
  p7 && __DEV__ && (void 0 !== q3.checked && warn('Remove props "checked" if in the Radio.Group.', "Radio"), void 0 === q3.value && warn('Props "value" must be defined if in the Radio.Group.', "Radio"));
  const P3 = _(null), { inputProps: S2 } = $0d5c49892c1215da$export$37b0961d2f4751e2({ ...q3, ...p7, isDisabled: R3 }, p7.radioGroupState, P3), D3 = F(() => {
    var i13;
    return null != (i13 = S2.disabled) && i13;
  }, [S2.disabled]), { hoverProps: z3, isHovered: C4 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: D3 });
  return { size: c15, color: m13, inputRef: P3, autoFocus: b6, isDisabled: D3, labelColor: v4, isInvalid: F(() => "invalid" === p7.validationState, [p7.validationState]), isHovered: C4, isSquared: f5, isRequired: F(() => {
    var i13;
    return null != (i13 = p7.isRequired) && i13;
  }, [p7.isRequired]), disableAnimation: h4, inputProps: S2, hoverProps: z3 };
};

// node_modules/@nextui-org/react/esm/radio/radio.styles.js
var StyledRadioText = styled("span", { fontSize: "$$radioSize", us: "none", d: "inline-flex", ai: "center", variants: { color: { default: { color: "$text" }, primary: { color: "$primary" }, secondary: { color: "$secondary" }, success: { color: "$success" }, warning: { color: "$warning" }, error: { color: "$error" } }, isDisabled: { true: { color: "$accents5" } }, isInvalid: { true: { color: "$error" } } } });
var StyledRadioPoint = styled("span", { size: "$$radioSize", br: "$$radioRadii", position: "relative", d: "inline-block", mr: "calc($$radioSize * 0.375)", "&:after": { content: "", d: "block", position: "absolute", size: "$$radioSize", br: "$$radioRadii", boxSizing: "border-box", border: "2px solid $border" } }, cssFocusVisible);
var StyledRadioLabel = styled("label", { d: "flex", w: "initial", ai: "flex-start", position: "relative", fd: "column", jc: "flex-start", cursor: "pointer", "@motion": { [`& ${StyledRadioPoint}`]: { transition: "none", "&:after": { transition: "none" } } }, variants: { color: { default: { $$radioColor: "$colors$primary", $$radioColorHover: "$colors$primarySolidHover" }, primary: { $$radioColor: "$colors$primary", $$radioColorHover: "$colors$primarySolidHover" }, secondary: { $$radioColor: "$colors$secondary", $$radioColorHover: "$colors$secondarySolidHover" }, success: { $$radioColor: "$colors$success", $$radioColorHover: "$colors$successSolidHover" }, warning: { $$radioColor: "$colors$warning", $$radioColorHover: "$colors$warningSolidHover" }, error: { $$radioColor: "$colors$error", $$radioColorHover: "$colors$errorSolidHover" } }, size: { xs: { $$radioSize: "$space$7" }, sm: { $$radioSize: "$space$8" }, md: { $$radioSize: "$space$9" }, lg: { $$radioSize: "$space$10" }, xl: { $$radioSize: "$space$11" } }, isHovered: { true: {} }, isInvalid: { true: { $$radioColor: "$colors$error", $$radioColorHover: "$colors$errorSolidHover", [`& ${StyledRadioPoint}`]: { "&:after": { borderColor: "$colors$error" } } } }, isDisabled: { true: { cursor: "not-allowed", $$radioColor: "$colors$accents4" } }, isSquared: { true: { $$radioRadii: "$radii$squared" }, false: { $$radioRadii: "$radii$rounded" } }, isChecked: { true: { [`& ${StyledRadioPoint}`]: { "&:after": { border: "calc($$radioSize * 0.34) solid $$radioColor" } } } }, disableAnimation: { true: { [`& ${StyledRadioPoint}`]: { transition: "none", "&:after": { transition: "none" } } }, false: { [`& ${StyledRadioPoint}`]: { transition: "$default", "&:after": { transition: "$default" } } } } }, defaultVariants: { size: "md", isSquared: false, disableAnimation: false }, compoundVariants: [{ isChecked: true, isHovered: true, css: { [`& ${StyledRadioPoint}`]: { "&:after": { border: "calc($$radioSize * 0.34) solid $$radioColorHover" } } } }, { isChecked: true, isDisabled: true, isHovered: true, css: { [`& ${StyledRadioPoint}`]: { "&:after": { border: "calc($$radioSize * 0.34) solid $$radioColor" } } } }, { isChecked: false, isDisabled: false, isHovered: true, css: { [`& ${StyledRadioPoint}`]: { bg: "$border" } } }] });
var StyledRadioDescription = styled("span", { color: "$accents7", fontSize: "calc($$radioSize * 0.85)", paddingLeft: "calc($$radioSize + $$radioSize * 0.375)", variants: { isInvalid: { true: { color: "$red500" } }, isDisabled: { true: { color: "$accents5" } } } });
var StyledRadioContainer = styled("div", { w: "initial", position: "relative", d: "flex", fd: "row", ai: "center", jc: "flex-start" });
var StyledRadioGroupLabel = styled("label", { d: "block", fontWeight: "$normal", fontSize: "calc($$checkboxSize * 0.9)", color: "$accents8", mb: "$3" });
var StyledRadioGroup = styled("div", { border: 0, margin: 0, padding: 0, display: "flex", fd: "column", variants: { size: { xs: { $$radioGroupGap: "$space$7" }, sm: { $$radioGroupGap: "$space$8" }, md: { $$radioGroupGap: "$space$9" }, lg: { $$radioGroupGap: "$space$10" }, xl: { $$radioGroupGap: "$space$11" } } } });
var StyledRadioGroupContainer = styled("div", { display: "flex", flexDirection: "column", variants: { isRow: { true: { mt: 0, flexDirection: "row", [`& ${StyledRadioLabel}:not(:last-child)`]: { mr: "$$radioSize" } }, false: { mr: 0, flexDirection: "column", [`& ${StyledRadioLabel}:not(:first-child)`]: { mt: "$$radioSize" } } } }, defaultVariants: { isRow: false } });

// node_modules/@nextui-org/react/esm/radio/radio.js
var Radio = Cn.forwardRef((i13, t9) => {
  const { className: x8, as: b6, css: v4, children: N5, label: R3, description: k6, ...I2 } = i13, { size: j2, color: q3, inputRef: D3, labelColor: F3, isHovered: y3, isSquared: P3, isInvalid: S2, isDisabled: z3, autoFocus: A3, disableAnimation: C4, hoverProps: H2, inputProps: V2, isRequired: g4 } = useRadio({ ...I2, children: null != N5 ? N5 : R3 }), w3 = useFocusableRef(t9, D3), { focusProps: U2, isFocusVisible: $2 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: A3 }), B2 = F(() => y3 ? "is-hovered" : z3 ? "is-disabled" : V2.checked ? "checked" : "unchecked", [z3, V2.checked, y3]);
  return o(StyledRadioLabel, { ref: w3, ...H2, as: b6, className: clsx_default("nextui-radio-label", `nextui-radio--${B2}`, x8), color: q3, css: v4, "data-state": B2, disableAnimation: C4, isChecked: V2.checked, isDisabled: z3, isHovered: y3, isInvalid: S2, isSquared: P3, size: j2, children: [o(StyledRadioContainer, { className: "nextui-radio-container", children: [o(StyledRadioPoint, { className: "nextui-radio-point", isFocusVisible: $2, ...U2, children: o($5c3e21d68f1c4674$export$439d29a4e110a164, { children: o("input", { ref: D3, className: "nextui-radio-input", required: g4, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(V2, U2) }) }) }), o(StyledRadioText, { className: "nextui-radio-text", color: F3, isDisabled: z3, isInvalid: S2, children: N5 })] }), k6 && o(StyledRadioDescription, { className: "nextui-radio-description", isDisabled: z3, isInvalid: S2, children: k6 })] });
});
__DEV__ && (Radio.displayName = "NextUI.Radio"), Radio.toString = () => ".nextui-radio";
var radio_default = Radio;

// node_modules/@nextui-org/react/esm/radio/radio-group.js
init_compat_module();

// node_modules/@nextui-org/react/esm/radio/use-radio-group.js
init_compat_module();

// node_modules/@react-stately/radio/dist/module.js
init_compat_module();
var $a54cdc5c1942b639$var$instance = Math.round(Math.random() * 1e10);
var $a54cdc5c1942b639$var$i = 0;
function $a54cdc5c1942b639$export$bca9d026f8e704eb(props) {
  let name = F(
    () => props.name || `radio-group-${$a54cdc5c1942b639$var$instance}-${++$a54cdc5c1942b639$var$i}`,
    [
      props.name
    ]
  );
  let [selectedValue, setSelected] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.value, props.defaultValue, props.onChange);
  let [lastFocusedValue, setLastFocusedValue] = h(null);
  let setSelectedValue = (value) => {
    if (!props.isReadOnly && !props.isDisabled)
      setSelected(value);
  };
  return {
    name,
    selectedValue,
    setSelectedValue,
    lastFocusedValue,
    setLastFocusedValue,
    isDisabled: props.isDisabled || false,
    isReadOnly: props.isReadOnly || false,
    validationState: props.validationState
  };
}

// node_modules/@nextui-org/react/esm/radio/use-radio-group.js
var useRadioGroup = (i13) => {
  const { size: e15 = "md", color: t9 = "default", labelColor: l13 = "default", orientation: d11 = "vertical", isRequired: s9, validationState: p7, ...u9 } = i13, n15 = F(() => ({ ...u9, isRequired: s9, orientation: d11 }), [u9]), c15 = $a54cdc5c1942b639$export$bca9d026f8e704eb(n15), { radioGroupProps: m13, labelProps: f5 } = $430f30ed08ec25fa$export$62b9571f283ff5c2(n15, c15);
  return { size: e15, color: t9, orientation: d11, labelColor: l13, isRequired: s9, validationState: p7, radioGroupState: c15, radioGroupProps: m13, labelProps: f5 };
};

// node_modules/@nextui-org/react/esm/radio/radio-group.js
var RadioGroup = Cn.forwardRef((r14, e15) => {
  const { as: d11, css: n15, className: c15, children: f5, label: x8, ...R3 } = r14, g4 = useRadioGroup({ ...R3, label: x8 }), h4 = useDOMRef(e15);
  return o(StyledRadioGroup, { ref: h4, as: d11, className: clsx_default("nextui-radio-group", c15), css: n15, size: g4.size, ...g4.radioGroupProps, children: [x8 && o(StyledRadioGroupLabel, { className: "nextui-radio-group-label", ...g4.labelProps, children: x8 }), o(StyledRadioGroupContainer, { className: "nextui-radio-group-items", isRow: "horizontal" === g4.orientation, role: "presentation", children: o(RadioGroupProvider, { value: g4, children: f5 }) })] });
});
__DEV__ && (RadioGroup.displayName = "NextUI.RadioGroup"), RadioGroup.toString = () => ".nextui-radio-group";
var radio_group_default = RadioGroup;

// node_modules/@nextui-org/react/esm/radio/index.js
radio_default.Group = radio_group_default;
var radio_default2 = radio_default;

// node_modules/@nextui-org/react/esm/text/text.js
init_compat_module();

// node_modules/@nextui-org/react/esm/text/child.js
init_compat_module();

// node_modules/@nextui-org/react/esm/text/text.styles.js
var StyledText = styled("p", { variants: { weight: { hairline: { fontWeight: "$hairline" }, thin: { fontWeight: "$thin" }, light: { fontWeight: "$light" }, normal: { fontWeight: "$normal" }, medium: { fontWeight: "$medium" }, semibold: { fontWeight: "$semibold" }, bold: { fontWeight: "$bold" }, extrabold: { fontWeight: "$extrabold" }, black: { fontWeight: "$black" } } } }, cssHideShowIn);

// node_modules/@nextui-org/react/esm/text/child.js
var TextChild = Cn.forwardRef((t9, i13) => {
  const { children: m13, tag: d11, color: f5 = "default", transform: x8, size: a13, css: c15, ...n15 } = t9, p7 = useDOMRef(i13), u9 = F(() => isNormalColor(f5) ? "default" === f5 ? "$text" : `$${f5}` : f5, [f5]);
  return o(StyledText, { ref: p7, as: d11, css: { color: u9, fontSize: a13, tt: x8, ...c15 }, ...n15, children: m13 });
});
__DEV__ && (TextChild.displayName = "NextUI.TextChild"), TextChild.toString = () => ".nextui-text-child";
var child_default = Cn.memo(TextChild);

// node_modules/@nextui-org/react/esm/text/text.js
var n9 = (t9, e15, r14, o14) => {
  if (!t9.length)
    return e15;
  const l13 = t9.slice(1, t9.length);
  return o(child_default, { size: r14, tag: t9[0], transform: o14, children: n9(l13, e15, r14) });
};
var Text = Cn.forwardRef((t9, o14) => {
  const { h1: l13 = false, h2: m13 = false, h3: h4 = false, h4: a13 = false, h5: f5 = false, h6: c15 = false, b: x8 = false, small: p7 = false, i: d11 = false, span: u9 = false, del: b6 = false, em: g4 = false, blockquote: T3 = false, transform: j2 = "none", size: k6, children: y3, ...z3 } = t9, q3 = useDOMRef(o14), N5 = { h1: l13, h2: m13, h3: h4, h4: a13, h5: f5, h6: c15, blockquote: T3 }, O3 = { span: u9, small: p7, b: x8, em: g4, i: d11, del: b6 }, w3 = Object.keys(N5).filter((t10) => N5[t10]), I2 = Object.keys(O3).filter((t10) => O3[t10]), R3 = F(() => w3[0] ? w3[0] : I2[0] ? I2[0] : "p", [w3, I2]), S2 = I2.filter((t10) => t10 !== R3), U2 = F(() => S2.length ? n9(S2, y3, k6, j2) : y3, [S2, y3, k6, j2]);
  return o(child_default, { ref: q3, size: k6, tag: R3, transform: j2, ...z3, children: U2 });
});
__DEV__ && (Text.displayName = "NextUI.Text"), Text.toString = () => ".nextui-text";
var text_default = Cn.memo(Text);

// node_modules/@nextui-org/react/esm/text/index.js
var text_default2 = text_default;

// node_modules/@nextui-org/react/esm/switch/switch.js
init_compat_module();

// node_modules/@nextui-org/react/esm/switch/switch.styles.js
var StyledSwitchContainer = styled("label", { WebkitTapHighlightColor: "transparent", d: "inline-block", verticalAlign: "center", whiteSpace: "nowrap", us: "none", transition: "$default", padding: "$1 0", position: "relative", cursor: "pointer", "@motion": { transition: "none" }, variants: { color: { default: { $$switchColor: "$colors$primary", $$switchColorShadow: "$colors$primaryShadow", $$switchColorHover: "$colors$primarySolidHover" }, primary: { $$switchColor: "$colors$primary", $$switchColorShadow: "$colors$primaryShadow", $$switchColorHover: "$colors$primarySolidHover" }, secondary: { $$switchColor: "$colors$secondary", $$switchColorShadow: "$colors$secondaryShadow", $$switchColorHover: "$colors$secondarySolidHover" }, success: { $$switchColor: "$colors$success", $$switchColorShadow: "$colors$successShadow", $$switchColorHover: "$colors$successSolidHover" }, warning: { $$switchColor: "$colors$warning", $$switchColorShadow: "$colors$warningShadow", $$switchColorHover: "$colors$warningSolidHover" }, error: { $$switchColor: "$colors$error", $$switchColorShadow: "$colors$errorShadow", $$switchColorHover: "$colors$errorSolidHover" } }, size: { xs: { $$switchWidth: "$space$12", $$switchHeight: "$space$9", width: " $$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" }, sm: { $$switchWidth: "$space$14", $$switchHeight: "$space$10", width: "$$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" }, md: { $$switchWidth: "$space$15", $$switchHeight: "$space$11", width: "$$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" }, lg: { $$switchWidth: "$space$17", $$switchHeight: "$space$12", width: "$$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" }, xl: { $$switchWidth: "$space$18", $$switchHeight: "$space$13", width: "$$switchWidth", maxWidth: "$$switchWidth", height: "$$switchHeight" } }, borderWeight: { light: { $$switchBorderW: "$borderWeights$light" }, normal: { $$switchBorderW: "$borderWeights$normal" }, bold: { $$switchBorderW: "$borderWeights$bold" }, extrabold: { $$switchBorderW: "$borderWeights$extrabold" }, black: { $$switchBorderW: "$borderWeights$black" } }, disabled: { true: { cursor: "not-allowed" } }, animated: { false: { transition: "none" } } }, defaultVariants: { color: "default", size: "md", borderWeight: "normal" } });
var StyledSwitchCircle = styled("span", { position: "absolute", display: "flex", size: "calc($$switchHeight * 0.7)", jc: "center", ai: "center", top: "calc(50% - $$switchHeight * 0.35)", left: "0", transition: "transform 0.25s ease, width 0.2s ease", bg: "$background", br: "$pill", "& svg": { bg: "transparent", size: "calc($$switchHeight * 0.44)" }, "@motion": { transition: "none" } });
var StyledSwitch = styled("div", { opacity: 1, width: "$$switchWidth", height: "$$switchHeight", transition: "$default", position: "relative", overflow: "hidden", padding: 0, br: "$pill", bg: "$accents2", "@motion": { transition: "none" }, variants: { checked: { true: { bg: "$$switchColor", "&:hover:not(&:active)": { bg: "$$switchColorHover" } } }, bordered: { true: { bg: "transparent", border: "$$switchBorderW solid $border", "&:hover": { borderColor: "$$switchColor" }, [`& ${StyledSwitchCircle}`]: { bg: "$accents2" } } }, squared: { true: { br: "2px", [`& ${StyledSwitchCircle}`]: { br: "2px" } } }, shadow: { true: {} }, disabled: { true: { borderColor: "$accents2", bg: "$accents2", [`& ${StyledSwitchCircle}`]: { bg: "$accents4" } } }, animated: { true: { "&:active": { [`& ${StyledSwitchCircle}`]: { width: "calc($$switchHeight * 0.7 + ($$switchWidth / 10))" } } }, false: { transition: "none", [`& ${StyledSwitchCircle}`]: { transition: "none" } } } }, compoundVariants: [{ checked: true, disabled: true, css: { bg: "$accents3", [`& ${StyledSwitchCircle}`]: { bg: "$accents0" }, "&:hover:not(&:active)": { bg: "$accents4" } } }, { shadow: true, checked: true, css: { normalShadowVar: "$$switchColorShadow" } }, { checked: true, bordered: true, css: { bg: "$$switchColor", border: "$$switchBorderW solid transparent", "&:hover:not(&:active)": { borderColor: "transparent" }, [`& ${StyledSwitchCircle}`]: { bg: "$background" } } }] }, sharedFocus);
var StyledSwitchInput = styled("input", { [`& + ${StyledSwitch} > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth / 15))" }, [`&:checked + ${StyledSwitch} > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth - $$switchWidth / 15 - $$switchHeight * 0.7))" }, variants: { animated: { true: { [`& + ${StyledSwitch}:active > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth / 7.5))" }, [`&:checked + ${StyledSwitch}:active > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth - $$switchWidth / 7.5 - $$switchWidth / 10 - $$switchHeight * 0.7))" } } }, bordered: { true: { [`& + ${StyledSwitch} > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth / 15 - $$switchBorderW / 2))" }, [`&:checked + ${StyledSwitch} > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth - $$switchWidth / 15 - $$switchBorderW * 1.5 - $$switchHeight * 0.7))" } } } }, compoundVariants: [{ animated: true, bordered: true, css: { [`& + ${StyledSwitch}:active > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth / 7.5 - $$switchBorderW / 2))" }, [`&:checked + ${StyledSwitch}:active > ${StyledSwitchCircle}`]: { transform: "translateX(calc($$switchWidth - $$switchWidth / 7.5 - $$switchWidth / 10 - $$switchBorderW * 1.5 - $$switchHeight * 0.7))" } } }] }, sharedVisuallyHidden);

// node_modules/@nextui-org/react/esm/switch/switch.js
var k4 = "nextui-switch";
var x5 = ({ initialChecked: e15, checked: r14, disabled: x8, onChange: v4, squared: w3, bordered: g4, shadow: $2, icon: D3, iconOn: j2, iconOff: C4, animated: O3, preventDefault: q3, name: y3, ...E2 }) => {
  const [N5, S2] = h(e15);
  D3 && __DEV__ && (j2 || C4) && warn('Remove props "icon" if iconOn or iconOff exists.', "Switch");
  const B2 = T((e16) => {
    if (x8)
      return;
    const t9 = { target: { checked: !N5 }, stopPropagation: e16.stopPropagation, preventDefault: e16.preventDefault, nativeEvent: e16 };
    S2(!N5), v4 && v4(t9);
  }, [x8, N5, v4]), { bindings: I2 } = use_keyboard_default2((e16) => {
    B2(e16);
  }, [KeyCode.Enter, KeyCode.Space], { disableGlobalEvent: true, preventDefault: q3 }), P3 = F(() => {
    const e16 = D3 || j2 || C4, t9 = Boolean(j2), a13 = Boolean(C4);
    return e16 ? t9 && N5 ? j2 : a13 && !N5 ? C4 : e16 : null;
  }, [N5, D3, j2, C4]);
  p(() => {
    void 0 !== r14 && S2(r14);
  }, [r14]);
  const G3 = F(() => N5 ? "checked" : "unchecked", [N5]);
  return o(StyledSwitchContainer, { animated: O3, "data-state": G3, disabled: x8, ...E2, children: [o(StyledSwitchInput, { animated: O3, bordered: g4, checked: N5, className: clsx_default(`${k4}-input`), "data-state": G3, disabled: x8, tabIndex: -1, type: "checkbox", onChange: B2, name: y3 }), o(StyledSwitch, { animated: O3, "aria-checked": N5, "aria-disabled": x8, bordered: g4, checked: N5, className: clsx_default(k4, `${k4}--${G3}`, { [`${k4}-checked`]: N5, [`${k4}-disabled`]: x8 }), "data-state": G3, disabled: x8, role: "switch", shadow: $2, squared: w3, tabIndex: x8 ? -1 : 0, ...I2, children: o(StyledSwitchCircle, { className: `${k4}-circle`, children: P3 }) })] });
};
x5.toString = () => ".nextui-switch";
var v2 = Cn.memo(x5);
var switch_default = with_defaults_default(v2, { disabled: false, bordered: false, shadow: false, squared: false, animated: true, preventDefault: true, initialChecked: false });

// node_modules/@nextui-org/react/esm/switch/index.js
var switch_default2 = switch_default;

// node_modules/@nextui-org/react/esm/backdrop/backdrop.js
init_compat_module();

// node_modules/@nextui-org/react/esm/backdrop/backdrop.styles.js
var i7 = keyframes({ "0%": { opacity: 0 }, "60%": { opacity: 0.75 }, "100%": { opacity: 1 } });
var t6 = keyframes({ "0%": { opacity: 0 } });
var n10 = keyframes({ "0%": { backdropFilter: "saturate(0%) blur(0)" } });
var StyledBackdropContent = styled("div", { position: "relative", display: "inline-block", zIndex: "$max", outline: "none", width: "100%", margin: "$9 auto", verticalAlign: "middle", "@sm": { width: "90%", maxWidth: "90%" }, variants: { animated: { true: { "&": { animationName: i7, animationDuration: "200ms", animationTimingFunction: "ease-in", animationDirection: "normal" } }, false: { transition: "none" } } } });
var StyledBackdropLayer = styled("div", { position: "fixed", top: 0, left: 0, right: 0, bottom: 0, size: "100%", pe: "none", zIndex: "$max", "@motion": { transition: "none" }, variants: { blur: { true: { bg: "$black", opacity: "$$backdropOpacity", "@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none))": { opacity: 1, backdropFilter: "saturate(180%) blur(20px)", animationName: `${n10}, ${t6}`, bg: "rgba(0, 0, 0, 0.1)" } }, false: { bg: "$black", opacity: "$$backdropOpacity", animationName: `${t6}`, animationDuration: "0.2s", animationTimingFunction: "cubic-bezier(0.4, 0, 0.2, 1)" } }, animated: { true: { animationName: `${t6}`, animationDuration: "0.2s", animationTimingFunction: "cubic-bezier(0.4, 0, 0.2, 1)" }, false: { transition: "none" } } } });
var StyledBackdrop = styled("div", { position: "fixed", top: 0, left: 0, right: 0, bottom: 0, overflow: "auto", zIndex: "$max", WebkitOverflowScrolling: "touch", boxSizing: "border-box", textAlign: "center", "&:before": { content: "", display: "inline-block", width: 0, height: "100%", verticalAlign: "middle" }, ".nextui-backdrop-wrapper-enter .nextui-backdrop-layer-default": { opacity: 0 }, ".nextui-backdrop-wrapper-enter-active .nextui-backdrop-layer-default": { opacity: "$$backdropOpacity" }, ".nextui-backdrop-wrapper-leave .nextui-backdrop-layer-default": { opacity: "$$backdropOpacity" }, ".nextui-backdrop-wrapper-leave-active .nextui-backdrop-layer-default": { opacity: 0 }, ".nextui-backdrop-wrapper-enter .nextui-backdrop-layer-blur": { bg: "rgba(0, 0, 0, 0.1)" }, ".nextui-backdrop-wrapper-enter-active .nextui-backdrop-layer-blur": { bg: "rgba(0, 0, 0, 0.4)" }, ".nextui-backdrop-wrapper-leave .nextui-backdrop-layer-blur": { bg: "rgba(0, 0, 0, 0.4)" }, ".nextui-backdrop-wrapper-leave-active .nextui-backdrop-layer-blur": { bg: "rgba(0, 0, 0, 0.1)" }, variants: { fullScreen: { true: { display: "inline-flex", overflow: "hidden", [`& ${StyledBackdropContent}`]: { width: "100vw", maxWidth: "100vw", height: "100vh", margin: 0 }, [`& ${StyledBackdropLayer}`]: { display: "none" } } } }, defaultVariants: { fullScreen: false } });

// node_modules/@nextui-org/react/esm/backdrop/backdrop.js
var x6 = "nextui-backdrop";
var k5 = Cn.memo(({ children: e15, onClick: a13, onKeyPress: m13, visible: k6, maxWidth: y3, blur: h4, animated: $2, opacity: v4, preventDefault: N5, className: j2, css: T3, ...g4 }) => {
  const [, C4, D3] = use_current_state_default2(false), w3 = (e16) => {
    D3.current || a13 && a13(e16);
  }, E2 = T((e16) => {
    e16.stopPropagation();
  }, []), I2 = () => {
    if (!D3.current)
      return;
    const e16 = setTimeout(() => {
      C4(false), clearTimeout(e16);
    }, 0);
  }, { bindings: M2 } = use_keyboard_default2((e16) => {
    m13 && m13(e16);
  }, [KeyCode.Escape, KeyCode.Space], { disableGlobalEvent: true, preventDefault: N5 }), P3 = F(() => k6 ? "open" : "closed", [k6]), S2 = F(() => o(StyledBackdrop, { "aria-hidden": true, className: clsx_default(x6, `${x6}--${P3}`, j2), css: { $$backdropOpacity: v4, ...T3 }, "data-state": P3, role: "button", tabIndex: -1, onClick: w3, onMouseUp: I2, ...M2, ...g4, children: [o(StyledBackdropLayer, { animated: $2, blur: h4, className: clsx_default(`${x6}-layer`, h4 ? `${x6}-layer-blur` : `${x6}-layer-default`) }), o(StyledBackdropContent, { animated: $2, className: `${x6}-content`, css: { maxWidth: y3 }, onClick: E2, onMouseDown: () => C4(true), children: e15 })] }), [e15]);
  return o(k, { children: $2 ? o(css_transition_default, { clearTime: 150, enterTime: 20, leaveTime: 20, name: `${x6}-wrapper`, visible: k6, children: S2 }) : k6 ? S2 : null });
});
__DEV__ && (k5.displayName = "NextUI.Backdrop"), k5.toString = () => ".nextui-backdrop";
var backdrop_default = with_defaults_default(k5, { onClick: () => {
}, visible: false, blur: false, animated: true, preventDefault: true, opacity: 0.5, className: "" });

// node_modules/@nextui-org/react/esm/backdrop/index.js
var backdrop_default2 = backdrop_default;

// node_modules/@nextui-org/react/esm/user/user.js
init_compat_module();

// node_modules/@nextui-org/react/esm/user/user.styles.js
var StyledUser = styled("div", { d: "inline-flex", p: "0 $sm", jc: "center", ai: "center", w: "max-content", maxWidth: "100%", transition: "transform 250ms ease 0ms, box-shadow 0.25s ease 0s", "@motion": { transition: "none" } }, cssFocusVisible);
var StyledUserInfo = styled("div", { ml: "$sm", d: "inline-flex", fd: "column", alignItems: "flex-start", whiteSpace: "nowrap" });
var StyledUserName = styled("span", { fontSize: "$sm", color: "$text", lh: "$sm", fontWeight: "$medium", maxW: "$60", to: "ellipsis", ov: "hidden" });
var StyledUserDesc = styled("span", { fontSize: "$xs", color: "$accents7", "*:first-child": { mt: 0 }, "*:last-child": { mb: 0 } });

// node_modules/@nextui-org/react/esm/user/user.js
var User = Cn.forwardRef((e15, a13) => {
  const { as: p7, css: f5, src: x8, text: b6, name: N5, children: U2, altText: h4, color: j2, squared: z3, bordered: g4, size: q3, description: y3, zoomed: F3, pointer: R3, ...V2 } = e15, k6 = useDOMRef(a13), { isFocusVisible: v4, focusProps: w3 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), I2 = F(() => {
    if ("button" === p7)
      return { borderRadius: "$xs", background: "none", appearance: "none", p: 0, m: 0, outline: "none", border: "none", cursor: "pointer" };
  }, [p7]);
  return o(StyledUser, { ref: k6, as: p7, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(V2, w3), css: { ...I2, ...f5 }, isFocusVisible: v4, children: [o(avatar_default2, { alt: h4, bordered: g4, className: "nextui-user-avatar", color: j2, pointer: R3, size: q3, squared: z3, src: x8, text: b6, zoomed: F3 }), o(StyledUserInfo, { className: "nextui-user-info", children: [o(StyledUserName, { className: "nextui-user-name", children: N5 }), o(StyledUserDesc, { className: "nextui-user-desc", children: y3 || U2 })] })] });
});
__DEV__ && (User.displayName = "NextUI.User"), User.toString = () => ".nextui-user";
var user_default = User;

// node_modules/@nextui-org/react/esm/user/user-link.js
init_compat_module();
var s6 = Cn.forwardRef((r14, o14) => {
  const { rel: s9 = "noopener", color: n15 = "primary", target: l13 = "_blank", className: m13, children: a13, ...c15 } = r14;
  return o(link_default2, { ref: o14, className: clsx_default("nextui-user-link", m13), color: n15, rel: s9, target: l13, ...c15, children: a13 });
});
__DEV__ && (s6.displayName = "NextUI.UserLink"), s6.toString = () => ".nextui-user-link";
var n11 = Cn.memo(s6);
var user_link_default = n11;

// node_modules/@nextui-org/react/esm/user/index.js
user_default.Link = user_link_default;
var user_default2 = user_default;

// node_modules/@nextui-org/react/esm/progress/progress.js
init_compat_module();

// node_modules/@nextui-org/react/esm/progress/progress.styles.js
var s7 = keyframes({ "0%": { left: "-40%" }, "100%": { left: "100%" } });
var StyledProgress = styled("div", { margin: 0, padding: 0, width: "100%", position: "relative", overflow: "hidden", variants: { color: { default: { $$progressColor: "$colors$primary", $$progressShadowColor: "$colors$primaryShadow" }, primary: { $$progressColor: "$colors$primary", $$progressShadowColor: "$colors$primaryShadow" }, secondary: { $$progressColor: "$colors$secondary", $$progressShadowColor: "$colors$secondaryShadow" }, success: { $$progressColor: "$colors$success", $$progressShadowColor: "$colors$successShadow" }, warning: { $$progressColor: "$colors$warning", $$progressShadowColor: "$colors$warningShadow" }, error: { $$progressColor: "$colors$error", $$progressShadowColor: "$colors$errorShadow" }, gradient: { $$progressColor: "$colors$gradient", $$progressShadowColor: "$colors$primaryShadow" } }, status: { default: { bg: "$accents2" }, primary: { bg: "$primaryLight" }, secondary: { bg: "$secondaryLight" }, success: { bg: "$successLight" }, warning: { bg: "$warningLight" }, error: { bg: "$errorLight" } }, size: { xs: { $$progressHeight: "$space$2", height: "$$progressHeight", br: "$$progressHeight" }, sm: { $$progressHeight: "$space$4", height: "$$progressHeight", br: "$$progressHeight" }, md: { $$progressHeight: "$space$8", height: "$$progressHeight", br: "$$progressHeight" }, lg: { $$progressHeight: "$space$10", height: "$$progressHeight", br: "$$progressHeight" }, xl: { $$progressHeight: "$space$11", height: "$$progressHeight", br: "$$progressHeight" } }, indeterminated: { true: { overflow: "hidden" } }, squared: { true: { br: "calc($$progressHeight * 0.25)" } } }, defaultVariants: { color: "default", status: "default", size: "md" } });
var StyledProgressBar = styled("div", { margin: 0, padding: 0, width: 0, opacity: 0, height: "100%", minWidth: "inherit", bg: "$$progressColor", br: "inherit", transition: "width 0.5s cubic-bezier(0.4, 0, 0.2, 1)", "@motion": { transition: "none" }, variants: { animated: { false: { transition: "none" } }, shadow: { true: { normalShadowVar: "$$progressShadowColor" } }, striped: { true: { backgroundImage: "linear-gradient(45deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%, transparent 50%, rgba(0, 0, 0, 0.1) 50%, rgba(0, 0, 0, 0.1) 75%, transparent 75%, transparent)", backgroundSize: "$space$lg $space$lg" } }, indeterminated: { true: { position: "absolute", width: "0%", transitionProperty: "background-color, width, left, border-color,opacity, shadow, transform", transitionDuration: "300ms", willChange: "left", minWidth: "50%", animation: `1s ease 0s infinite normal none running ${s7}` } } } });

// node_modules/@nextui-org/react/esm/progress/progress.js
var d4 = "nextui-progress";
var l7 = ({ value: e15, max: t9, min: m13, striped: l13, animated: u9, shadow: c15, indeterminated: x8, css: f5, ...g4 }) => {
  const w3 = F(() => e15 > t9 ? t9 : e15 < m13 ? m13 : e15, [e15, m13, t9]), v4 = F(() => valueToPercent(w3, m13, t9), [w3, m13, t9]);
  return o(StyledProgress, { "aria-label": "progress", "aria-valuemax": t9, "aria-valuemin": m13, "aria-valuenow": w3, css: { "nextui-progress-wrapper-enter": { opacity: 0 }, ".nextui-progress-wrapper-enter-active": { opacity: 1, width: `${v4}%` }, ...f5 }, indeterminated: x8, role: "progressbar", ...g4, children: o(css_transition_default, { visible: true, clearTime: 300, enterTime: 10, leaveTime: 20, name: `${d4}-wrapper`, children: o(StyledProgressBar, { animated: u9, className: clsx_default(`${d4}-bar`, { [`${d4}-striped`]: l13, [`${d4}-indeterminated`]: x8 }), indeterminated: x8, shadow: c15, striped: l13, ...g4 }) }) });
};
__DEV__ && (l7.displayName = "NextUI.Progress"), l7.toString = () => ".nextui-progress";
var u3 = Cn.memo(l7);
var progress_default = with_defaults_default(u3, { striped: false, animated: true, shadow: false, indeterminated: false, value: 0, min: 0, max: 100 });

// node_modules/@nextui-org/react/esm/progress/index.js
var progress_default2 = progress_default;

// node_modules/@nextui-org/react/esm/modal/modal.js
init_compat_module();
init_compat_module();

// node_modules/@nextui-org/react/esm/modal/modal-wrapper.js
init_compat_module();

// node_modules/@nextui-org/react/esm/modal/modal-close-button.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/clear-icon.js
init_compat_module();
var a8 = ({ size: e15, fill: i13, plain: a13, width: l13, height: s9, className: o14, ...h4 }) => o("svg", a13 ? { className: o14, fill: "none", height: e15 || s9, stroke: i13, strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 2, viewBox: "0 0 24 24", width: e15 || l13, ...h4, children: o("path", { d: "M18 6L6 18M6 6l12 12" }) } : { className: o14, height: e15 || s9, viewBox: "0 0 24 24", width: e15 || l13, ...h4, children: o("path", { d: "M12 2a10 10 0 1010 10A10.016 10.016 0 0012 2zm3.36 12.3a.754.754 0 010 1.06.748.748 0 01-1.06 0l-2.3-2.3-2.3 2.3a.748.748 0 01-1.06 0 .754.754 0 010-1.06l2.3-2.3-2.3-2.3A.75.75 0 019.7 8.64l2.3 2.3 2.3-2.3a.75.75 0 011.06 1.06l-2.3 2.3z", fill: i13 }) });
var l8 = x(a8);
var clear_icon_default = with_defaults_default(l8, { width: 24, height: 24, plain: false, className: "" });

// node_modules/@nextui-org/react/esm/utils/animations.js
var reboundAnimation = keyframes({ "0%": { transform: "scale(0.95)" }, "40%": { transform: "scale(1.02)" }, "80%": { transform: "scale(0.98)" }, "100%": { transform: "scale(1)" } });
var appearanceIn = keyframes({ "0%": { opacity: 0, transform: "scale(0.95)" }, "60%": { opacity: 0.75, transform: "scale(1.02)" }, "100%": { opacity: 1, transform: "scale(1)" } });
var appearanceOut = keyframes({ "0%": { opacity: 1, transform: "scale(1)" }, "100%": { opacity: 0, transform: "scale(0.95)" } });

// node_modules/@nextui-org/react/esm/modal/modal.styles.js
var StyledModalHideTab = styled("div", { outline: "none", overflow: "hidden", width: 0, height: 0, opacity: 0 });
var StyledModalCloseButton = styled("button", { position: "absolute", background: "transparent", border: "none", zIndex: "$1", top: "$space$3", right: "$space$2", margin: 0, d: "inline-flex", ai: "center", height: "auto", cursor: "pointer", boxSizing: "border-box", transition: "$default", padding: "calc($space$sm * 0.5)", color: "$accents4", br: "$space$5", svg: { color: "currentColor" }, "&:hover": { svg: { opacity: 0.8 } }, variants: { disabled: { true: { cursor: "not-allowed" } } } }, sharedFocus);
var StyledModalHeader = styled("div", { display: "flex", flexShrink: 0, ai: "center", ov: "hidden", color: "inherit", padding: "$sm $10", fs: "$xs", variants: { noPadding: { true: { padding: 0 } }, autoMargin: { true: { "> *:first-child": { mt: 0 }, "> *:last-child": { mb: 0 } } } } });
var StyledModalBody = styled("div", { display: "flex", flexDirection: "column", flex: "1 1 auto", padding: "$sm $10", oy: "auto", position: "relative", ta: "left", variants: { noPadding: { true: { flex: 1, padding: 0 } }, autoMargin: { true: { "> *:first-child": { mt: 0 }, "> *": { mb: "$8" }, "> *:last-child": { mb: 0 } } } } });
var StyledModalFooter = styled("div", { d: "flex", flexWrap: "wrap", flexShrink: 0, overflow: "hidden", color: "inherit", ai: "center", fs: "$xs", padding: "$sm $lg", variants: { noPadding: { true: { padding: 0 } }, autoMargin: { true: { "> *": { m: "$2" } } } } });
var StyledModal = styled("section", { maxWidth: "100%", verticalAlign: "middle", overflow: "hidden", height: "fit-content(20em)", maxHeight: "inherit", display: "flex", outline: "none", flexDirection: "column", position: "relative", boxSizing: "border-box", color: "$foreground", br: "$lg", boxShadow: "$lg", bg: "$backgroundContrast", animationFillMode: "forwards", "@motion": { transition: "none" }, "&.nextui-modal-wrapper-enter:not(.nextui-modal-rendered)": { animationName: appearanceIn, animationDuration: "200ms", animationTimingFunction: "ease-in", animationDirection: "normal" }, "&.nextui-modal-wrapper-leave": { animationName: appearanceOut, animationDuration: "50ms", animationTimingFunction: "ease-out" }, variants: { fullScreen: { true: { size: "100%", maxHeight: "100%" }, false: { "&.nextui-modal-rebound": { animationDuration: "250ms", animationName: reboundAnimation, animationTimingFunction: "ease", animationFillMode: "forwards" } } }, scroll: { true: { maxHeight: "calc(100vh - 200px)" } }, closeButton: { true: { paddingTop: "$lg", [`& ${StyledModalCloseButton}`]: { svg: { size: "$10" } } } } }, compoundVariants: [{ scroll: true, fullScreen: true, css: { maxHeight: "100%" } }] });

// node_modules/@nextui-org/react/esm/modal/modal-close-button.js
var a9 = ({ onClick: o14, ...a13 }) => o(StyledModalCloseButton, { "aria-label": "Close", className: "nextui-modal-close-icon", type: "button", onClick: (t9) => {
  t9.preventDefault(), t9.stopPropagation(), t9.nativeEvent.stopImmediatePropagation(), o14 && o14(t9);
}, ...a13, children: o(clear_icon_default, { plain: true, "aria-hidden": true, className: "nextui-modal-close-icon-svg", fill: "currentColor", size: 18 }) });
a9.toString = () => ".nextui-modal-close-icon";
var l9 = Cn.memo(a9);
var modal_close_button_default = l9;

// node_modules/@nextui-org/react/esm/modal/modal-wrapper.js
var x7 = "nextui-modal";
var h3 = ({ className: e15, children: l13, visible: h4, fullScreen: $2, closeButton: T3, rebound: v4, animated: j2, onCloseButtonClick: w3, scroll: y3, ...N5 }) => {
  const k6 = _(null), C4 = _(null), g4 = _(null), [B2, I2] = h(false);
  p(() => {
    const e16 = setTimeout(() => {
      I2(true), clearTimeout(e16);
    }, 300);
    return () => clearTimeout(e16);
  }, []), p(() => {
    if (!h4)
      return;
    const e16 = document.activeElement;
    isChildElement(k6.current, e16) || C4.current && C4.current.focus();
  }, [h4]);
  const S2 = (e16) => {
    const r14 = e16.keyCode === KeyCode.Tab;
    if (!h4 || !r14)
      return;
    const t9 = document.activeElement;
    e16.shiftKey ? t9 === C4.current && g4.current && g4.current.focus() : t9 === g4.current && C4.current && C4.current.focus();
  }, E2 = () => {
    w3 && w3();
  }, K = F(() => h4 ? "open" : "closed", [h4]), D3 = F(() => o(StyledModal, { ref: k6, "aria-modal": h4, className: clsx_default(x7, `${x7}--${K}`, { [`${x7}-fullscreen`]: $2, [`${x7}-with-close-button`]: T3, [`${x7}-rebound`]: v4, [`${x7}-rendered`]: B2 }, e15), closeButton: T3, "data-state": K, fullScreen: $2, role: "dialog", scroll: y3, tabIndex: -1, ...N5, onKeyDown: S2, children: [o(StyledModalHideTab, { ref: C4, "aria-hidden": "true", className: `${x7}-hide-tab`, role: "button", tabIndex: 0 }), T3 && o(modal_close_button_default, { onClick: E2 }), l13, o(StyledModalHideTab, { ref: g4, "aria-hidden": "true", className: `${x7}-hide-tab`, role: "button", tabIndex: 0 })] }), [v4, l13]);
  return o(k, { children: j2 ? o(css_transition_default, { clearTime: 300, enterTime: 20, leaveTime: 20, name: `${x7}-wrapper`, visible: h4, children: D3 }) : h4 ? D3 : null });
};
h3.toString = () => ".nextui-modal-wrapper";
var modal_wrapper_default = with_defaults_default(h3, { className: "", visible: false, rebound: false });

// node_modules/@nextui-org/react/esm/modal/modal-context.js
init_compat_module();
var o8 = {};
var ModalContext = Cn.createContext(o8);

// node_modules/@nextui-org/react/esm/modal/modal.js
var b3 = ({ children: e15, onClose: c15, onOpen: b6, open: v4, autoMargin: x8, width: g4, className: h4, preventClose: C4, blur: N5, animated: P3, fullScreen: S2, noPadding: k6, ...y3 }) => {
  const w3 = use_portal_default2("modal"), [, M2] = use_body_scroll_default2(null, { scrollLayer: true }), [j2, B2, E2] = use_current_state_default2(false), [T3, D3] = h(false), G3 = () => {
    c15 && c15(), B2(false), M2(false);
  };
  p(() => {
    void 0 !== v4 && (v4 && b6 && b6(), !v4 && E2.current && c15 && c15(), B2(v4), M2(v4));
  }, [v4]);
  const I2 = () => {
    D3(true);
    const e16 = setTimeout(() => {
      D3(false), clearTimeout(e16);
    }, 300);
  }, { bindings: L2 } = use_keyboard_default2(() => {
    C4 ? I2() : G3();
  }, KeyCode.Escape, { disableGlobalEvent: true, preventDefault: true }), O3 = F(() => ({ close: G3, autoMargin: x8, noPadding: k6 }), []);
  return w3 ? z(o(ModalContext.Provider, { value: O3, children: o(backdrop_default2, { animated: P3, blur: N5, fullScreen: S2, maxWidth: g4, visible: j2, onClick: () => {
    C4 ? I2() : G3();
  }, ...L2, children: o(modal_wrapper_default, { animated: P3, className: h4, fullScreen: S2, rebound: T3, visible: j2, onCloseButtonClick: G3, ...y3, children: e15 }) }) }), w3) : null;
};
__DEV__ && (b3.displayName = "NextUI.Modal"), b3.toString = () => ".nextui-modal", b3.defaultProps = { width: "400px", className: "", preventClose: false, fullScreen: false, closeButton: false, animated: true, blur: false, scroll: false, noPadding: false };
var modal_default = b3;

// node_modules/@nextui-org/react/esm/modal/modal-header.js
init_compat_module();
var m7 = "nextui-modal-header";
var d5 = ({ children: t9, className: r14, justify: d11, autoMargin: u9, css: c15, ...l13 }) => {
  const { autoMargin: f5, noPadding: g4 } = q(ModalContext), p7 = F(() => void 0 !== f5 ? f5 : u9, [u9, f5]);
  return o(StyledModalHeader, { autoMargin: p7, className: clsx_default(m7, { [`${m7}-auto-margin`]: p7, [`${m7}-no-padding`]: g4 }, r14), css: { justifyContent: d11, ...c15 }, noPadding: g4, ...l13, children: t9 });
};
d5.toString = () => ".nextui-modal-header";
var u4 = Cn.memo(d5);
var modal_header_default = with_defaults_default(u4, { className: "", justify: "center", autoMargin: true });

// node_modules/@nextui-org/react/esm/modal/modal-body.js
init_compat_module();
var d6 = "nextui-modal-body";
var e9 = ({ className: o14, children: r14, autoMargin: e15, ...l13 }) => {
  const { autoMargin: u9, noPadding: c15 } = q(ModalContext), g4 = F(() => void 0 !== u9 ? u9 : e15, [e15, u9]);
  return o(StyledModalBody, { autoMargin: g4, className: clsx_default(d6, { [`${d6}-auto-margin`]: g4, [`${d6}-no-padding`]: c15 }, o14), noPadding: c15, ...l13, children: r14 });
};
e9.toString = () => ".nextui-modal-body";
var l10 = Cn.memo(e9);
var modal_body_default = with_defaults_default(l10, { className: "", autoMargin: true });

// node_modules/@nextui-org/react/esm/modal/modal-footer.js
init_compat_module();
var e10 = "nextui-modal-footer";
var d7 = ({ children: t9, className: r14, justify: d11, autoMargin: l13, css: u9, ...c15 }) => {
  const { autoMargin: f5, noPadding: g4 } = q(ModalContext), p7 = F(() => void 0 !== f5 ? f5 : l13, [l13, f5]);
  return o(StyledModalFooter, { autoMargin: p7, className: clsx_default(e10, { [`${e10}-auto-margin`]: p7, [`${e10}-no-padding`]: g4 }, r14), css: { justifyContent: d11, ...u9 }, noPadding: g4, ...c15, children: t9 });
};
d7.toString = () => ".nextui-modal-footer";
var l11 = Cn.memo(d7);
var modal_footer_default = with_defaults_default(l11, { className: "", justify: "flex-end", autoMargin: true });

// node_modules/@nextui-org/react/esm/modal/index.js
modal_default.Header = modal_header_default, modal_default.Body = modal_body_default, modal_default.Footer = modal_footer_default;
var modal_default2 = modal_default;

// node_modules/@nextui-org/react/esm/modal/use-modal.js
var use_modal_default = (t9 = false) => {
  const [r14, n15, s9] = use_current_state_default2(t9);
  return { visible: r14, setVisible: n15, currentRef: s9, bindings: { open: r14, onClose: () => n15(false) } };
};

// node_modules/@nextui-org/react/esm/pagination/pagination.js
init_compat_module();

// node_modules/@nextui-org/react/esm/pagination/pagination-item.js
init_compat_module();

// node_modules/@nextui-org/react/esm/pagination/pagination.styles.js
var o9 = keyframes({ "0%": { transform: "scale(1)" }, "60%": { transform: "scale($$paginationScaleTransform)" }, "100%": { transform: "scale(1)" } });
var StyledPaginationEllipsis = styled("svg", { color: "currentColor", stroke: "currentColor", variants: { isEllipsis: { true: { transform: "0deg" } }, isBefore: { true: {} } }, compoundVariants: [{ isEllipsis: true, isBefore: true, css: { transform: "rotate(180deg)" } }] });
var StyledPaginationIcon = styled("svg", { transform: "rotate(180deg)", variants: { isPrev: { true: { transform: "rotate(0deg)" } } } });
var StyledPaginationItemContent = styled("span", { position: "relative", display: "inline-flex", alignItems: "center", top: 0, left: 0, zIndex: "$2" });
var StyledPaginationItem = styled("button", { border: "none", position: "relative", display: "inline-flex", margin: "0 $$paginationItemMargin", ai: "center", jc: "center", padding: 0, boxSizing: "border-box", tt: "capitalize", us: "none", whiteSpace: "nowrap", ta: "center", verticalAlign: "middle", bs: "none", outline: "none", height: "$$paginationSize", minWidth: "$$paginationSize", fs: "inherit", cursor: "pointer", br: "$$paginationItemRadius", color: "$text", bg: "$accents0", "@motion": { transition: "none" }, "&:hover": { bg: "$accents1" }, [`& ${StyledPaginationIcon}`]: { size: "$$paginationFontSize" }, [`& ${StyledPaginationEllipsis}`]: { size: "$$paginationFontSize" }, variants: { active: { true: { fontWeight: "$bold", cursor: "default", boxShadow: "$sm", [`& ${StyledPaginationItemContent}`]: { color: "$white" } } }, disabled: { true: { color: "$accents5", cursor: "not-allowed" } }, bordered: { true: { bg: "transparent", border: "$$paginationItemBorderWeight solid $accents2" } }, onlyDots: { true: {} }, preserveContent: { true: {} }, animated: { true: { transition: "transform 0.25s ease 0s, background 0.25s ease 0s, box-shadow 0.25s ease 0s" }, false: { transition: "none" } } }, compoundVariants: [{ onlyDots: true, preserveContent: false, css: { [`& ${StyledPaginationItemContent}`]: { display: "none" } } }, { animated: true, disabled: false, active: false, css: { "&:active": { transform: "scale($$paginationScaleTransform)", fs: "calc($$paginationFontSize * 0.9)" } } }] }, sharedFocus);
var StyledPaginationHighlight = styled("div", { position: "absolute", contain: "strict", top: "0px", zIndex: "$1", bg: "$$paginationColor", br: "$$paginationItemRadius", height: "$$paginationSize", minWidth: "$$paginationSize", animationName: `${o9}`, animationDirection: "normal", "&.nextui-pagination-highlight--moving": { transform: "scale($$paginationScaleTransform)" }, "@motion": { transition: "none", "&.nextui-pagination-highlight--moving": { transform: "scale(1)" } }, variants: { animated: { true: { animationDuration: "350ms", animationTimingFunction: "ease", transition: "left 350ms ease 0s, transform 300ms ease 0s" }, false: { animationDuration: "none", animationTimingFunction: "none", transition: "none", "&.nextui-pagination-highlight--moving": { transform: "scale(1)" } } }, noMargin: { true: { br: "$squared" } }, rounded: { true: {} }, shadow: { true: { normalShadowVar: "$$paginationShadowColor" } } }, compoundVariants: [{ rounded: true, noMargin: true, css: { br: "$pill" } }] });
var StyledPagination = styled("nav", { m: 0, p: 0, d: "inline-flex", position: "relative", fontVariant: "tabular-nums", fontFeatureSettings: "tnum", variants: { color: { default: { $$paginationColor: "$colors$primary", $$paginationShadowColor: "$colors$primaryShadow" }, primary: { $$paginationColor: "$colors$primary", $$paginationShadowColor: "$colors$primaryShadow" }, secondary: { $$paginationColor: "$colors$secondary", $$paginationShadowColor: "$colors$secondaryShadow" }, success: { $$paginationColor: "$colors$success", $$paginationShadowColor: "$colors$successShadow" }, warning: { $$paginationColor: "$colors$warning", $$paginationShadowColor: "$colors$warningShadow" }, error: { $$paginationColor: "$colors$error", $$paginationShadowColor: "$colors$errorShadow" }, gradient: { $$paginationColor: "$colors$gradient", $$paginationShadowColor: "$colors$primaryShadow" } }, size: { xs: { $$paginationWidth: "$space$10", $$paginationFontSize: "$space$5", fs: "$$paginationFontSize" }, sm: { $$paginationWidth: "$space$12", $$paginationFontSize: "$space$6", fs: "$$paginationFontSize" }, md: { $$paginationWidth: "$space$13", $$paginationFontSize: "$space$7", fs: "$$paginationFontSize" }, lg: { $$paginationWidth: "$space$14", $$paginationFontSize: "$space$8", fs: "$$paginationFontSize" }, xl: { $$paginationWidth: "$space$15", $$paginationFontSize: "$space$9", fs: "$$paginationFontSize" } }, borderWeight: { light: { $$paginationItemBorderWeight: "$borderWeights$light" }, normal: { $$paginationItemBorderWeight: "$borderWeights$normal" }, bold: { $$paginationItemBorderWeight: "$borderWeights$bold" }, extrabold: { $$paginationItemBorderWeight: "$borderWeights$extrabold" }, black: { $$paginationItemBorderWeight: "$borderWeights$black" } }, bordered: { true: {} }, onlyDots: { true: { $$paginationSize: "calc($$paginationWidth / 2)", $$paginationItemRadius: "$radii$pill", $$paginationScaleTransform: 1.05 }, false: { $$paginationSize: "$$paginationWidth", $$paginationScaleTransform: 1.1 } }, rounded: { true: { $$paginationItemRadius: "$radii$pill" }, false: { $$paginationItemRadius: "$radii$squared" } }, noMargin: { true: { $$paginationItemRadius: "0px", $$paginationItemMargin: "0", [`& ${StyledPaginationItem}:first-of-type`]: { btlr: "$squared", bblr: "$squared" }, [`& ${StyledPaginationItem}:last-of-type`]: { btrr: "$squared", bbrr: "$squared" } }, false: { $$paginationItemMargin: "$space$1" } } }, compoundVariants: [{ bordered: true, noMargin: true, css: { [`& ${StyledPaginationItem}:not(:last-child)`]: { borderRight: 0 } } }, { noMargin: true, rounded: true, css: { $$paginationItemRadius: "0px" } }, { rounded: false, noMargin: true, css: { $$paginationItemRadius: "0px" } }], defaultVariants: { color: "default", size: "md", borderWeight: "normal", onlyDots: false, noMargin: false, rounded: false } });

// node_modules/@nextui-org/react/esm/pagination/pagination-item.js
var l12 = (e15) => {
  if (e15)
    switch (e15) {
      case DOTS:
        return "dots element";
      case "<":
        return "previous page button";
      case ">":
        return "next page button";
      case "first":
        return "first page button";
      case "last":
        return "last page button";
      default:
        return `${e15} item`;
    }
};
var c7 = "nextui-pagination-item";
var d8 = ({ active: e15, value: r14, children: a13, disabled: d11, animated: m13, bordered: u9, onClick: p7, onlyDots: b6, preserveContent: f5, ...v4 }) => {
  const g4 = F(() => e15 ? `${l12(r14)} active` : l12(r14), [r14, e15]);
  return o(StyledPaginationItem, { active: e15, animated: m13, "aria-label": g4, bordered: u9, className: clsx_default(c7, { [`${c7}-active`]: e15, [`${c7}-animated`]: m13, [`${c7}-disabled`]: d11, [`${c7}-bordered`]: u9, [`${c7}-only-dots`]: b6, [`${c7}-preserve-content`]: f5 }), disabled: d11, onlyDots: b6, preserveContent: f5, tabIndex: d11 ? -1 : 0, onClick: (e16) => {
    d11 || p7 && p7(e16);
  }, ...v4, children: o(StyledPaginationItemContent, { className: `${c7}-content`, children: a13 }) });
};
d8.toString = () => ".nextui-pagination-item";
var pagination_item_default = with_defaults_default(d8, { preserveContent: false });

// node_modules/@nextui-org/react/esm/pagination/pagination-ellipsis.js
init_compat_module();
var pagination_ellipsis_default = ({ value: e15, isBefore: s9, onlyDots: l13, animated: c15, bordered: a13, onClick: d11 }) => {
  const [p7, m13] = h(false);
  return o(pagination_item_default, { animated: c15, bordered: a13, onlyDots: l13, value: e15, onClick: (e16) => d11 && d11(e16), onMouseEnter: () => m13(true), onMouseLeave: () => m13(false), children: o(StyledPaginationEllipsis, p7 ? { className: "nextui-pagination-ellipsis", fill: "none", focusable: "false", isBefore: s9, isEllipsis: true, role: "presentation", shapeRendering: "geometricPrecision", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "1.5", viewBox: "0 0 24 24", children: [o("path", { d: "M13 17l5-5-5-5" }), o("path", { d: "M6 17l5-5-5-5" })] } : { fill: "none", isBefore: s9, isEllipsis: false, shapeRendering: "geometricPrecision", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "1.5", viewBox: "0 0 24 24", children: [o("circle", { cx: "12", cy: "12", fill: "currentColor", r: "1" }), o("circle", { cx: "19", cy: "12", fill: "currentColor", r: "1" }), o("circle", { cx: "5", cy: "12", fill: "currentColor", r: "1" })] }) });
};

// node_modules/@nextui-org/react/esm/pagination/pagination-icon.js
init_compat_module();
var i8 = ({ isPrev: o14, disabled: i13, onlyDots: r14, animated: a13, bordered: s9, onClick: l13, ...d11 }) => o(pagination_item_default, { preserveContent: true, animated: a13, bordered: s9, disabled: i13, onlyDots: r14, value: o14 ? "<" : ">", onClick: (o15) => l13 && l13(o15), children: o(StyledPaginationIcon, { className: "nextui-pagination-icon", fill: "none", focusable: "false", isPrev: o14, role: "presentation", viewBox: "0 0 24 24", xmlns: "http://www.w3.org/2000/svg", ...d11, children: o("path", { d: "M15.5 19l-7-7 7-7", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: 1.5 }) }) });
i8.toString = () => ".nextui-pagination-icon";
var r9 = Cn.memo(i8);
var pagination_icon_default = r9;

// node_modules/@nextui-org/react/esm/pagination/pagination-highlight.js
init_compat_module();
var c8 = "nextui-pagination-highlight";
var m8 = ({ active: i13, shadow: m13, noMargin: u9, rounded: g4, css: l13, ...p7 }) => {
  const [d11, x8] = h(i13), [f5, h4] = h("");
  p(() => {
    if (i13 !== d11) {
      x8(i13), h4(`${c8}--moving`);
      const t9 = setTimeout(() => {
        h4(""), clearTimeout(t9);
      }, 350);
    }
  }, [i13]);
  const $2 = F(() => u9 ? `var(--nextui--paginationSize) * ${d11}` : `var(--nextui--paginationSize) * ${d11} + ${4 * d11 + 2}px`, [d11, u9]);
  return o(StyledPaginationHighlight, { "aria-hidden": true, className: clsx_default(c8, f5, { [`${c8}--rounded`]: g4, [`${c8}--active`]: i13, [`${c8}--no-margin`]: u9, [`${c8}--shadow`]: m13 }, p7.className), css: { left: "var(--nextui--paginationLeft)", ...l13 }, noMargin: u9, rounded: g4, shadow: m13, style: $3ef42575df84b30b$export$9d1611c77c2fe9282({ "--nextui--paginationLeft": `calc(${$2})` }, (null == p7 ? void 0 : p7.style) || {}), ...p7 });
};
m8.toString = () => ".nextui-pagination-highlight";
var pagination_highlight_default = m8;

// node_modules/@nextui-org/react/esm/pagination/pagination.js
var u5 = "nextui-pagination";
var c9 = ({ page: o14, initialPage: t9, onlyDots: c15, total: f5, loop: b6, siblings: x8, boundaries: h4, shadow: $2, animated: y3, bordered: v4, dotsJump: D3, controls: P3, noMargin: C4, onChange: j2, rounded: k6, ...w3 }) => {
  const { range: M2, active: N5, setPage: O3, previous: J2, next: B2, first: I2, last: S2 } = use_pagination_default({ page: o14, initialPage: t9, siblings: c15 ? 10 : x8, boundaries: c15 ? 10 : h4, total: f5, onChange: j2 }), U2 = T((o15, i13) => {
    if (o15 === DOTS) {
      const n15 = i13 < M2.indexOf(N5);
      return o(pagination_ellipsis_default, { animated: y3, bordered: v4, isBefore: n15, onlyDots: c15, value: o15, onClick: () => O3(n15 ? N5 - D3 >= 1 ? N5 - D3 : 1 : N5 + D3 <= f5 ? N5 + D3 : f5) }, `${u5}-item-${o15}-${i13}`);
    }
    return o(pagination_item_default, { active: o15 === N5, animated: y3, bordered: v4, onlyDots: c15, value: o15, onClick: () => o15 !== N5 && O3(o15), children: o15 }, `${u5}-item-${o15}-${i13}`);
  }, [f5, c15, N5, v4, y3, O3]);
  return o(StyledPagination, { bordered: v4, className: clsx_default(u5, { [`${u5}--no-margin`]: C4, [`${u5}--bordered`]: v4, [`${u5}--shadow`]: $2, [`${u5}--rounded`]: k6 }), noMargin: C4, onlyDots: c15, rounded: k6, ...w3, children: [P3 && o(pagination_icon_default, { isPrev: true, animated: y3, bordered: v4, disabled: !b6 && 1 === N5, onlyDots: c15, onClick: () => b6 && 1 === N5 ? S2() : J2() }), o(pagination_highlight_default, { active: P3 ? M2.indexOf(N5) + 1 : M2.indexOf(N5), animated: y3, noMargin: C4, rounded: k6, shadow: $2 }), M2.map(U2), P3 && o(pagination_icon_default, { animated: y3, bordered: v4, disabled: !b6 && N5 === f5, onlyDots: c15, onClick: () => b6 && N5 === f5 ? I2() : B2() })] });
};
c9.defaultProps = { shadow: false, controls: true, bordered: false, initialPage: 1, siblings: 1, boundaries: 1, dotsJump: 5, total: 1, loop: false, animated: true, onlyDots: false, noMargin: false, rounded: false }, __DEV__ && (c9.displayName = "NextUI.Pagination"), c9.toString = () => ".nextui-pagination";
var pagination_default = Cn.memo(c9);

// node_modules/@nextui-org/react/esm/pagination/index.js
var pagination_default2 = pagination_default;

// node_modules/@nextui-org/react/esm/input/input.js
init_compat_module();

// node_modules/@nextui-org/react/esm/input/input.styles.js
var StyledInputMainContainer = styled("div", { $$inputColor: "$colors$accents0", $$inputTextColor: "$colors$text", $$inputPlaceholderColor: "$colors$accents6", $$inputShadow: "$shadows$sm", $$inputBorderColor: "$colors$border", $$inputHoverBorderColor: "$colors$foreground", $$inputLabelColor: "$$inputHoverBorderColor", display: "inline-flex", flexDirection: "column", justifyContent: "center", position: "relative", boxSizing: "border-box", WebkitBoxAlign: "center", variants: { color: { default: {}, primary: { $$inputHoverBorderColor: "$colors$primary", $$inputLabelColor: "$colors$primary" }, secondary: { $$inputHoverBorderColor: "$colors$secondary", $$inputLabelColor: "$colors$secondary" }, success: { $$inputHoverBorderColor: "$colors$success", $$inputLabelColor: "$colors$success" }, warning: { $$inputHoverBorderColor: "$colors$warning", $$inputLabelColor: "$colors$warning" }, error: { $$inputHoverBorderColor: "$colors$error", $$inputLabelColor: "$colors$error" } }, status: { default: {}, primary: { $$inputColor: "$colors$primaryLight", $$inputPlaceholderColor: "$colors$primaryLightContrast", $$inputTextColor: "$colors$primaryLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$primary" }, secondary: { $$inputColor: "$colors$secondaryLight", $$inputPlaceholderColor: "$colors$secondaryLightContrast", $$inputTextColor: "$colors$secondaryLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$secondary" }, success: { $$inputColor: "$colors$successLight", $$inputPlaceholderColor: "$colors$successLightContrast", $$inputTextColor: "$colors$successLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$success" }, warning: { $$inputColor: "$colors$warningLight", $$inputPlaceholderColor: "$colors$warningLightContrast", $$inputTextColor: "$colors$warningLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$warning" }, error: { $$inputColor: "$colors$errorLight", $$inputPlaceholderColor: "$colors$errorLightContrast", $$inputTextColor: "$colors$errorLightContrast", $$inputLabelColor: "$$inputTextColor", $$inputHoverBorderColor: "$colors$error" } }, helperColor: { default: { $$inputHelperColor: "$colors$text" }, primary: { $$inputHelperColor: "$colors$primary" }, secondary: { $$inputHelperColor: "$colors$secondary" }, success: { $$inputHelperColor: "$colors$success" }, warning: { $$inputHelperColor: "$colors$warning" }, error: { $$inputHelperColor: "$colors$error" } }, borderWeight: { light: { $$inputBorderWeight: "$borderWeights$light" }, normal: { $$inputBorderWeight: "$borderWeights$normal" }, bold: { $$inputBorderWeight: "$borderWeights$bold" }, extrabold: { $$inputBorderWeight: "$borderWeights$extrabold" }, black: { $$inputBorderWeight: "$borderWeights$black" } }, size: { xs: { $$inputBorderRadius: "$space$3", $$inputFontSize: "$fontSizes$xs", $$inputHeightRatio: "1.2", br: "$$inputBorderRadius" }, sm: { $$inputBorderRadius: "$space$4", $$inputFontSize: "$fontSizes$xs", $$inputHeightRatio: "1.6", br: "$$inputBorderRadius" }, md: { $$inputBorderRadius: "$space$6", $$inputFontSize: "$fontSizes$sm", $$inputHeightRatio: "2", br: "$$inputBorderRadius" }, lg: { $$inputBorderRadius: "$space$7", $$inputFontSize: "$fontSizes$md", $$inputHeightRatio: "2.2", br: "$$inputBorderRadius" }, xl: { $$inputBorderRadius: "$space$8", $$inputFontSize: "$fontSizes$lg", $$inputHeightRatio: "2.6", br: "$$inputBorderRadius" } }, rounded: { true: { $$inputBorderRadius: "$radii$pill" } }, disabled: { true: { $$inputColor: "$colors$accents1", $$inputTextColor: "$colors$accents7", $$inputPlaceholderColor: "$colors$accents7", $$inputShadow: "$shadows$sm" } } } });
var t7 = { WebkitTextFillColor: "$$inputTextColor", WebkitBackgroundClip: "text !important", caretColor: "$$inputTextColor" };
var StyledInputContainer = styled("div", { width: "100%", br: "$$inputBorderRadius", input: { "&:-webkit-autofill": { ...t7, "&:hover": t7, "&:focus": t7, "&:active": t7 } }, "@motion": { transition: "none" }, variants: { isTextarea: { false: { display: "inline-flex", alignItems: "center", height: "calc($$inputHeightRatio * $9)" } }, focused: { true: {} }, isReadOnly: { false: {} }, underlined: { true: {} }, animated: { true: { transition: "$default" }, false: { transition: "none" } } }, compoundVariants: [{ isReadOnly: false, underlined: true, css: { transform: "none" } }, { focused: true, animated: true, isReadOnly: false, underlined: false, css: { transform: "translateY(-$space$1)" } }] });
var StyledInput = styled("input", { padding: 0, fontSize: "$$inputFontSize", bg: "transparent", border: "none", color: "$$inputTextColor", br: 0, outline: "none", size: "100%", minWidth: 0, WebkitAppearance: "none", "::placeholder": { color: "$$inputPlaceholderColor", transition: "opacity 0.25s ease 0s", MozTransition: "opacity 0.25s ease 0s", MsTransition: "opacity 0.25s ease 0s", WebkitTransition: "opacity 0.25s ease 0s" }, "@motion": { transition: "none", "&::placeholder": { transition: "none" } }, "&:disabled": { pe: "none", color: "$accents4", cursor: "not-allowed" }, variants: { isTextarea: { true: { boxShadow: "none", display: "block", size: "100%", resize: "none", border: "none", outline: "none" } }, focused: { true: { "&::placeholder": { opacity: 0, transition: "opacity 0.25s ease 0s" } } }, bordered: { true: { padding: "0 $3" } }, rounded: { true: { padding: "0 $3" } }, animated: { false: { transition: "none", "::placeholder": { transition: "none" } } }, hasLeftContent: { true: { ml: 0 } }, hasRightContent: { true: { mr: 0 } } } });
var StyledInputWrapper = styled("div", { flex: 1, position: "relative", br: "$$inputBorderRadius", bg: "$$inputColor", display: "inline-flex", verticalAlign: "middle", alignItems: "center", userSelect: "none", "@motion": { transition: "none", "&:before": { transition: "none" }, "&:after": { transition: "none" } }, variants: { focused: { true: {} }, isReadOnly: { true: {} }, bordered: { true: { bg: "transparent", border: "none", boxShadow: "0 0 0 $$inputBorderWeight $$inputBorderColor", transition: "box-shadow 0.25s ease" } }, shadow: { true: { transition: "$default" } }, disabled: { true: { cursor: "not-allowed" } }, underlined: { true: { bg: "transparent", [`& ${StyledInput}`]: { margin: "$2 $3" }, "&:before": { content: "", position: "absolute", zIndex: "$2", width: 0, bottom: 0, height: "$1", left: "50%", transform: "translate(-50%)", background: "$$inputHoverBorderColor", transition: "width 0.25s ease" }, "&:after": { content: "", position: "absolute", zIndex: "$1", bottom: 0, width: "100%", height: "$$inputBorderWeight", bg: "$$inputBorderColor" } }, false: { [`& ${StyledInput}`]: { margin: "$2 $5" } } }, animated: { false: { transition: "none", "&:before": { transition: "none" }, "&:after": { transition: "none" } } }, isTextarea: { true: { boxSizing: "border-box", width: "100%", maxWidth: "100%", height: "auto" }, false: { height: "100%" } } }, compoundVariants: [{ bordered: true, underlined: true, css: { boxShadow: "0 0 0 0px $$inputBorderColor" } }, { focused: true, underlined: true, css: { "&:before": { width: "100%" } } }, { focused: true, shadow: true, isReadOnly: false, underlined: false, css: { boxShadow: "$$inputShadow" } }, { focused: true, bordered: true, isReadOnly: false, underlined: false, css: { boxShadow: "0 0 0 $$inputBorderWeight $$inputHoverBorderColor" } }, { bordered: true, isReadOnly: false, underlined: false, css: { "&:hover": { boxShadow: "0 0 0 $$inputBorderWeight $$inputHoverBorderColor" } } }, { isTextarea: true, underlined: false, css: { [`& ${StyledInput}`]: { margin: "$xs $sm" } } }] });
var StyledHelperTextContainer = styled("div", { position: "absolute", opacity: 0, bottom: "calc($$inputHeightRatio * -$space$5)", "@motion": { transition: "none" }, variants: { animated: { true: { transition: "opacity 0.25s ease" }, false: { transition: "none" } }, withValue: { true: { opacity: 1 } } } });
var StyledHelperText = styled("p", { margin: "$1 0 0 $5", fontSize: "$space$5", color: "$$inputHelperColor" });
var StyledInputPlaceholder = styled("span", {}, sharedVisuallyHidden);
var StyledInputBlockLabel = styled("label", { d: "block", fontWeight: "$normal", color: "$$inputLabelColor", p: "0 0 0 $2", mb: "$3", fs: "$$inputFontSize", lh: "$md", WebkitTouchCallout: "none", WebkitUserSelect: "none", KhtmlUserSelect: "none", MozUserSelect: "none", MsUserSelect: "none", us: "none", "> *:first-child": { marginTop: 0 }, "> *:last-child": { mb: 0 }, "@motion": { transition: "none" }, variants: { rounded: { true: { padding: "0 0 0 $3" } }, asPlaceholder: { true: { position: "absolute", padding: 0, zIndex: "$1", left: "$space$6", top: "20%", mb: 0, cursor: "text", color: "$$inputPlaceholderColor", transition: "left 0.25s ease 0s, color 0.25s ease 0s, top 0.25s ease 0s" } }, animated: { false: { transition: "none" } }, focused: { true: { color: "$$inputHoverBorderColor" } }, underlined: { true: {} }, withValue: { true: {} }, isTextarea: { true: {} }, bordered: { true: {} }, hasContentLeft: { true: {} } }, compoundVariants: [{ underlined: true, asPlaceholder: true, css: { left: "$space$2" } }, { asPlaceholder: true, focused: true, underlined: false, isTextarea: false, css: { top: "-72%", left: "$2", cursor: "inherit" } }, { asPlaceholder: true, focused: true, underlined: true, isTextarea: false, css: { top: "-72%", left: "0px", cursor: "inherit" } }, { asPlaceholder: true, withValue: true, underlined: false, isTextarea: false, css: { color: "$$inputTextColor", top: "-72%", left: "$2", cursor: "inherit" } }, { asPlaceholder: true, withValue: true, underlined: true, isTextarea: false, css: { color: "$$inputTextColor", top: "-72%", left: "0px", cursor: "inherit" } }, { asPlaceholder: true, isTextarea: true, css: { top: "$5" } }, { asPlaceholder: true, hasContentLeft: true, css: { left: "calc($space$6 + $$inputHeightRatio * $space$7)" } }, { asPlaceholder: true, isTextarea: true, focused: true, css: { top: "calc(-$space$10 - $space$3)", left: "$2" } }, { asPlaceholder: true, isTextarea: true, withValue: true, css: { top: "-$11" } }, { asPlaceholder: true, focused: true, isTextarea: true, bordered: true, css: { top: "-$12" } }], defaultVariants: { asPlaceholder: false } });
var StyledInputLabel = styled("span", { position: "relative", display: "inline-flex", width: "initial", height: "100%", fontWeight: "$medium", ai: "center", pe: "none", margin: 0, padding: "0 $sm", color: "$$inputPlaceholderColor", fontSize: "$$inputFontSize", lineHeight: "$xs", variants: { isRight: { true: { btrr: "$$inputBorderRadius", bbrr: "$$inputBorderRadius" }, false: { btlr: "$$inputBorderRadius", bblr: "$$inputBorderRadius" } }, isDark: { true: {} }, isDefaultStatus: { true: {} }, underlined: { true: { bg: "transparent" } }, bordered: { true: { "&:after": { display: "none" }, "&:before": { display: "none" } } } }, compoundVariants: [{ isRight: true, underlined: true, css: { borderLeftColor: "$$inputPlaceholderColor", borderLeftStyle: "solid", marginLeft: "$2", borderLeftWidth: "calc($$inputBorderWeight / 2)", height: "40%" } }, { isRight: false, underlined: true, css: { borderRightColor: "$$inputPlaceholderColor", borderRightStyle: "solid", marginRight: "$2", borderRightWidth: "calc($$inputBorderWeight / 1)", height: "40%" } }, { isDefaultStatus: true, bordered: false, underlined: false, css: { bg: "$accents2" } }, { isDefaultStatus: true, bordered: false, underlined: false, isDark: true, css: { color: "$accents6" } }, { isDefaultStatus: false, bordered: true, underlined: false, css: { bg: "$$inputColor" } }, { bordered: true, isRight: true, css: { peddingRight: "$sm", paddingLeft: 0 } }, { bordered: true, isRight: false, css: { peddingLeft: "$sm", paddingRight: 0 } }], defaultVariants: { isRight: false } });
var StyledInputContent = styled("span", { variants: { applyStyles: { true: { display: "flex", boxSizing: "content-box", width: "calc($$inputHeightRatio * $space$4)", height: "100%", alignItems: "center", verticalAlign: "center", margin: 0, padding: "0 calc($$inputHeightRatio * $3)", color: "$$inputTextColor", lineHeight: "$xs", position: "relative", cursor: "default", pe: "none" } }, clickable: { true: { cursor: "pointer", pe: "auto" } } } });
var StyledInputClearButton = styled("button", { position: "absolute", right: 0, margin: 0, d: "inline-flex", ai: "center", border: "none", bg: "transparent", width: "auto", height: "auto", cursor: "pointer", boxSizing: "border-box", transition: "color 250ms ease 0s, transform 250ms ease 0s, opacity 250ms ease 0s", color: "$$inputPlaceholderColor", visibility: "hidden", transform: "translateX(20%)", opacity: 0, "&:hover": { opacity: 0.85 }, svg: { color: "currentColor", size: "calc($space$5 * $$inputHeightRatio)" }, "@motion": { transition: "none" }, variants: { visible: { true: { visibility: "visible", transform: "translateX(0)", opacity: 1 } }, underlined: { true: { padding: "0 $1" } }, animated: { false: { transition: "none" } }, hasContentRight: { true: { padding: 0, position: "relative", transform: "translateX(30%)" } }, disabled: { true: { cursor: "not-allowed", "&:hover": { color: "$accents3" } } } } });
var StyledInputClearButtonIconWrapper = styled("span", { display: "flex", br: "100%" }, cssFocusVisible);

// node_modules/@nextui-org/react/esm/input/input-props.js
var defaultProps = { disabled: false, bordered: false, readOnly: false, clearable: false, rounded: false, animated: true, underlined: false, shadow: true, fullWidth: false, contentClickable: false, contentRightStyling: true, contentLeftStyling: true, required: false, width: "initial", size: "md", color: "default", helperColor: "default", status: "default", borderWeight: "normal", autoComplete: "off", className: "", placeholder: "", initialValue: "" };

// node_modules/@nextui-org/react/esm/input/input.js
var R2 = "nextui-input";
var P2 = Cn.forwardRef(({ as: e15 = "input", label: k6, labelPlaceholder: P3, labelLeft: F3, labelRight: L2, size: B2, helperText: D3, color: T3, helperColor: V2, status: j2, contentLeft: O3, contentRight: W2, contentClickable: q3, contentLeftStyling: U2, contentRightStyling: z3, onContentClick: E2, initialValue: A3, onChange: G3, readOnly: H2, value: J2, onClearClick: K, clearable: M2, shadow: Q, animated: X, required: Y2, width: Z, className: _2, onBlur: ee, onFocus: te, autoComplete: ae, placeholder: re, fullWidth: le, borderWeight: ne, disabled: ie, bordered: oe, underlined: se, rounded: de, css: ce, ...ue }, pe) => {
  const me = _(null);
  A(pe, () => me.current);
  const [he, fe] = h(A3), [be, $e] = h(false), { isDark: ge } = use_theme_default2(), ye = F(() => void 0 !== J2, [J2]), Ce = F(() => k6 || P3, [k6, P3]), xe = F(() => P3 ? "" : re, [re, P3]), we = F(() => le ? "100%" : Z || "initial", [le, Z]);
  se && __DEV__ && (oe && warn("Using underlined and bordered at the same time will have no effect."), de && warn("Using underlined and rounded at the same time will have no effect."));
  const Ne = (e16, t9) => {
    ie || E2 && E2(e16, t9);
  };
  p(() => {
    ye && fe(J2);
  }, [ye, J2]);
  const ve = F(() => "textarea" === e15, [e15]), ke = { ...ue, ...ye ? { value: J2 } : { defaultValue: A3 } }, { isFocusVisible: Se, focusProps: Ie } = $f7dceffc5ad7768b$export$4e328f61c538687f(), { labelProps: Re, fieldProps: Pe } = $d191a55c9702f145$export$8467354a121f1b9f({ ...ke, label: Ce }), Fe = F(() => be ? "hover" : ie ? "disabled" : H2 ? "read-only" : he ? "with-value" : "normal", [be, ie, H2, he]);
  return o(StyledInputMainContainer, { borderWeight: ne, className: clsx_default(`${R2}-main-container`, `${R2}-main-container--${Fe}`), color: T3, css: { width: we, ...ce }, "data-state": Fe, disabled: ie, helperColor: V2, rounded: de, size: B2, status: j2, children: [Ce && o(StyledInputBlockLabel, { animated: X, asPlaceholder: !!P3, bordered: oe, className: `${R2}-block-label`, focused: be, hasContentLeft: !!O3, htmlFor: "htmlFor" in Re ? Re.htmlFor : "", id: Re.id, isTextarea: ve, rounded: de, underlined: se, withValue: !!he, children: Ce }), o(StyledInputContainer, { animated: X, className: clsx_default(`${R2}-container`, `${R2}-container--${Fe}`, { [`${R2}-container--input`]: !ve, [`${R2}-container--textarea`]: ve, [`${R2}-container--read-only`]: H2 }, _2), focused: be, isReadOnly: H2, isTextarea: ve, underlined: se, children: o(StyledInputWrapper, { animated: X, as: Ce ? "div" : "label", bordered: oe, className: clsx_default(`${R2}-wrapper`, `${R2}-wrapper--${Fe}`, { [`${R2}-wrapper--bordered`]: oe, [`${R2}-wrapper--underlined`]: se, [`${R2}-wrapper--shadow`]: Q }), disabled: ie, focused: be, isReadOnly: H2, isTextarea: ve, shadow: Q, underlined: se, children: [!Ce && re && o(StyledInputPlaceholder, { className: `${R2}-placeholder`, children: re }), F3 && o(StyledInputLabel, { bordered: oe, className: `${R2}-label--left`, isDark: ge, isDefaultStatus: "default" === j2, underlined: se, children: F3 }), O3 && o(StyledInputContent, { applyStyles: U2, className: clsx_default(`${R2}-content`, `${R2}-content--left`), clickable: q3, onClick: (e16) => Ne("left", e16), children: O3 }), o(StyledInput, { ref: me, "aria-multiline": ve, "aria-placeholder": xe, "aria-readonly": H2, "aria-required": Y2, as: e15, autoComplete: ae, bordered: oe, className: clsx_default({ [`${R2}`]: !ve, [`${R2}-textarea`]: ve, [`${R2}-disabled`]: ie, [`${R2}-rounded`]: de, [`${R2}-${R2}-right-content`]: W2, [`${R2}-left-content`]: O3 }), "data-state": Fe, disabled: ie, focused: be, hasLeftContent: !!O3, hasRightContent: !!W2, isTextarea: ve, placeholder: xe, readOnly: H2, required: Y2, type: "text", onBlur: (e16) => {
    $e(false), ee && ee(e16);
  }, onChange: (e16) => {
    ie || H2 || (ye || fe(e16.target.value), G3 && G3(e16));
  }, onFocus: (e16) => {
    $e(true), te && te(e16);
  }, ...ke, ...Pe }), M2 && o(StyledInputClearButton, { animated: X, "aria-label": "clear", className: `${R2}-clear-button`, disabled: ie || H2, hasContentRight: !!W2, lang: "en", type: "button", underlined: se, visible: Boolean(he), onClick: (e16) => {
    if (e16.preventDefault(), e16.stopPropagation(), e16.nativeEvent.stopImmediatePropagation(), ye || fe(""), K && K(e16), !me.current)
      return;
    const t9 = ((e17, t10) => ({ ...t10, target: e17, currentTarget: e17 }))(me.current, e16);
    t9.target.value = "", G3 && G3(t9), me.current.focus();
  }, ...Ie, children: o(StyledInputClearButtonIconWrapper, { isFocusVisible: Se, children: o(clear_icon_default, { fill: "currentColor" }) }) }), W2 && o(StyledInputContent, { applyStyles: z3, className: clsx_default(`${R2}-content`, `${R2}-content--right`), clickable: q3, onClick: (e16) => Ne("right", e16), children: W2 }), L2 && o(StyledInputLabel, { bordered: oe, className: `${R2}-label--right`, isDark: ge, isDefaultStatus: "default" === j2, isRight: true, underlined: se, children: L2 })] }) }), o(StyledHelperTextContainer, { className: `${R2}-helper-text-container`, withValue: !!D3, children: D3 && o(StyledHelperText, { className: `${R2}-helper-text`, children: D3 }) })] });
});
P2.displayName = "NextUI.Input", P2.defaultProps = defaultProps, P2.toString = () => ".nextui-input";
var input_default = P2;

// node_modules/@nextui-org/react/esm/input/input-password.js
init_compat_module();

// node_modules/@nextui-org/react/esm/input/password-icon.js
init_compat_module();
var i9 = ({ visible: r14 }) => o("svg", { className: "nextui-input-password-icon", fill: "none", height: "16", shapeRendering: "geometricPrecision", stroke: "currentColor", strokeLinecap: "round", strokeLinejoin: "round", strokeWidth: "1.5", style: { color: "currentColor" }, viewBox: "0 0 24 24", width: "16", children: o(k, r14 ? { children: [o("path", { d: "M17.94 17.94A10.07 10.07 0 0112 20c-7 0-11-8-11-8a18.45 18.45 0 015.06-5.94M9.9 4.24A9.12 9.12 0 0112 4c7 0 11 8 11 8a18.5 18.5 0 01-2.16 3.19m-6.72-1.07a3 3 0 11-4.24-4.24" }), o("path", { d: "M1 1l22 22" })] } : { children: [o("path", { d: "M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z" }), o("circle", { cx: "12", cy: "12", r: "3" })] }) });
var s8 = Cn.memo(i9);
var password_icon_default = s8;

// node_modules/@nextui-org/react/esm/input/input-password.js
var d9 = { ...defaultProps, hideToggle: false, visibleIcon: o(password_icon_default, { visible: true }), hiddenIcon: o(password_icon_default, { visible: false }) };
var u6 = Cn.forwardRef(({ hideToggle: t9, visibleIcon: n15, hiddenIcon: l13, children: p7, ...c15 }, d11) => {
  const u9 = _(null), [f5, h4] = h(false);
  A(d11, () => u9.current);
  const x8 = () => {
    h4((t10) => !t10);
  }, w3 = F(() => ({ ...c15, ref: u9, className: clsx_default("nextui-input-password", c15.className), contentClickable: true, onContentClick: x8, type: f5 ? "text" : "password" }), [c15, x8, f5, u9]), g4 = F(() => t9 ? null : f5 ? n15 : l13, [t9, f5, n15, l13]);
  return o(input_default, { contentRight: g4, ...w3, children: p7 });
});
__DEV__ && (u6.displayName = "NextUI.InputPassword"), u6.toString = () => ".nextui-input-password";
var input_password_default = with_defaults_default(u6, d9);

// node_modules/@nextui-org/react/esm/input/index.js
input_default.Password = input_password_default;
var input_default2 = input_default;

// node_modules/@nextui-org/react/esm/textarea/textarea.js
init_compat_module();

// node_modules/@nextui-org/react/esm/textarea/utils.js
var e11 = ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "boxSizing", "fontFamily", "fontSize", "fontStyle", "fontWeight", "letterSpacing", "lineHeight", "paddingBottom", "paddingLeft", "paddingRight", "paddingTop", "tabSize", "textIndent", "textRendering", "textTransform", "width", "wordBreak"];
var o10 = { "min-height": "0", "max-height": "none", height: "0", visibility: "hidden", overflow: "hidden", position: "absolute", "z-index": "-1000", top: "0", right: "0" };
var i10 = "undefined" != typeof document && !!document.documentElement.currentStyle;
var forceHiddenStyles = (t9) => {
  Object.keys(o10).forEach((e15) => {
    t9.style.setProperty(e15, o10[e15], "important");
  });
};
var getSizingData = (o14) => {
  const r14 = window.getComputedStyle(o14);
  if (null === r14)
    return null;
  const d11 = pick(e11, r14), { boxSizing: n15 } = d11;
  if ("" === n15)
    return null;
  i10 && "border-box" === n15 && (d11.width = parseFloat(d11.width) + parseFloat(d11.borderRightWidth) + parseFloat(d11.borderLeftWidth) + parseFloat(d11.paddingRight) + parseFloat(d11.paddingLeft) + "px");
  return { sizingStyle: d11, paddingSize: parseFloat(d11.paddingBottom) + parseFloat(d11.paddingTop), borderSize: parseFloat(d11.borderBottomWidth) + parseFloat(d11.borderTopWidth) };
};
var r10 = null;
var calculateNodeHeight = (t9, e15, o14 = 1, i13 = 1 / 0) => {
  r10 || (r10 = document.createElement("textarea"), r10.setAttribute("tabindex", "-1"), r10.setAttribute("aria-hidden", "true"), forceHiddenStyles(r10)), null === r10.parentNode && document.body.appendChild(r10);
  const { paddingSize: d11, borderSize: n15, sizingStyle: a13 } = t9, { boxSizing: l13 } = a13;
  Object.keys(a13).forEach((t10) => {
    const e16 = t10;
    r10.style[e16] = a13[e16];
  }), forceHiddenStyles(r10), r10.value = e15;
  let s9 = ((t10, e16) => {
    const o15 = t10.scrollHeight;
    return "border-box" === e16.sizingStyle.boxSizing ? o15 + e16.borderSize : o15 - e16.paddingSize;
  })(r10, t9);
  r10.value = "x";
  const p7 = r10.scrollHeight - d11;
  let g4 = p7 * o14;
  "border-box" === l13 && (g4 = g4 + d11 + n15), s9 = Math.max(g4, s9);
  let h4 = p7 * i13;
  return "border-box" === l13 && (h4 = h4 + d11 + n15), s9 = Math.min(h4, s9), [s9, p7];
};

// node_modules/@nextui-org/react/esm/textarea/textarea.js
var f3 = Cn.forwardRef((o14, f5) => {
  const x8 = _(null), h4 = Cn.useRef(0), d11 = Cn.useRef(), { cacheMeasurements: g4, rows: y3, maxRows: w3, minRows: R3, onChange: H2, onHeightChange: v4, css: j2, ...C4 } = o14;
  Object.keys(C4).forEach((e15) => {
    excludedInputPropsForTextarea.indexOf(e15) > -1 && delete C4[e15];
  });
  const P3 = void 0 !== C4.value;
  __DEV__ && C4.style && ("maxHeight" in C4.style && warn("Using `style.maxHeight` for <Textarea/> is not supported. Please use `maxRows`."), "minHeight" in C4.style && warn("Using `style.minHeight` for <Textarea/> is not supported. Please use `minRows`.")), A(f5, () => x8.current);
  const T3 = () => {
    const e15 = x8.current, t9 = g4 && d11.current ? d11.current : getSizingData(e15);
    if (!t9)
      return;
    d11.current = t9;
    const [r14, s9] = calculateNodeHeight(t9, P3 && C4.value || e15.value || e15.placeholder || "x", y3 || R3, y3 || w3);
    h4.current !== r14 && (h4.current = r14, e15.style.setProperty("height", `${r14}px`, "important"), v4 && v4(r14, { rowHeight: s9 }));
  };
  return "undefined" != typeof document && (y(T3), use_resize_default2(T3)), o(input_default2, { ref: x8, as: "textarea", css: j2, onChange: (e15) => {
    T3(), H2 && H2(e15);
  }, ...C4 });
});
__DEV__ && (f3.displayName = "NextUI.Textarea"), f3.toString = () => ".nextui-textarea";
var textarea_default = with_defaults_default(f3, { minRows: 3, maxRows: 6, cacheMeasurements: true, initialValue: "" });

// node_modules/@nextui-org/react/esm/textarea/index.js
var textarea_default2 = textarea_default;

// node_modules/@nextui-org/react/esm/table/table.js
init_compat_module();

// node_modules/@react-aria/grid/node_modules/@react-stately/collections/dist/import.mjs
init_compat_module();
function $c1d7fb2ec91bae71$var$Item(props) {
  return null;
}
$c1d7fb2ec91bae71$var$Item.getCollectionNode = function* getCollectionNode(props, context) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning))
    console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  yield {
    type: "item",
    props,
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems(props),
    *childNodes() {
      if (childItems)
        for (let child of childItems)
          yield {
            type: "item",
            value: child
          };
      else if (title) {
        let items = [];
        (0, Cn).Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function $c1d7fb2ec91bae71$var$hasChildItems(props) {
  if (props.hasChildItems != null)
    return props.hasChildItems;
  if (props.childItems)
    return true;
  if (props.title && (0, Cn).Children.count(props.children) > 0)
    return true;
  return false;
}
function $9fc4852771d079eb$var$Section(props) {
  return null;
}
$9fc4852771d079eb$var$Section.getCollectionNode = function* getCollectionNode2(props) {
  let { children, title, items } = props;
  yield {
    type: "section",
    props,
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items1 = [];
        (0, Cn).Children.forEach(children, (child) => {
          items1.push({
            type: "item",
            element: child
          });
        });
        yield* items1;
      }
    }
  };
};
function $c5a24bc478652b5f$export$1005530eda016c13(node, collection) {
  if (typeof collection.getChildren === "function")
    return collection.getChildren(node.key);
  return node.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f71(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, 0);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e2(iterable, index) {
  if (index < 0)
    return void 0;
  let i13 = 0;
  for (let item of iterable) {
    if (i13 === index)
      return item;
    i13++;
  }
}
function $c5a24bc478652b5f$export$7475b2c64539e4cf(iterable) {
  let lastItem = void 0;
  for (let value of iterable)
    lastItem = value;
  return lastItem;
}

// node_modules/@react-stately/virtualizer/dist/import.mjs
init_compat_module();

// node_modules/@react-stately/virtualizer/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-stately/virtualizer/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext7 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext7 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext7);
var $704cf1d3b684cc5c$var$canUseDOM7 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);

// node_modules/@react-stately/virtualizer/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c7 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bbed8b41f857bcc0$var$transitionsByElement7 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks7 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents7() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement7.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement7.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement7.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement7.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement7.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks7)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks7.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents7();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents7);
}
var $5df64b3807dc15ee$var$visualViewport7 = typeof window !== "undefined" && window.visualViewport;

// node_modules/@react-stately/virtualizer/dist/import.mjs
var $3041db3296945e6e$export$baf26146a414f24a = class {
  /**
  * Returns a copy of this point.
  */
  copy() {
    return new $3041db3296945e6e$export$baf26146a414f24a(this.x, this.y);
  }
  /**
  * Checks if two points are equal.
  */
  equals(point) {
    return this.x === point.x && this.y === point.y;
  }
  /**
  * Returns true if this point is the origin.
  */
  isOrigin() {
    return this.x === 0 && this.y === 0;
  }
  constructor(x8 = 0, y3 = 0) {
    this.x = x8;
    this.y = y3;
  }
};
var $60423f92c7f9ad87$export$c79fc6492f3af13d = class {
  /**
  * The maximum x-coordinate in the rectangle.
  */
  get maxX() {
    return this.x + this.width;
  }
  /**
  * The maximum y-coordinate in the rectangle.
  */
  get maxY() {
    return this.y + this.height;
  }
  /**
  * The area of the rectangle.
  */
  get area() {
    return this.width * this.height;
  }
  /**
  * The top left corner of the rectangle.
  */
  get topLeft() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.y);
  }
  /**
  * The top right corner of the rectangle.
  */
  get topRight() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.y);
  }
  /**
  * The bottom left corner of the rectangle.
  */
  get bottomLeft() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.x, this.maxY);
  }
  /**
  * The bottom right corner of the rectangle.
  */
  get bottomRight() {
    return new (0, $3041db3296945e6e$export$baf26146a414f24a)(this.maxX, this.maxY);
  }
  /**
  * Returns whether this rectangle intersects another rectangle.
  * @param rect - The rectangle to check.
  */
  intersects(rect) {
    return this.x <= rect.x + rect.width && rect.x <= this.x + this.width && this.y <= rect.y + rect.height && rect.y <= this.y + this.height;
  }
  /**
  * Returns whether this rectangle fully contains another rectangle.
  * @param rect - The rectangle to check.
  */
  containsRect(rect) {
    return this.x <= rect.x && this.y <= rect.y && this.maxX >= rect.maxX && this.maxY >= rect.maxY;
  }
  /**
  * Returns whether the rectangle contains the given point.
  * @param point - The point to check.
  */
  containsPoint(point) {
    return this.x <= point.x && this.y <= point.y && this.maxX >= point.x && this.maxY >= point.y;
  }
  /**
  * Returns the first corner of this rectangle (from top to bottom, left to right)
  * that is contained in the given rectangle, or null of the rectangles do not intersect.
  * @param rect - The rectangle to check.
  */
  getCornerInRect(rect) {
    for (let key of [
      "topLeft",
      "topRight",
      "bottomLeft",
      "bottomRight"
    ]) {
      if (rect.containsPoint(this[key]))
        return key;
    }
    return null;
  }
  equals(rect) {
    return rect.x === this.x && rect.y === this.y && rect.width === this.width && rect.height === this.height;
  }
  pointEquals(point) {
    return this.x === point.x && this.y === point.y;
  }
  sizeEquals(size) {
    return this.width === size.width && this.height === size.height;
  }
  /**
  * Returns the union of this Rect and another.
  */
  union(other) {
    let x8 = Math.min(this.x, other.x);
    let y3 = Math.min(this.y, other.y);
    let width = Math.max(this.maxX, other.maxX) - x8;
    let height = Math.max(this.maxY, other.maxY) - y3;
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x8, y3, width, height);
  }
  /**
  * Returns the intersection of this Rect with another.
  * If the rectangles do not intersect, an all zero Rect is returned.
  */
  intersection(other) {
    if (!this.intersects(other))
      return new $60423f92c7f9ad87$export$c79fc6492f3af13d(0, 0, 0, 0);
    let x8 = Math.max(this.x, other.x);
    let y3 = Math.max(this.y, other.y);
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(x8, y3, Math.min(this.maxX, other.maxX) - x8, Math.min(this.maxY, other.maxY) - y3);
  }
  /**
  * Returns a copy of this rectangle.
  */
  copy() {
    return new $60423f92c7f9ad87$export$c79fc6492f3af13d(this.x, this.y, this.width, this.height);
  }
  constructor(x8 = 0, y3 = 0, width = 0, height = 0) {
    this.x = x8;
    this.y = y3;
    this.width = width;
    this.height = height;
  }
};
var $3eb131dcf37ad5f8$var$perf = typeof window !== "undefined" ? window.performance : null;
var $3eb131dcf37ad5f8$var$perfNow = $3eb131dcf37ad5f8$var$perf && ($3eb131dcf37ad5f8$var$perf.now || $3eb131dcf37ad5f8$var$perf.webkitNow || $3eb131dcf37ad5f8$var$perf.msNow || $3eb131dcf37ad5f8$var$perf.mozNow);
var $3eb131dcf37ad5f8$var$getTime = $3eb131dcf37ad5f8$var$perfNow ? $3eb131dcf37ad5f8$var$perfNow.bind($3eb131dcf37ad5f8$var$perf) : function() {
  return Date.now ? Date.now() : (/* @__PURE__ */ new Date()).getTime();
};

// node_modules/@react-aria/grid/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/grid/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext8 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext8 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext8);
var $704cf1d3b684cc5c$var$canUseDOM8 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $704cf1d3b684cc5c$var$componentIds3 = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter3(isDisabled = false) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext8);
  let ref = (0, _)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, Cn).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds3.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds3.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds3.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b268(defaultId) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext8);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext8 && !$704cf1d3b684cc5c$var$canUseDOM8)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter3(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}
function $704cf1d3b684cc5c$export$535bd6ca7f90a2737() {
  let cur = (0, q)($704cf1d3b684cc5c$var$SSRContext8);
  return cur.isSSR;
}

// node_modules/@react-aria/grid/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c8 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap7 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e374(defaultId) {
  let [value, setValue] = (0, h)(defaultId);
  let nextId = (0, _)(null);
  let res = (0, $704cf1d3b684cc5c$export$619500959fc48b268)(value);
  let updateValue = (0, T)((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap7.set(res, updateValue);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c8)(() => {
    let r14 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap7.delete(r14);
    };
  }, [
    res
  ]);
  (0, p)(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f8426297(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap7.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap7.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e7(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe9287(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e7)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f8426297)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
var $65484d02dcb7eb3e$var$DOMPropNames6 = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames6 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe6 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f6(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames6.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames6.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe6.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f37(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll7())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements7(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition7(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached7 = null;
function $7215afc6de606d6b$var$supportsPreventScroll7() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached7 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached7 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached7 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached7;
}
function $7215afc6de606d6b$var$getScrollableElements7(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition7(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement8 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks8 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents8() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement8.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement8.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement8.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement8.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement8.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks8)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks8.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents8();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents8);
}
function $bbed8b41f857bcc0$export$24490316f764c4307(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement8.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks8.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed67() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $4f58c5f72bcf79f7$export$496315a1608d9602(effect, dependencies) {
  const isInitialMount = (0, _)(true);
  (0, p)(() => {
    if (isInitialMount.current)
      isInitialMount.current = false;
    else
      effect();
  }, dependencies);
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e7(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c8)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
function $62d8ded9296f3872$export$cfa2225e879387812(node) {
  if ($62d8ded9296f3872$export$2bb74740c4e19def(node))
    node = node.parentElement;
  while (node && !$62d8ded9296f3872$export$2bb74740c4e19def(node))
    node = node.parentElement;
  return node || document.scrollingElement || document.documentElement;
}
function $62d8ded9296f3872$export$2bb74740c4e19def(node) {
  let style = window.getComputedStyle(node);
  return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);
}
var $5df64b3807dc15ee$var$visualViewport8 = typeof window !== "undefined" && window.visualViewport;
var $ef06256079686ba0$var$descriptionId2 = 0;
var $ef06256079686ba0$var$descriptionNodes2 = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa17(description) {
  let [id, setId] = (0, h)(void 0);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c8)(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes2.get(description);
    if (!desc) {
      let id2 = `react-aria-description-${$ef06256079686ba0$var$descriptionId2++}`;
      setId(id2);
      let node = document.createElement("div");
      node.id = id2;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes2.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes2.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent7(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform7(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea107() {
  return $c87311424ea30a05$var$testPlatform7(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d997() {
  return $c87311424ea30a05$var$testPlatform7(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e42247() {
  return $c87311424ea30a05$var$testPlatform7(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea107() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f17() {
  return $c87311424ea30a05$export$186c6964ca17d997() || $c87311424ea30a05$export$7bef049ce92e42247();
}
function $c87311424ea30a05$export$a11b0059900ceec87() {
  return $c87311424ea30a05$var$testUserAgent7(/Android/i);
}
function $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset(scrollView, element, "top");
  let width = element.offsetWidth;
  let height = element.offsetHeight;
  let x8 = scrollView.scrollLeft;
  let y3 = scrollView.scrollTop;
  let { borderTopWidth, borderLeftWidth } = getComputedStyle(scrollView);
  let borderAdjustedX = scrollView.scrollLeft + parseInt(borderLeftWidth, 10);
  let borderAdjustedY = scrollView.scrollTop + parseInt(borderTopWidth, 10);
  let maxX = borderAdjustedX + scrollView.clientWidth;
  let maxY = borderAdjustedY + scrollView.clientHeight;
  if (offsetX <= x8)
    x8 = offsetX - parseInt(borderLeftWidth, 10);
  else if (offsetX + width > maxX)
    x8 += offsetX + width - maxX;
  if (offsetY <= borderAdjustedY)
    y3 = offsetY - parseInt(borderTopWidth, 10);
  else if (offsetY + height > maxY)
    y3 += offsetY + height - maxY;
  scrollView.scrollLeft = x8;
  scrollView.scrollTop = y3;
}
function $2f04cbc44ee30ce0$var$relativeOffset(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum = 0;
  while (child.offsetParent) {
    sum += child[prop];
    if (child.offsetParent === ancestor)
      break;
    else if (child.offsetParent.contains(ancestor)) {
      sum -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum;
}
function $2f04cbc44ee30ce0$export$c826860796309d1b(targetElement, opts) {
  if (document.contains(targetElement)) {
    let root = document.scrollingElement || document.documentElement;
    let isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
    if (!isScrollPrevented) {
      var _targetElement_scrollIntoView;
      let { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
      targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {
        block: "nearest"
      });
      let { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
        var _opts_containingElement, _opts_containingElement_scrollIntoView, _targetElement_scrollIntoView1;
        opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {
          block: "center",
          inline: "center"
        });
        (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {
          block: "nearest"
        });
      }
    } else {
      let scrollParent = (0, $62d8ded9296f3872$export$cfa2225e879387812)(targetElement);
      while (targetElement && scrollParent && targetElement !== root && scrollParent !== root) {
        $2f04cbc44ee30ce0$export$53a0910f038337bd(scrollParent, targetElement);
        targetElement = scrollParent;
        scrollParent = (0, $62d8ded9296f3872$export$cfa2225e879387812)(targetElement);
      }
    }
  }
}
function $6a7db85432448f7f$export$60278871457622de7(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec87)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf637(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/grid/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/grid/node_modules/@react-aria/i18n/dist/real-module.mjs
init_compat_module();
var $148a7a147e38ea7f$var$RTL_SCRIPTS2 = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
var $148a7a147e38ea7f$var$RTL_LANGS2 = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd7642(locale) {
  if (Intl.Locale) {
    let script = new Intl.Locale(locale).maximize().script;
    return $148a7a147e38ea7f$var$RTL_SCRIPTS2.has(script);
  }
  let lang = locale.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS2.has(lang);
}
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec52() {
  let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: (0, $148a7a147e38ea7f$export$702d680b21cbd7642)(locale) ? "rtl" : "ltr"
  };
}
var $1e5a04cdaf7d1af8$var$currentLocale2 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec52();
var $1e5a04cdaf7d1af8$var$listeners2 = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale2() {
  $1e5a04cdaf7d1af8$var$currentLocale2 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec52();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners2)
    listener($1e5a04cdaf7d1af8$var$currentLocale2);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a2() {
  let isSSR = (0, $704cf1d3b684cc5c$export$535bd6ca7f90a2737)();
  let [defaultLocale, setDefaultLocale] = (0, h)($1e5a04cdaf7d1af8$var$currentLocale2);
  (0, p)(() => {
    if ($1e5a04cdaf7d1af8$var$listeners2.size === 0)
      window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale2);
    $1e5a04cdaf7d1af8$var$listeners2.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners2.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners2.size === 0)
        window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale2);
    };
  }, []);
  if (isSSR)
    return {
      locale: "en-US",
      direction: "ltr"
    };
  return defaultLocale;
}
var $18f2051aff69b9bf$var$I18nContext2 = (0, Cn).createContext(null);
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f72() {
  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a2)();
  let context = (0, q)($18f2051aff69b9bf$var$I18nContext2);
  return context || defaultLocale;
}
var $fca6afa0e843324b$var$cache2 = /* @__PURE__ */ new WeakMap();
function $fca6afa0e843324b$var$getCachedDictionary2(strings) {
  let dictionary = $fca6afa0e843324b$var$cache2.get(strings);
  if (!dictionary) {
    dictionary = new (0, $5b160d28a433310d$export$c17fa47878dc55b6)(strings);
    $fca6afa0e843324b$var$cache2.set(strings, dictionary);
  }
  return dictionary;
}
function $fca6afa0e843324b$export$f12b703ca79dfbb12(strings) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f72)();
  let dictionary = (0, F)(() => $fca6afa0e843324b$var$getCachedDictionary2(strings), [
    strings
  ]);
  return (0, F)(() => new (0, $6db58dc88e78b024$export$2f817fcdc4b89ae0)(locale, dictionary), [
    locale,
    dictionary
  ]);
}
var $325a3faab7a68acd$var$cache2 = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d2(options) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f72)();
  let cacheKey = locale + (options ? Object.entries(options).sort((a13, b6) => a13[0] < b6[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache2.has(cacheKey))
    return $325a3faab7a68acd$var$cache2.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache2.set(cacheKey, formatter);
  return formatter;
}

// node_modules/@react-aria/grid/node_modules/@react-aria/i18n/dist/useMessageFormatter.module.mjs
init_compat_module();

// node_modules/@react-aria/grid/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/grid/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state7 = "default";
var $14c0b72509d70225$var$savedUserSelect7 = "";
var $14c0b72509d70225$var$modifiedElementMap7 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754877(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f17)()) {
    if ($14c0b72509d70225$var$state7 === "default") {
      $14c0b72509d70225$var$savedUserSelect7 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state7 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap7.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32957(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f17)()) {
    if ($14c0b72509d70225$var$state7 !== "disabled")
      return;
    $14c0b72509d70225$var$state7 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c4307)(() => {
        if ($14c0b72509d70225$var$state7 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect7 || "";
          $14c0b72509d70225$var$savedUserSelect7 = "";
          $14c0b72509d70225$var$state7 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap7.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap7.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap7.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb57 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb57.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext7(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb57));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe9287)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e7)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad217(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext7(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed67)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent7(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32957)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent7(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard7(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink7(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent7(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent7(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de7)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f37)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent7(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard7(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent7(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink7(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf637)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault7(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f37)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a46974671754877)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault7(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget7(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget7(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent7(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent7(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget7(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent7(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent7(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e32957)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault7(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de7)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f37)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget7(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent7(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent7(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent7(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f37)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a46974671754877)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById7(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget7(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById7(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget7(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32957)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e32957)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9287)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink7(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent7(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey7(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink7(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent7(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById7(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent7(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect7(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping7(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget7(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect7(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping7(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault7(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard7(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey7(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes7 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey7(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes7.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e997 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad217)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe9287)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b87 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb57));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe9287)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e7)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb57).Provider, {
    value: context
  }, children);
});
var $507fabe10e71c6fb$var$currentModality7 = null;
var $507fabe10e71c6fb$var$changeHandlers7 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners7 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus7 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently7 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers7(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers7)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey7(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea107)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent7(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus7 = true;
  if ($507fabe10e71c6fb$var$isValidKey7(e15)) {
    $507fabe10e71c6fb$var$currentModality7 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers7("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent7(e15) {
  $507fabe10e71c6fb$var$currentModality7 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus7 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers7("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent7(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de7)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus7 = true;
    $507fabe10e71c6fb$var$currentModality7 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent7(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus7 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently7) {
    $507fabe10e71c6fb$var$currentModality7 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers7("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus7 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently7 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur7() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus7 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently7 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents7() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners7)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus7 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent7, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent7, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent7, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent7, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur7, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent7, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent7, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent7, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent7, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent7, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent7, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners7 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents7();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents7);
}
function $507fabe10e71c6fb$export$b9b3dfddab17db277() {
  return $507fabe10e71c6fb$var$currentModality7 !== "pointer";
}
function $507fabe10e71c6fb$export$630ff653c5ada6a97() {
  return $507fabe10e71c6fb$var$currentModality7;
}
function $507fabe10e71c6fb$export$98e20ec92f614cfe() {
  $507fabe10e71c6fb$var$setupGlobalFocusEvents7();
  let [modality, setModality] = (0, h)($507fabe10e71c6fb$var$currentModality7);
  (0, p)(() => {
    let handler = () => {
      setModality($507fabe10e71c6fb$var$currentModality7);
    };
    $507fabe10e71c6fb$var$changeHandlers7.add(handler);
    return () => {
      $507fabe10e71c6fb$var$changeHandlers7.delete(handler);
    };
  }, []);
  return (0, $704cf1d3b684cc5c$export$535bd6ca7f90a2737)() ? null : modality;
}

// node_modules/@react-aria/grid/node_modules/@react-aria/focus/dist/import.mjs
function $6a99195332edec8b$export$80f3e147d781571c6(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a97)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c4307)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f37)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f37)(element);
}
function $645f2e67b85a24c9$var$isStyleVisible3(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible3(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a3(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible3(element) && $645f2e67b85a24c9$var$isAttributeVisible3(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a3(element.parentElement, element));
}
var $9bf71ea28793e738$var$FocusContext7 = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements7 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR7 = $9bf71ea28793e738$var$focusableElements7.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements7.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR7 = $9bf71ea28793e738$var$focusableElements7.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope7(element, scope) {
  return scope.some((node) => node.contains(element));
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa3(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR7 : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR7;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node))
        return NodeFilter.FILTER_REJECT;
      if (node.matches(selector) && (0, $645f2e67b85a24c9$export$e989c0fffaa6b27a3)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope7(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
var $9bf71ea28793e738$var$Tree6 = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode6({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope7(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree6();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode6({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode6 = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e6 = new $9bf71ea28793e738$var$Tree6();
var $e6afbd83fe6ebbd2$var$FocusableContext7 = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$FocusableProvider7(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext7.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd57 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider7);
function $83013635b024ae3d$export$eac1895992b9f3d6(ref, options) {
  let isDisabled = options === null || options === void 0 ? void 0 : options.isDisabled;
  let [hasTabbableChild, setHasTabbableChild] = (0, h)(false);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c8)(() => {
    if ((ref === null || ref === void 0 ? void 0 : ref.current) && !isDisabled) {
      let update = () => {
        if (ref.current) {
          let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa3)(ref.current, {
            tabbable: true
          });
          setHasTabbableChild(!!walker.nextNode());
        }
      };
      update();
      let observer = new MutationObserver(update);
      observer.observe(ref.current, {
        subtree: true,
        childList: true,
        attributes: true,
        attributeFilter: [
          "tabIndex",
          "disabled"
        ]
      });
      return () => {
        observer.disconnect();
      };
    }
  });
  return isDisabled ? false : hasTabbableChild;
}

// node_modules/@react-aria/selection/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/selection/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/selection/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/selection/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext9 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext9 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext9);
var $704cf1d3b684cc5c$var$canUseDOM9 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
function $704cf1d3b684cc5c$export$535bd6ca7f90a2738() {
  let cur = (0, q)($704cf1d3b684cc5c$var$SSRContext9);
  return cur.isSSR;
}

// node_modules/@react-aria/selection/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c9 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap8 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$cd8c9cb68f8426298(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap8.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap8.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e8(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe9288(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e8)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f8426298)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
function $7215afc6de606d6b$export$de79e2c695e052f38(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll8())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements8(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition8(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached8 = null;
function $7215afc6de606d6b$var$supportsPreventScroll8() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached8 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached8 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached8 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached8;
}
function $7215afc6de606d6b$var$getScrollableElements8(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition8(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement9 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks9 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents9() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement9.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement9.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement9.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement9.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement9.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks9)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks9.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents9();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents9);
}
function $bbed8b41f857bcc0$export$24490316f764c4308(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement9.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks9.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed68() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e8(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c9)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
function $62d8ded9296f3872$export$cfa2225e879387813(node) {
  if ($62d8ded9296f3872$export$2bb74740c4e19def2(node))
    node = node.parentElement;
  while (node && !$62d8ded9296f3872$export$2bb74740c4e19def2(node))
    node = node.parentElement;
  return node || document.scrollingElement || document.documentElement;
}
function $62d8ded9296f3872$export$2bb74740c4e19def2(node) {
  let style = window.getComputedStyle(node);
  return /(auto|scroll)/.test(style.overflow + style.overflowX + style.overflowY);
}
var $5df64b3807dc15ee$var$visualViewport9 = typeof window !== "undefined" && window.visualViewport;
var $ef06256079686ba0$var$descriptionId3 = 0;
var $ef06256079686ba0$var$descriptionNodes3 = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa18(description) {
  let [id, setId] = (0, h)(void 0);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c9)(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes3.get(description);
    if (!desc) {
      let id2 = `react-aria-description-${$ef06256079686ba0$var$descriptionId3++}`;
      setId(id2);
      let node = document.createElement("div");
      node.id = id2;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes3.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes3.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent8(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform8(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea108() {
  return $c87311424ea30a05$var$testPlatform8(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d998() {
  return $c87311424ea30a05$var$testPlatform8(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e42248() {
  return $c87311424ea30a05$var$testPlatform8(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea108() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f18() {
  return $c87311424ea30a05$export$186c6964ca17d998() || $c87311424ea30a05$export$7bef049ce92e42248();
}
function $c87311424ea30a05$export$e1865c3bedcd822b() {
  return $c87311424ea30a05$export$9ac100e40613ea108() || $c87311424ea30a05$export$fedb369cb70207f18();
}
function $c87311424ea30a05$export$a11b0059900ceec88() {
  return $c87311424ea30a05$var$testUserAgent8(/Android/i);
}
function $e9faafb641e167db$export$90fc3a17d93f704c8(ref, event, handler, options) {
  let handlerRef = (0, _)(handler);
  handlerRef.current = handler;
  let isDisabled = handler == null;
  (0, p)(() => {
    if (isDisabled)
      return;
    let element = ref.current;
    let handler2 = (e15) => handlerRef.current.call(this, e15);
    element.addEventListener(event, handler2, options);
    return () => {
      element.removeEventListener(event, handler2, options);
    };
  }, [
    ref,
    event,
    options,
    isDisabled
  ]);
}
function $2f04cbc44ee30ce0$export$53a0910f038337bd2(scrollView, element) {
  let offsetX = $2f04cbc44ee30ce0$var$relativeOffset2(scrollView, element, "left");
  let offsetY = $2f04cbc44ee30ce0$var$relativeOffset2(scrollView, element, "top");
  let width = element.offsetWidth;
  let height = element.offsetHeight;
  let x8 = scrollView.scrollLeft;
  let y3 = scrollView.scrollTop;
  let { borderTopWidth, borderLeftWidth } = getComputedStyle(scrollView);
  let borderAdjustedX = scrollView.scrollLeft + parseInt(borderLeftWidth, 10);
  let borderAdjustedY = scrollView.scrollTop + parseInt(borderTopWidth, 10);
  let maxX = borderAdjustedX + scrollView.clientWidth;
  let maxY = borderAdjustedY + scrollView.clientHeight;
  if (offsetX <= x8)
    x8 = offsetX - parseInt(borderLeftWidth, 10);
  else if (offsetX + width > maxX)
    x8 += offsetX + width - maxX;
  if (offsetY <= borderAdjustedY)
    y3 = offsetY - parseInt(borderTopWidth, 10);
  else if (offsetY + height > maxY)
    y3 += offsetY + height - maxY;
  scrollView.scrollLeft = x8;
  scrollView.scrollTop = y3;
}
function $2f04cbc44ee30ce0$var$relativeOffset2(ancestor, child, axis) {
  const prop = axis === "left" ? "offsetLeft" : "offsetTop";
  let sum = 0;
  while (child.offsetParent) {
    sum += child[prop];
    if (child.offsetParent === ancestor)
      break;
    else if (child.offsetParent.contains(ancestor)) {
      sum -= ancestor[prop];
      break;
    }
    child = child.offsetParent;
  }
  return sum;
}
function $2f04cbc44ee30ce0$export$c826860796309d1b2(targetElement, opts) {
  if (document.contains(targetElement)) {
    let root = document.scrollingElement || document.documentElement;
    let isScrollPrevented = window.getComputedStyle(root).overflow === "hidden";
    if (!isScrollPrevented) {
      var _targetElement_scrollIntoView;
      let { left: originalLeft, top: originalTop } = targetElement.getBoundingClientRect();
      targetElement === null || targetElement === void 0 ? void 0 : (_targetElement_scrollIntoView = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView === void 0 ? void 0 : _targetElement_scrollIntoView.call(targetElement, {
        block: "nearest"
      });
      let { left: newLeft, top: newTop } = targetElement.getBoundingClientRect();
      if (Math.abs(originalLeft - newLeft) > 1 || Math.abs(originalTop - newTop) > 1) {
        var _opts_containingElement, _opts_containingElement_scrollIntoView, _targetElement_scrollIntoView1;
        opts === null || opts === void 0 ? void 0 : (_opts_containingElement = opts.containingElement) === null || _opts_containingElement === void 0 ? void 0 : (_opts_containingElement_scrollIntoView = _opts_containingElement.scrollIntoView) === null || _opts_containingElement_scrollIntoView === void 0 ? void 0 : _opts_containingElement_scrollIntoView.call(_opts_containingElement, {
          block: "center",
          inline: "center"
        });
        (_targetElement_scrollIntoView1 = targetElement.scrollIntoView) === null || _targetElement_scrollIntoView1 === void 0 ? void 0 : _targetElement_scrollIntoView1.call(targetElement, {
          block: "nearest"
        });
      }
    } else {
      let scrollParent = (0, $62d8ded9296f3872$export$cfa2225e879387813)(targetElement);
      while (targetElement && scrollParent && targetElement !== root && scrollParent !== root) {
        $2f04cbc44ee30ce0$export$53a0910f038337bd2(scrollParent, targetElement);
        targetElement = scrollParent;
        scrollParent = (0, $62d8ded9296f3872$export$cfa2225e879387813)(targetElement);
      }
    }
  }
}
function $6a7db85432448f7f$export$60278871457622de8(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec88)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf638(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/selection/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state8 = "default";
var $14c0b72509d70225$var$savedUserSelect8 = "";
var $14c0b72509d70225$var$modifiedElementMap8 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754878(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f18)()) {
    if ($14c0b72509d70225$var$state8 === "default") {
      $14c0b72509d70225$var$savedUserSelect8 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state8 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap8.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32958(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f18)()) {
    if ($14c0b72509d70225$var$state8 !== "disabled")
      return;
    $14c0b72509d70225$var$state8 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c4308)(() => {
        if ($14c0b72509d70225$var$state8 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect8 || "";
          $14c0b72509d70225$var$savedUserSelect8 = "";
          $14c0b72509d70225$var$state8 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap8.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap8.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap8.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb58 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb58.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext8(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb58));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe9288)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e8)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad218(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext8(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed68)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent8(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32958)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent8(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard8(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink8(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent8(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent8(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de8)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f38)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent8(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard8(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent8(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink8(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf638)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault8(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f38)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a46974671754878)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault8(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget8(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget8(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent8(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent8(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget8(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent8(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent8(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e32958)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault8(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de8)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f38)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget8(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent8(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent8(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent8(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f38)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a46974671754878)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById8(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget8(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById8(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget8(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32958)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e32958)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9288)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink8(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent8(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey8(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink8(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent8(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById8(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent8(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect8(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping8(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget8(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect8(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping8(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault8(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard8(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey8(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes8 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey8(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes8.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e998 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad218)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe9288)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b88 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb58));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe9288)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e8)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb58).Provider, {
    value: context
  }, children);
});
var $507fabe10e71c6fb$var$currentModality8 = null;
var $507fabe10e71c6fb$var$changeHandlers8 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners8 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus8 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently8 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers8(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers8)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey8(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea108)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent8(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus8 = true;
  if ($507fabe10e71c6fb$var$isValidKey8(e15)) {
    $507fabe10e71c6fb$var$currentModality8 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers8("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent8(e15) {
  $507fabe10e71c6fb$var$currentModality8 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus8 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers8("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent8(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de8)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus8 = true;
    $507fabe10e71c6fb$var$currentModality8 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent8(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus8 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently8) {
    $507fabe10e71c6fb$var$currentModality8 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers8("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus8 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently8 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur8() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus8 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently8 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents8() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners8)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus8 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent8, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent8, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent8, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent8, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur8, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent8, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent8, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent8, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent8, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent8, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent8, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners8 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents8();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents8);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a98() {
  return $507fabe10e71c6fb$var$currentModality8;
}
var $8a26561d2877236e$var$DEFAULT_THRESHOLD2 = 500;
function $8a26561d2877236e$export$c24ed0104d07eab92(props) {
  let { isDisabled, onLongPressStart, onLongPressEnd, onLongPress, threshold = $8a26561d2877236e$var$DEFAULT_THRESHOLD2, accessibilityDescription } = props;
  const timeRef = (0, _)(null);
  let { addGlobalListener, removeGlobalListener } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed68)();
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad218)({
    isDisabled,
    onPressStart(e15) {
      if (e15.pointerType === "mouse" || e15.pointerType === "touch") {
        if (onLongPressStart)
          onLongPressStart({
            ...e15,
            type: "longpressstart"
          });
        timeRef.current = setTimeout(() => {
          e15.target.dispatchEvent(new PointerEvent("pointercancel", {
            bubbles: true
          }));
          if (onLongPress)
            onLongPress({
              ...e15,
              type: "longpress"
            });
          timeRef.current = null;
        }, threshold);
        if (e15.pointerType === "touch") {
          let onContextMenu = (e16) => {
            e16.preventDefault();
          };
          addGlobalListener(e15.target, "contextmenu", onContextMenu, {
            once: true
          });
          addGlobalListener(window, "pointerup", () => {
            setTimeout(() => {
              removeGlobalListener(e15.target, "contextmenu", onContextMenu);
            }, 30);
          }, {
            once: true
          });
        }
      }
    },
    onPressEnd(e15) {
      if (timeRef.current)
        clearTimeout(timeRef.current);
      if (onLongPressEnd && (e15.pointerType === "mouse" || e15.pointerType === "touch"))
        onLongPressEnd({
          ...e15,
          type: "longpressend"
        });
    }
  });
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa18)(onLongPress && !isDisabled ? accessibilityDescription : null);
  return {
    longPressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9288)(pressProps, descriptionProps)
  };
}

// node_modules/@react-aria/selection/node_modules/@react-aria/focus/dist/import.mjs
function $6a99195332edec8b$export$80f3e147d781571c7(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a98)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c4308)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f38)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f38)(element);
}
function $645f2e67b85a24c9$var$isStyleVisible4(element) {
  if (!(element instanceof HTMLElement) && !(element instanceof SVGElement))
    return false;
  let { display, visibility } = element.style;
  let isVisible = display !== "none" && visibility !== "hidden" && visibility !== "collapse";
  if (isVisible) {
    const { getComputedStyle: getComputedStyle2 } = element.ownerDocument.defaultView;
    let { display: computedDisplay, visibility: computedVisibility } = getComputedStyle2(element);
    isVisible = computedDisplay !== "none" && computedVisibility !== "hidden" && computedVisibility !== "collapse";
  }
  return isVisible;
}
function $645f2e67b85a24c9$var$isAttributeVisible4(element, childElement) {
  return !element.hasAttribute("hidden") && (element.nodeName === "DETAILS" && childElement && childElement.nodeName !== "SUMMARY" ? element.hasAttribute("open") : true);
}
function $645f2e67b85a24c9$export$e989c0fffaa6b27a4(element, childElement) {
  return element.nodeName !== "#comment" && $645f2e67b85a24c9$var$isStyleVisible4(element) && $645f2e67b85a24c9$var$isAttributeVisible4(element, childElement) && (!element.parentElement || $645f2e67b85a24c9$export$e989c0fffaa6b27a4(element.parentElement, element));
}
var $9bf71ea28793e738$var$FocusContext8 = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements8 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR8 = $9bf71ea28793e738$var$focusableElements8.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements8.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR8 = $9bf71ea28793e738$var$focusableElements8.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope8(element, scope) {
  return scope.some((node) => node.contains(element));
}
function $9bf71ea28793e738$export$2d6ec8fc375ceafa4(root, opts, scope) {
  let selector = (opts === null || opts === void 0 ? void 0 : opts.tabbable) ? $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR8 : $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR8;
  let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, {
    acceptNode(node) {
      var _opts_from;
      if (opts === null || opts === void 0 ? void 0 : (_opts_from = opts.from) === null || _opts_from === void 0 ? void 0 : _opts_from.contains(node))
        return NodeFilter.FILTER_REJECT;
      if (node.matches(selector) && (0, $645f2e67b85a24c9$export$e989c0fffaa6b27a4)(node) && (!scope || $9bf71ea28793e738$var$isElementInScope8(node, scope)) && (!(opts === null || opts === void 0 ? void 0 : opts.accept) || opts.accept(node)))
        return NodeFilter.FILTER_ACCEPT;
      return NodeFilter.FILTER_SKIP;
    }
  });
  if (opts === null || opts === void 0 ? void 0 : opts.from)
    walker.currentNode = opts.from;
  return walker;
}
var $9bf71ea28793e738$var$Tree7 = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode7({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope8(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree7();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode7({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode7 = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e7 = new $9bf71ea28793e738$var$Tree7();
var $e6afbd83fe6ebbd2$var$FocusableContext8 = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$FocusableProvider8(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext8.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd58 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider8);

// node_modules/@react-aria/selection/node_modules/@react-aria/i18n/dist/real-module.mjs
init_compat_module();
var $148a7a147e38ea7f$var$RTL_SCRIPTS3 = /* @__PURE__ */ new Set([
  "Arab",
  "Syrc",
  "Samr",
  "Mand",
  "Thaa",
  "Mend",
  "Nkoo",
  "Adlm",
  "Rohg",
  "Hebr"
]);
var $148a7a147e38ea7f$var$RTL_LANGS3 = /* @__PURE__ */ new Set([
  "ae",
  "ar",
  "arc",
  "bcc",
  "bqi",
  "ckb",
  "dv",
  "fa",
  "glk",
  "he",
  "ku",
  "mzn",
  "nqo",
  "pnb",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
]);
function $148a7a147e38ea7f$export$702d680b21cbd7643(locale) {
  if (Intl.Locale) {
    let script = new Intl.Locale(locale).maximize().script;
    return $148a7a147e38ea7f$var$RTL_SCRIPTS3.has(script);
  }
  let lang = locale.split("-")[0];
  return $148a7a147e38ea7f$var$RTL_LANGS3.has(lang);
}
function $1e5a04cdaf7d1af8$export$f09106e7c6677ec53() {
  let locale = typeof navigator !== "undefined" && (navigator.language || navigator.userLanguage) || "en-US";
  try {
    Intl.DateTimeFormat.supportedLocalesOf([
      locale
    ]);
  } catch (_err) {
    locale = "en-US";
  }
  return {
    locale,
    direction: (0, $148a7a147e38ea7f$export$702d680b21cbd7643)(locale) ? "rtl" : "ltr"
  };
}
var $1e5a04cdaf7d1af8$var$currentLocale3 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec53();
var $1e5a04cdaf7d1af8$var$listeners3 = /* @__PURE__ */ new Set();
function $1e5a04cdaf7d1af8$var$updateLocale3() {
  $1e5a04cdaf7d1af8$var$currentLocale3 = $1e5a04cdaf7d1af8$export$f09106e7c6677ec53();
  for (let listener of $1e5a04cdaf7d1af8$var$listeners3)
    listener($1e5a04cdaf7d1af8$var$currentLocale3);
}
function $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a3() {
  let isSSR = (0, $704cf1d3b684cc5c$export$535bd6ca7f90a2738)();
  let [defaultLocale, setDefaultLocale] = (0, h)($1e5a04cdaf7d1af8$var$currentLocale3);
  (0, p)(() => {
    if ($1e5a04cdaf7d1af8$var$listeners3.size === 0)
      window.addEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale3);
    $1e5a04cdaf7d1af8$var$listeners3.add(setDefaultLocale);
    return () => {
      $1e5a04cdaf7d1af8$var$listeners3.delete(setDefaultLocale);
      if ($1e5a04cdaf7d1af8$var$listeners3.size === 0)
        window.removeEventListener("languagechange", $1e5a04cdaf7d1af8$var$updateLocale3);
    };
  }, []);
  if (isSSR)
    return {
      locale: "en-US",
      direction: "ltr"
    };
  return defaultLocale;
}
var $18f2051aff69b9bf$var$I18nContext3 = (0, Cn).createContext(null);
function $18f2051aff69b9bf$export$43bb16f9c6d9e3f73() {
  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a3)();
  let context = (0, q)($18f2051aff69b9bf$var$I18nContext3);
  return context || defaultLocale;
}
var $325a3faab7a68acd$var$cache3 = /* @__PURE__ */ new Map();
function $325a3faab7a68acd$export$a16aca283550c30d3(options) {
  let { locale } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f73)();
  let cacheKey = locale + (options ? Object.entries(options).sort((a13, b6) => a13[0] < b6[0] ? -1 : 1).join() : "");
  if ($325a3faab7a68acd$var$cache3.has(cacheKey))
    return $325a3faab7a68acd$var$cache3.get(cacheKey);
  let formatter = new Intl.Collator(locale, options);
  $325a3faab7a68acd$var$cache3.set(cacheKey, formatter);
  return formatter;
}

// node_modules/@react-aria/selection/node_modules/@react-aria/i18n/dist/useMessageFormatter.module.mjs
init_compat_module();

// node_modules/@react-aria/selection/dist/import.mjs
function $feb5ffebff200149$export$d3e3bd3e26688c04(e15) {
  return (0, $c87311424ea30a05$export$e1865c3bedcd822b)() ? e15.altKey : e15.ctrlKey;
}
function $feb5ffebff200149$export$16792effe837dba3(e15) {
  if ((0, $c87311424ea30a05$export$9ac100e40613ea108)())
    return e15.metaKey;
  return e15.ctrlKey;
}
var $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS = 1e3;
function $fb3050f43d946246$export$e32c88dfddc6e1d8(options) {
  let { keyboardDelegate, selectionManager, onTypeSelect } = options;
  let state = (0, _)({
    search: "",
    timeout: null
  }).current;
  let onKeyDown = (e15) => {
    let character = $fb3050f43d946246$var$getStringForKey(e15.key);
    if (!character || e15.ctrlKey || e15.metaKey || !e15.currentTarget.contains(e15.target))
      return;
    if (character === " " && state.search.trim().length > 0) {
      e15.preventDefault();
      if (!("continuePropagation" in e15))
        e15.stopPropagation();
    }
    state.search += character;
    let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);
    if (key == null)
      key = keyboardDelegate.getKeyForSearch(state.search);
    if (key != null) {
      selectionManager.setFocusedKey(key);
      if (onTypeSelect)
        onTypeSelect(key);
    }
    clearTimeout(state.timeout);
    state.timeout = setTimeout(() => {
      state.search = "";
    }, $fb3050f43d946246$var$TYPEAHEAD_DEBOUNCE_WAIT_MS);
  };
  return {
    typeSelectProps: {
      // Using a capturing listener to catch the keydown event before
      // other hooks in order to handle the Spacebar event.
      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null
    }
  };
}
function $fb3050f43d946246$var$getStringForKey(key) {
  if (key.length === 1 || !/^[A-Z]/i.test(key))
    return key;
  return "";
}
function $ae20dd8cbca75726$export$d6daf82dcd84e87c(options) {
  let { selectionManager: manager, keyboardDelegate: delegate, ref, autoFocus = false, shouldFocusWrap = false, disallowEmptySelection = false, disallowSelectAll = false, selectOnFocus = manager.selectionBehavior === "replace", disallowTypeAhead = false, shouldUseVirtualFocus, allowsTabNavigation = false, isVirtualized, scrollRef = ref } = options;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f73)();
  let onKeyDown = (e15) => {
    if (e15.altKey && e15.key === "Tab")
      e15.preventDefault();
    if (!ref.current.contains(e15.target))
      return;
    const navigateToKey = (key, childFocus) => {
      if (key != null) {
        manager.setFocusedKey(key, childFocus);
        if (e15.shiftKey && manager.selectionMode === "multiple")
          manager.extendSelection(key);
        else if (selectOnFocus && !(0, $feb5ffebff200149$export$d3e3bd3e26688c04)(e15))
          manager.replaceSelection(key);
      }
    };
    switch (e15.key) {
      case "ArrowDown":
        if (delegate.getKeyBelow) {
          var _delegate_getFirstKey, _delegate_getFirstKey1;
          e15.preventDefault();
          let nextKey = manager.focusedKey != null ? delegate.getKeyBelow(manager.focusedKey) : (_delegate_getFirstKey = delegate.getFirstKey) === null || _delegate_getFirstKey === void 0 ? void 0 : _delegate_getFirstKey.call(delegate);
          if (nextKey == null && shouldFocusWrap)
            nextKey = (_delegate_getFirstKey1 = delegate.getFirstKey) === null || _delegate_getFirstKey1 === void 0 ? void 0 : _delegate_getFirstKey1.call(delegate, manager.focusedKey);
          navigateToKey(nextKey);
        }
        break;
      case "ArrowUp":
        if (delegate.getKeyAbove) {
          var _delegate_getLastKey, _delegate_getLastKey1;
          e15.preventDefault();
          let nextKey1 = manager.focusedKey != null ? delegate.getKeyAbove(manager.focusedKey) : (_delegate_getLastKey = delegate.getLastKey) === null || _delegate_getLastKey === void 0 ? void 0 : _delegate_getLastKey.call(delegate);
          if (nextKey1 == null && shouldFocusWrap)
            nextKey1 = (_delegate_getLastKey1 = delegate.getLastKey) === null || _delegate_getLastKey1 === void 0 ? void 0 : _delegate_getLastKey1.call(delegate, manager.focusedKey);
          navigateToKey(nextKey1);
        }
        break;
      case "ArrowLeft":
        if (delegate.getKeyLeftOf) {
          var _delegate_getFirstKey2, _delegate_getLastKey2;
          e15.preventDefault();
          let nextKey2 = delegate.getKeyLeftOf(manager.focusedKey);
          if (nextKey2 == null && shouldFocusWrap)
            nextKey2 = direction === "rtl" ? (_delegate_getFirstKey2 = delegate.getFirstKey) === null || _delegate_getFirstKey2 === void 0 ? void 0 : _delegate_getFirstKey2.call(delegate, manager.focusedKey) : (_delegate_getLastKey2 = delegate.getLastKey) === null || _delegate_getLastKey2 === void 0 ? void 0 : _delegate_getLastKey2.call(delegate, manager.focusedKey);
          navigateToKey(nextKey2, direction === "rtl" ? "first" : "last");
        }
        break;
      case "ArrowRight":
        if (delegate.getKeyRightOf) {
          var _delegate_getLastKey3, _delegate_getFirstKey3;
          e15.preventDefault();
          let nextKey3 = delegate.getKeyRightOf(manager.focusedKey);
          if (nextKey3 == null && shouldFocusWrap)
            nextKey3 = direction === "rtl" ? (_delegate_getLastKey3 = delegate.getLastKey) === null || _delegate_getLastKey3 === void 0 ? void 0 : _delegate_getLastKey3.call(delegate, manager.focusedKey) : (_delegate_getFirstKey3 = delegate.getFirstKey) === null || _delegate_getFirstKey3 === void 0 ? void 0 : _delegate_getFirstKey3.call(delegate, manager.focusedKey);
          navigateToKey(nextKey3, direction === "rtl" ? "last" : "first");
        }
        break;
      case "Home":
        if (delegate.getFirstKey) {
          e15.preventDefault();
          let firstKey = delegate.getFirstKey(manager.focusedKey, (0, $feb5ffebff200149$export$16792effe837dba3)(e15));
          manager.setFocusedKey(firstKey);
          if ((0, $feb5ffebff200149$export$16792effe837dba3)(e15) && e15.shiftKey && manager.selectionMode === "multiple")
            manager.extendSelection(firstKey);
          else if (selectOnFocus)
            manager.replaceSelection(firstKey);
        }
        break;
      case "End":
        if (delegate.getLastKey) {
          e15.preventDefault();
          let lastKey = delegate.getLastKey(manager.focusedKey, (0, $feb5ffebff200149$export$16792effe837dba3)(e15));
          manager.setFocusedKey(lastKey);
          if ((0, $feb5ffebff200149$export$16792effe837dba3)(e15) && e15.shiftKey && manager.selectionMode === "multiple")
            manager.extendSelection(lastKey);
          else if (selectOnFocus)
            manager.replaceSelection(lastKey);
        }
        break;
      case "PageDown":
        if (delegate.getKeyPageBelow) {
          e15.preventDefault();
          let nextKey4 = delegate.getKeyPageBelow(manager.focusedKey);
          navigateToKey(nextKey4);
        }
        break;
      case "PageUp":
        if (delegate.getKeyPageAbove) {
          e15.preventDefault();
          let nextKey5 = delegate.getKeyPageAbove(manager.focusedKey);
          navigateToKey(nextKey5);
        }
        break;
      case "a":
        if ((0, $feb5ffebff200149$export$16792effe837dba3)(e15) && manager.selectionMode === "multiple" && disallowSelectAll !== true) {
          e15.preventDefault();
          manager.selectAll();
        }
        break;
      case "Escape":
        e15.preventDefault();
        if (!disallowEmptySelection)
          manager.clearSelection();
        break;
      case "Tab":
        if (!allowsTabNavigation) {
          if (e15.shiftKey)
            ref.current.focus();
          else {
            let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa4)(ref.current, {
              tabbable: true
            });
            let next;
            let last;
            do {
              last = walker.lastChild();
              if (last)
                next = last;
            } while (last);
            if (next && !next.contains(document.activeElement))
              (0, $7215afc6de606d6b$export$de79e2c695e052f38)(next);
          }
          break;
        }
    }
  };
  let scrollPos = (0, _)({
    top: 0,
    left: 0
  });
  (0, $e9faafb641e167db$export$90fc3a17d93f704c8)(scrollRef, "scroll", isVirtualized ? null : () => {
    scrollPos.current = {
      top: scrollRef.current.scrollTop,
      left: scrollRef.current.scrollLeft
    };
  });
  let onFocus = (e15) => {
    if (manager.isFocused) {
      if (!e15.currentTarget.contains(e15.target))
        manager.setFocused(false);
      return;
    }
    if (!e15.currentTarget.contains(e15.target))
      return;
    manager.setFocused(true);
    if (manager.focusedKey == null) {
      let navigateToFirstKey = (key) => {
        if (key != null) {
          manager.setFocusedKey(key);
          if (selectOnFocus)
            manager.replaceSelection(key);
        }
      };
      let relatedTarget = e15.relatedTarget;
      var _manager_lastSelectedKey, _manager_firstSelectedKey;
      if (relatedTarget && e15.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING)
        navigateToFirstKey((_manager_lastSelectedKey = manager.lastSelectedKey) !== null && _manager_lastSelectedKey !== void 0 ? _manager_lastSelectedKey : delegate.getLastKey());
      else
        navigateToFirstKey((_manager_firstSelectedKey = manager.firstSelectedKey) !== null && _manager_firstSelectedKey !== void 0 ? _manager_firstSelectedKey : delegate.getFirstKey());
    } else if (!isVirtualized) {
      scrollRef.current.scrollTop = scrollPos.current.top;
      scrollRef.current.scrollLeft = scrollPos.current.left;
    }
    if (!isVirtualized && manager.focusedKey != null) {
      let element = scrollRef.current.querySelector(`[data-key="${manager.focusedKey}"]`);
      if (element) {
        (0, $7215afc6de606d6b$export$de79e2c695e052f38)(element);
        (0, $2f04cbc44ee30ce0$export$53a0910f038337bd2)(scrollRef.current, element);
      }
    }
  };
  let onBlur = (e15) => {
    if (!e15.currentTarget.contains(e15.relatedTarget))
      manager.setFocused(false);
  };
  const autoFocusRef = (0, _)(autoFocus);
  (0, p)(() => {
    if (autoFocusRef.current) {
      let focusedKey = null;
      if (autoFocus === "first")
        focusedKey = delegate.getFirstKey();
      if (autoFocus === "last")
        focusedKey = delegate.getLastKey();
      let selectedKeys = manager.selectedKeys;
      if (selectedKeys.size)
        focusedKey = selectedKeys.values().next().value;
      manager.setFocused(true);
      manager.setFocusedKey(focusedKey);
      if (focusedKey == null && !shouldUseVirtualFocus)
        (0, $6a99195332edec8b$export$80f3e147d781571c7)(ref.current);
    }
    autoFocusRef.current = false;
  }, []);
  (0, p)(() => {
    let modality = (0, $507fabe10e71c6fb$export$630ff653c5ada6a98)();
    if (!isVirtualized && manager.isFocused && manager.focusedKey != null && (scrollRef === null || scrollRef === void 0 ? void 0 : scrollRef.current)) {
      let element = scrollRef.current.querySelector(`[data-key="${manager.focusedKey}"]`);
      if (element) {
        (0, $2f04cbc44ee30ce0$export$53a0910f038337bd2)(scrollRef.current, element);
        if (modality === "keyboard")
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b2)(element, {
            containingElement: ref.current
          });
      }
    }
  }, [
    isVirtualized,
    scrollRef,
    manager.focusedKey,
    manager.isFocused,
    ref
  ]);
  let handlers = {
    onKeyDown,
    onFocus,
    onBlur,
    onMouseDown(e15) {
      if (scrollRef.current === e15.target)
        e15.preventDefault();
    }
  };
  let { typeSelectProps } = (0, $fb3050f43d946246$export$e32c88dfddc6e1d8)({
    keyboardDelegate: delegate,
    selectionManager: manager
  });
  if (!disallowTypeAhead)
    handlers = (0, $3ef42575df84b30b$export$9d1611c77c2fe9288)(typeSelectProps, handlers);
  let tabIndex;
  if (!shouldUseVirtualFocus)
    tabIndex = manager.focusedKey == null ? 0 : -1;
  return {
    collectionProps: {
      ...handlers,
      tabIndex
    }
  };
}
function $880e95eb8b93ba9a$export$ecf600387e221c37(options) {
  let { selectionManager: manager, key, ref, shouldSelectOnPressUp, isVirtualized, shouldUseVirtualFocus, focus, isDisabled, onAction, allowsDifferentPressOrigin } = options;
  let onSelect = (e15) => {
    if (e15.pointerType === "keyboard" && (0, $feb5ffebff200149$export$d3e3bd3e26688c04)(e15))
      manager.toggleSelection(key);
    else {
      if (manager.selectionMode === "none")
        return;
      if (manager.selectionMode === "single") {
        if (manager.isSelected(key) && !manager.disallowEmptySelection)
          manager.toggleSelection(key);
        else
          manager.replaceSelection(key);
      } else if (e15 && e15.shiftKey)
        manager.extendSelection(key);
      else if (manager.selectionBehavior === "toggle" || e15 && ((0, $feb5ffebff200149$export$16792effe837dba3)(e15) || e15.pointerType === "touch" || e15.pointerType === "virtual"))
        manager.toggleSelection(key);
      else
        manager.replaceSelection(key);
    }
  };
  (0, p)(() => {
    let isFocused = key === manager.focusedKey;
    if (isFocused && manager.isFocused && !shouldUseVirtualFocus) {
      if (focus)
        focus();
      else if (document.activeElement !== ref.current)
        (0, $6a99195332edec8b$export$80f3e147d781571c7)(ref.current);
    }
  }, [
    ref,
    key,
    manager.focusedKey,
    manager.childFocusStrategy,
    manager.isFocused,
    shouldUseVirtualFocus
  ]);
  isDisabled = isDisabled || manager.isDisabled(key);
  let itemProps = {};
  if (!shouldUseVirtualFocus && !isDisabled)
    itemProps = {
      tabIndex: key === manager.focusedKey ? 0 : -1,
      onFocus(e15) {
        if (e15.target === ref.current)
          manager.setFocusedKey(key);
      }
    };
  else if (isDisabled)
    itemProps.onMouseDown = (e15) => {
      e15.preventDefault();
    };
  let allowsSelection = !isDisabled && manager.canSelectItem(key);
  let allowsActions = onAction && !isDisabled;
  let hasPrimaryAction = allowsActions && (manager.selectionBehavior === "replace" ? !allowsSelection : manager.isEmpty);
  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === "replace";
  let hasAction = hasPrimaryAction || hasSecondaryAction;
  let modality = (0, _)(null);
  let longPressEnabled = hasAction && allowsSelection;
  let longPressEnabledOnPressStart = (0, _)(false);
  let hadPrimaryActionOnPressStart = (0, _)(false);
  let itemPressProps = {};
  if (shouldSelectOnPressUp) {
    itemPressProps.onPressStart = (e15) => {
      modality.current = e15.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      if (e15.pointerType === "keyboard" && (!hasAction || $880e95eb8b93ba9a$var$isSelectionKey()))
        onSelect(e15);
    };
    if (!allowsDifferentPressOrigin)
      itemPressProps.onPress = (e15) => {
        if (hasPrimaryAction || hasSecondaryAction && e15.pointerType !== "mouse") {
          if (e15.pointerType === "keyboard" && !$880e95eb8b93ba9a$var$isActionKey())
            return;
          onAction();
        } else if (e15.pointerType !== "keyboard")
          onSelect(e15);
      };
    else {
      itemPressProps.onPressUp = (e15) => {
        if (e15.pointerType !== "keyboard")
          onSelect(e15);
      };
      itemPressProps.onPress = hasPrimaryAction ? () => onAction() : null;
    }
  } else {
    itemPressProps.onPressStart = (e15) => {
      modality.current = e15.pointerType;
      longPressEnabledOnPressStart.current = longPressEnabled;
      hadPrimaryActionOnPressStart.current = hasPrimaryAction;
      if (e15.pointerType === "mouse" && !hasPrimaryAction || e15.pointerType === "keyboard" && (!onAction || $880e95eb8b93ba9a$var$isSelectionKey()))
        onSelect(e15);
    };
    itemPressProps.onPress = (e15) => {
      if (e15.pointerType === "touch" || e15.pointerType === "pen" || e15.pointerType === "virtual" || e15.pointerType === "keyboard" && hasAction && $880e95eb8b93ba9a$var$isActionKey() || e15.pointerType === "mouse" && hadPrimaryActionOnPressStart.current) {
        if (hasAction)
          onAction();
        else
          onSelect(e15);
      }
    };
  }
  if (!isVirtualized)
    itemProps["data-key"] = key;
  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;
  let { pressProps, isPressed } = (0, $f6c31cce2adf654f$export$45712eceda6fad218)(itemPressProps);
  let onDoubleClick = hasSecondaryAction ? (e15) => {
    if (modality.current === "mouse") {
      e15.stopPropagation();
      e15.preventDefault();
      onAction();
    }
  } : void 0;
  let { longPressProps } = (0, $8a26561d2877236e$export$c24ed0104d07eab92)({
    isDisabled: !longPressEnabled,
    onLongPress(e15) {
      if (e15.pointerType === "touch") {
        onSelect(e15);
        manager.setSelectionBehavior("toggle");
      }
    }
  });
  let onDragStartCapture = (e15) => {
    if (modality.current === "touch" && longPressEnabledOnPressStart.current)
      e15.preventDefault();
  };
  return {
    itemProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9288)(itemProps, allowsSelection || hasPrimaryAction ? pressProps : {}, longPressEnabled ? longPressProps : {}, {
      onDoubleClick,
      onDragStartCapture
    }),
    isPressed,
    isSelected: manager.isSelected(key),
    isFocused: manager.isFocused && manager.focusedKey === key,
    isDisabled,
    allowsSelection,
    hasAction
  };
}
function $880e95eb8b93ba9a$var$isActionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === "Enter";
}
function $880e95eb8b93ba9a$var$isSelectionKey() {
  let event = window.event;
  return (event === null || event === void 0 ? void 0 : event.key) === " " || (event === null || event === void 0 ? void 0 : event.code) === "Space";
}
var $2a25aae57d74318e$export$a05409b8bb224a5a = class {
  getKeyBelow(key) {
    key = this.collection.getKeyAfter(key);
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyAfter(key);
    }
    return null;
  }
  getKeyAbove(key) {
    key = this.collection.getKeyBefore(key);
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  getKeyRightOf(key) {
    if (this.orientation === "horizontal")
      return this.direction === "rtl" ? this.getKeyAbove(key) : this.getKeyBelow(key);
    return null;
  }
  getKeyLeftOf(key) {
    if (this.orientation === "horizontal")
      return this.direction === "rtl" ? this.getKeyBelow(key) : this.getKeyAbove(key);
    return null;
  }
  getFirstKey() {
    let key = this.collection.getFirstKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyAfter(key);
    }
    return null;
  }
  getLastKey() {
    let key = this.collection.getLastKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (item.type === "item" && !this.disabledKeys.has(key))
        return key;
      key = this.collection.getKeyBefore(key);
    }
    return null;
  }
  getItem(key) {
    return this.ref.current.querySelector(`[data-key="${key}"]`);
  }
  getKeyPageAbove(key) {
    let menu = this.ref.current;
    let item = this.getItem(key);
    if (!item)
      return null;
    if (!(0, $62d8ded9296f3872$export$2bb74740c4e19def2)(menu))
      return this.getFirstKey();
    let containerRect = menu.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let containerX = containerRect.x - menu.scrollLeft;
      let pageX = Math.max(0, itemRect.x - containerX + itemRect.width - containerRect.width);
      while (item && itemRect.x - containerX > pageX) {
        key = this.getKeyAbove(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    } else {
      let containerY = containerRect.y - menu.scrollTop;
      let pageY = Math.max(0, itemRect.y - containerY + itemRect.height - containerRect.height);
      while (item && itemRect.y - containerY > pageY) {
        key = this.getKeyAbove(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    }
    return key !== null && key !== void 0 ? key : this.getFirstKey();
  }
  getKeyPageBelow(key) {
    let menu = this.ref.current;
    let item = this.getItem(key);
    if (!item)
      return null;
    if (!(0, $62d8ded9296f3872$export$2bb74740c4e19def2)(menu))
      return this.getLastKey();
    let containerRect = menu.getBoundingClientRect();
    let itemRect = item.getBoundingClientRect();
    if (this.orientation === "horizontal") {
      let containerX = containerRect.x - menu.scrollLeft;
      let pageX = Math.min(menu.scrollWidth, itemRect.x - containerX - itemRect.width + containerRect.width);
      while (item && itemRect.x - containerX < pageX) {
        key = this.getKeyBelow(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    } else {
      let containerY = containerRect.y - menu.scrollTop;
      let pageY = Math.min(menu.scrollHeight, itemRect.y - containerY - itemRect.height + containerRect.height);
      while (item && itemRect.y - containerY < pageY) {
        key = this.getKeyBelow(key);
        item = key == null ? null : this.getItem(key);
        itemRect = item === null || item === void 0 ? void 0 : item.getBoundingClientRect();
      }
    }
    return key !== null && key !== void 0 ? key : this.getLastKey();
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey || this.getFirstKey();
    while (key != null) {
      let item = collection.getItem(key);
      let substring = item.textValue.slice(0, search.length);
      if (item.textValue && this.collator.compare(substring, search) === 0)
        return key;
      key = this.getKeyBelow(key);
    }
    return null;
  }
  constructor(...args) {
    if (args.length === 1) {
      let opts = args[0];
      this.collection = opts.collection;
      this.ref = opts.ref;
      this.disabledKeys = opts.disabledKeys || /* @__PURE__ */ new Set();
      this.orientation = opts.orientation;
      this.direction = opts.direction;
    } else {
      this.collection = args[0];
      this.disabledKeys = args[1];
      this.ref = args[2];
      this.collator = args[3];
    }
  }
};
function $982254629710d113$export$b95089534ab7c1fd(props) {
  let { selectionManager, collection, disabledKeys, ref, keyboardDelegate, autoFocus, shouldFocusWrap, isVirtualized, disallowEmptySelection, selectOnFocus = selectionManager.selectionBehavior === "replace", disallowTypeAhead, shouldUseVirtualFocus, allowsTabNavigation } = props;
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d3)({
    usage: "search",
    sensitivity: "base"
  });
  let disabledBehavior = selectionManager.disabledBehavior;
  let delegate = (0, F)(() => keyboardDelegate || new (0, $2a25aae57d74318e$export$a05409b8bb224a5a)(collection, disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : disabledKeys, ref, collator), [
    keyboardDelegate,
    collection,
    disabledKeys,
    ref,
    collator,
    disabledBehavior
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    ref,
    selectionManager,
    keyboardDelegate: delegate,
    autoFocus,
    shouldFocusWrap,
    disallowEmptySelection,
    selectOnFocus,
    disallowTypeAhead,
    shouldUseVirtualFocus,
    allowsTabNavigation,
    isVirtualized,
    scrollRef: ref
  });
  return {
    listProps: collectionProps
  };
}

// node_modules/@react-aria/live-announcer/dist/import.mjs
var $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY = 7e3;
var $319e236875307eab$var$liveAnnouncer = null;
function $319e236875307eab$export$a9b970dcc4ae71a9(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
  if (!$319e236875307eab$var$liveAnnouncer)
    $319e236875307eab$var$liveAnnouncer = new $319e236875307eab$var$LiveAnnouncer();
  $319e236875307eab$var$liveAnnouncer.announce(message, assertiveness, timeout);
}
var $319e236875307eab$var$LiveAnnouncer = class {
  createLog(ariaLive) {
    let node = document.createElement("div");
    node.setAttribute("role", "log");
    node.setAttribute("aria-live", ariaLive);
    node.setAttribute("aria-relevant", "additions");
    return node;
  }
  destroy() {
    if (!this.node)
      return;
    document.body.removeChild(this.node);
    this.node = null;
  }
  announce(message, assertiveness = "assertive", timeout = $319e236875307eab$var$LIVEREGION_TIMEOUT_DELAY) {
    if (!this.node)
      return;
    let node = document.createElement("div");
    node.textContent = message;
    if (assertiveness === "assertive")
      this.assertiveLog.appendChild(node);
    else
      this.politeLog.appendChild(node);
    if (message !== "")
      setTimeout(() => {
        node.remove();
      }, timeout);
  }
  clear(assertiveness) {
    if (!this.node)
      return;
    if (!assertiveness || assertiveness === "assertive")
      this.assertiveLog.innerHTML = "";
    if (!assertiveness || assertiveness === "polite")
      this.politeLog.innerHTML = "";
  }
  constructor() {
    this.node = document.createElement("div");
    this.node.dataset.liveAnnouncer = "true";
    Object.assign(this.node.style, {
      border: 0,
      clip: "rect(0 0 0 0)",
      clipPath: "inset(50%)",
      height: "1px",
      margin: "-1px",
      overflow: "hidden",
      padding: 0,
      position: "absolute",
      width: "1px",
      whiteSpace: "nowrap"
    });
    this.assertiveLog = this.createLog("assertive");
    this.node.appendChild(this.assertiveLog);
    this.politeLog = this.createLog("polite");
    this.node.appendChild(this.politeLog);
    document.body.prepend(this.node);
  }
};

// node_modules/@react-aria/grid/dist/import.mjs
function $parcel$interopDefault2(a13) {
  return a13 && a13.__esModule ? a13.default : a13;
}
var $d1c300d9c497e402$export$de9feff04fda126e = class {
  isCell(node) {
    return node.type === "cell";
  }
  isRow(node) {
    return node.type === "row" || node.type === "item";
  }
  findPreviousKey(fromKey, pred) {
    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (!this.disabledKeys.has(key) && (!pred || pred(item)))
        return key;
      key = this.collection.getKeyBefore(key);
    }
  }
  findNextKey(fromKey, pred) {
    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();
    while (key != null) {
      let item = this.collection.getItem(key);
      if (!this.disabledKeys.has(key) && (!pred || pred(item)))
        return key;
      key = this.collection.getKeyAfter(key);
    }
  }
  getKeyBelow(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (this.isCell(startItem))
      key = startItem.parentKey;
    key = this.findNextKey(key);
    if (key != null) {
      if (this.isCell(startItem)) {
        let item = this.collection.getItem(key);
        return (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection), startItem.index).key;
      }
      if (this.focusMode === "row")
        return key;
    }
  }
  getKeyAbove(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (this.isCell(startItem))
      key = startItem.parentKey;
    key = this.findPreviousKey(key);
    if (key != null) {
      if (this.isCell(startItem)) {
        let item = this.collection.getItem(key);
        return (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection), startItem.index).key;
      }
      if (this.focusMode === "row")
        return key;
    }
  }
  getKeyRightOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (this.isRow(item)) {
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection);
      return this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children).key : (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(children).key;
    }
    if (this.isCell(item)) {
      let parent = this.collection.getItem(item.parentKey);
      let children1 = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
      let next = this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children1, item.index - 1) : (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children1, item.index + 1);
      if (next)
        return next.key;
      if (this.focusMode === "row")
        return item.parentKey;
      return this.direction === "rtl" ? this.getFirstKey(key) : this.getLastKey(key);
    }
  }
  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (this.isRow(item)) {
      let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection);
      return this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)(children).key : (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children).key;
    }
    if (this.isCell(item)) {
      let parent = this.collection.getItem(item.parentKey);
      let children1 = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
      let prev = this.direction === "rtl" ? (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children1, item.index + 1) : (0, $c5a24bc478652b5f$export$5f3398f8733f90e2)(children1, item.index - 1);
      if (prev)
        return prev.key;
      if (this.focusMode === "row")
        return item.parentKey;
      return this.direction === "rtl" ? this.getLastKey(key) : this.getFirstKey(key);
    }
  }
  getFirstKey(key, global) {
    let item;
    if (key != null) {
      item = this.collection.getItem(key);
      if (!item)
        return;
      if (this.isCell(item) && !global) {
        let parent = this.collection.getItem(item.parentKey);
        return (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection)).key;
      }
    }
    key = this.findNextKey();
    if (key != null && item && this.isCell(item) && global || this.focusMode === "cell") {
      let item1 = this.collection.getItem(key);
      key = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item1, this.collection)).key;
    }
    return key;
  }
  getLastKey(key, global) {
    let item;
    if (key != null) {
      item = this.collection.getItem(key);
      if (!item)
        return;
      if (this.isCell(item) && !global) {
        let parent = this.collection.getItem(item.parentKey);
        let children = (0, $c5a24bc478652b5f$export$1005530eda016c13)(parent, this.collection);
        return (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children).key;
      }
    }
    key = this.findPreviousKey();
    if (key != null && item && this.isCell(item) && global || this.focusMode === "cell") {
      let item1 = this.collection.getItem(key);
      let children1 = (0, $c5a24bc478652b5f$export$1005530eda016c13)(item1, this.collection);
      key = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf)(children1).key;
    }
    return key;
  }
  getItem(key) {
    return this.ref.current.querySelector(`[data-key="${key}"]`);
  }
  getItemRect(key) {
    var _this_layout_getLayoutInfo;
    if (this.layout)
      return (_this_layout_getLayoutInfo = this.layout.getLayoutInfo(key)) === null || _this_layout_getLayoutInfo === void 0 ? void 0 : _this_layout_getLayoutInfo.rect;
    let item = this.getItem(key);
    if (item)
      return new (0, $60423f92c7f9ad87$export$c79fc6492f3af13d)(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);
  }
  getPageHeight() {
    var _this_layout_virtualizer, _this_ref, _this_ref_current;
    if (this.layout)
      return (_this_layout_virtualizer = this.layout.virtualizer) === null || _this_layout_virtualizer === void 0 ? void 0 : _this_layout_virtualizer.visibleRect.height;
    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.offsetHeight;
  }
  getContentHeight() {
    var _this_ref, _this_ref_current;
    if (this.layout)
      return this.layout.getContentSize().height;
    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.scrollHeight;
  }
  getKeyPageAbove(key) {
    let itemRect = this.getItemRect(key);
    if (!itemRect)
      return null;
    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());
    while (itemRect && itemRect.y > pageY) {
      key = this.getKeyAbove(key);
      itemRect = this.getItemRect(key);
    }
    return key;
  }
  getKeyPageBelow(key) {
    let itemRect = this.getItemRect(key);
    if (!itemRect)
      return null;
    let pageHeight = this.getPageHeight();
    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);
    while (itemRect && itemRect.maxY < pageY) {
      let nextKey = this.getKeyBelow(key);
      itemRect = this.getItemRect(nextKey);
      if (nextKey != null)
        key = nextKey;
    }
    return key;
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();
    let startItem = collection.getItem(key);
    if (startItem.type === "cell")
      key = startItem.parentKey;
    let hasWrapped = false;
    while (key != null) {
      let item = collection.getItem(key);
      if (item.textValue) {
        let substring = item.textValue.slice(0, search.length);
        if (this.collator.compare(substring, search) === 0) {
          if (this.isRow(item) && this.focusMode === "cell")
            return (0, $c5a24bc478652b5f$export$fbdeaa6a76694f71)((0, $c5a24bc478652b5f$export$1005530eda016c13)(item, this.collection)).key;
          return item.key;
        }
      }
      key = this.findNextKey(key);
      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }
    return null;
  }
  constructor(options) {
    this.collection = options.collection;
    this.disabledKeys = options.disabledKeys;
    this.ref = options.ref;
    this.direction = options.direction;
    this.collator = options.collator;
    this.layout = options.layout;
    this.focusMode = options.focusMode || "row";
  }
};
var $1af922eb41e03c8f$export$e6235c0d09b995d0 = /* @__PURE__ */ new WeakMap();
var $1dbe5ffd32adb38c$exports = {};
var $682989befd4f478d$exports = {};
$682989befd4f478d$exports = {
  "deselectedItem": (args) => `${args.item} غير المحدد`,
  "longPressToSelect": `اضغط مطولًا للدخول إلى وضع التحديد.`,
  "select": `تحديد`,
  "selectedAll": `جميع العناصر المحددة.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `لم يتم تحديد عناصر`,
    one: () => `${formatter.number(args.count)} عنصر محدد`,
    other: () => `${formatter.number(args.count)} عنصر محدد`
  })}.`,
  "selectedItem": (args) => `${args.item} المحدد`
};
var $f7fca02019afd941$exports = {};
$f7fca02019afd941$exports = {
  "deselectedItem": (args) => `${args.item} не е избран.`,
  "longPressToSelect": `Натиснете и задръжте за да влезете в избирателен режим.`,
  "select": `Изберете`,
  "selectedAll": `Всички елементи са избрани.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Няма избрани елементи`,
    one: () => `${formatter.number(args.count)} избран елемент`,
    other: () => `${formatter.number(args.count)} избрани елементи`
  })}.`,
  "selectedItem": (args) => `${args.item} избран.`
};
var $8f86f40be75387f1$exports = {};
$8f86f40be75387f1$exports = {
  "deselectedItem": (args) => `Položka ${args.item} není vybrána.`,
  "longPressToSelect": `Dlouhým stisknutím přejdete do režimu výběru.`,
  "select": `Vybrat`,
  "selectedAll": `Vybrány všechny položky.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nevybrány žádné položky`,
    one: () => `Vybrána ${formatter.number(args.count)} položka`,
    other: () => `Vybráno ${formatter.number(args.count)} položek`
  })}.`,
  "selectedItem": (args) => `Vybrána položka ${args.item}.`
};
var $db24ba43c8d652ee$exports = {};
$db24ba43c8d652ee$exports = {
  "deselectedItem": (args) => `${args.item} ikke valgt.`,
  "longPressToSelect": `Lav et langt tryk for at aktivere valgtilstand.`,
  "select": `Vælg`,
  "selectedAll": `Alle elementer valgt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ingen elementer valgt`,
    one: () => `${formatter.number(args.count)} element valgt`,
    other: () => `${formatter.number(args.count)} elementer valgt`
  })}.`,
  "selectedItem": (args) => `${args.item} valgt.`
};
var $f8f1e72c8b5447d6$exports = {};
$f8f1e72c8b5447d6$exports = {
  "deselectedItem": (args) => `${args.item} nicht ausgewählt.`,
  "longPressToSelect": `Gedrückt halten, um Auswahlmodus zu öffnen.`,
  "select": `Auswählen`,
  "selectedAll": `Alle Elemente ausgewählt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Keine Elemente ausgewählt`,
    one: () => `${formatter.number(args.count)} Element ausgewählt`,
    other: () => `${formatter.number(args.count)} Elemente ausgewählt`
  })}.`,
  "selectedItem": (args) => `${args.item} ausgewählt.`
};
var $9a73ed2983c3ab0b$exports = {};
$9a73ed2983c3ab0b$exports = {
  "deselectedItem": (args) => `Δεν επιλέχθηκε το στοιχείο ${args.item}.`,
  "longPressToSelect": `Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.`,
  "select": `Επιλογή`,
  "selectedAll": `Επιλέχθηκαν όλα τα στοιχεία.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Δεν επιλέχθηκαν στοιχεία`,
    one: () => `Επιλέχθηκε ${formatter.number(args.count)} στοιχείο`,
    other: () => `Επιλέχθηκαν ${formatter.number(args.count)} στοιχεία`
  })}.`,
  "selectedItem": (args) => `Επιλέχθηκε το στοιχείο ${args.item}.`
};
var $583de0b3587601b9$exports = {};
$583de0b3587601b9$exports = {
  "deselectedItem": (args) => `${args.item} not selected.`,
  "select": `Select`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `No items selected`,
    one: () => `${formatter.number(args.count)} item selected`,
    other: () => `${formatter.number(args.count)} items selected`
  })}.`,
  "selectedAll": `All items selected.`,
  "selectedItem": (args) => `${args.item} selected.`,
  "longPressToSelect": `Long press to enter selection mode.`
};
var $147159c978043442$exports = {};
$147159c978043442$exports = {
  "deselectedItem": (args) => `${args.item} no seleccionado.`,
  "longPressToSelect": `Mantenga pulsado para abrir el modo de selección.`,
  "select": `Seleccionar`,
  "selectedAll": `Todos los elementos seleccionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ningún elemento seleccionado`,
    one: () => `${formatter.number(args.count)} elemento seleccionado`,
    other: () => `${formatter.number(args.count)} elementos seleccionados`
  })}.`,
  "selectedItem": (args) => `${args.item} seleccionado.`
};
var $5cbb62c8a19173ac$exports = {};
$5cbb62c8a19173ac$exports = {
  "deselectedItem": (args) => `${args.item} pole valitud.`,
  "longPressToSelect": `Valikurežiimi sisenemiseks vajutage pikalt.`,
  "select": `Vali`,
  "selectedAll": `Kõik üksused valitud.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Üksusi pole valitud`,
    one: () => `${formatter.number(args.count)} üksus valitud`,
    other: () => `${formatter.number(args.count)} üksust valitud`
  })}.`,
  "selectedItem": (args) => `${args.item} valitud.`
};
var $a33d71dc804cc59e$exports = {};
$a33d71dc804cc59e$exports = {
  "deselectedItem": (args) => `Kohdetta ${args.item} ei valittu.`,
  "longPressToSelect": `Siirry valintatilaan painamalla pitkään.`,
  "select": `Valitse`,
  "selectedAll": `Kaikki kohteet valittu.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ei yhtään kohdetta valittu`,
    one: () => `${formatter.number(args.count)} kohde valittu`,
    other: () => `${formatter.number(args.count)} kohdetta valittu`
  })}.`,
  "selectedItem": (args) => `${args.item} valittu.`
};
var $92d800447793d084$exports = {};
$92d800447793d084$exports = {
  "deselectedItem": (args) => `${args.item} non sélectionné.`,
  "longPressToSelect": `Appuyez de manière prolongée pour passer en mode de sélection.`,
  "select": `Sélectionner`,
  "selectedAll": `Tous les éléments sélectionnés.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Aucun élément sélectionné`,
    one: () => `${formatter.number(args.count)} élément sélectionné`,
    other: () => `${formatter.number(args.count)} éléments sélectionnés`
  })}.`,
  "selectedItem": (args) => `${args.item} sélectionné.`
};
var $fe732cdb32124ea8$exports = {};
$fe732cdb32124ea8$exports = {
  "deselectedItem": (args) => `${args.item} לא נבחר.`,
  "longPressToSelect": `הקשה ארוכה לכניסה למצב בחירה.`,
  "select": `בחר`,
  "selectedAll": `כל הפריטים נבחרו.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `לא נבחרו פריטים`,
    one: () => `פריט ${formatter.number(args.count)} נבחר`,
    other: () => `${formatter.number(args.count)} פריטים נבחרו`
  })}.`,
  "selectedItem": (args) => `${args.item} נבחר.`
};
var $e41234e934efb4f5$exports = {};
$e41234e934efb4f5$exports = {
  "deselectedItem": (args) => `Stavka ${args.item} nije odabrana.`,
  "longPressToSelect": `Dugo pritisnite za ulazak u način odabira.`,
  "select": `Odaberite`,
  "selectedAll": `Odabrane su sve stavke.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nije odabrana nijedna stavka`,
    one: () => `Odabrana je ${formatter.number(args.count)} stavka`,
    other: () => `Odabrano je ${formatter.number(args.count)} stavki`
  })}.`,
  "selectedItem": (args) => `Stavka ${args.item} je odabrana.`
};
var $1b0393182473bf9e$exports = {};
$1b0393182473bf9e$exports = {
  "deselectedItem": (args) => `${args.item} nincs kijelölve.`,
  "longPressToSelect": `Nyomja hosszan a kijelöléshez.`,
  "select": `Kijelölés`,
  "selectedAll": `Az összes elem kijelölve.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Egy elem sincs kijelölve`,
    one: () => `${formatter.number(args.count)} elem kijelölve`,
    other: () => `${formatter.number(args.count)} elem kijelölve`
  })}.`,
  "selectedItem": (args) => `${args.item} kijelölve.`
};
var $2eed782c1c110ce7$exports = {};
$2eed782c1c110ce7$exports = {
  "deselectedItem": (args) => `${args.item} non selezionato.`,
  "longPressToSelect": `Premi a lungo per passare alla modalità di selezione.`,
  "select": `Seleziona`,
  "selectedAll": `Tutti gli elementi selezionati.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nessun elemento selezionato`,
    one: () => `${formatter.number(args.count)} elemento selezionato`,
    other: () => `${formatter.number(args.count)} elementi selezionati`
  })}.`,
  "selectedItem": (args) => `${args.item} selezionato.`
};
var $8b5d459f86e9b23c$exports = {};
$8b5d459f86e9b23c$exports = {
  "deselectedItem": (args) => `${args.item} が選択されていません。`,
  "longPressToSelect": `長押しして選択モードを開きます。`,
  "select": `選択`,
  "selectedAll": `すべての項目を選択しました。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `項目が選択されていません`,
    one: () => `${formatter.number(args.count)} 項目を選択しました`,
    other: () => `${formatter.number(args.count)} 項目を選択しました`
  })}。`,
  "selectedItem": (args) => `${args.item} を選択しました。`
};
var $1949c3ad17295fd4$exports = {};
$1949c3ad17295fd4$exports = {
  "deselectedItem": (args) => `${args.item}이(가) 선택되지 않았습니다.`,
  "longPressToSelect": `선택 모드로 들어가려면 길게 누르십시오.`,
  "select": `선택`,
  "selectedAll": `모든 항목이 선택되었습니다.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `선택된 항목이 없습니다`,
    one: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`,
    other: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`
  })}.`,
  "selectedItem": (args) => `${args.item}이(가) 선택되었습니다.`
};
var $f5e3df4dc8aa7b54$exports = {};
$f5e3df4dc8aa7b54$exports = {
  "deselectedItem": (args) => `${args.item} nepasirinkta.`,
  "longPressToSelect": `Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.`,
  "select": `Pasirinkti`,
  "selectedAll": `Pasirinkti visi elementai.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nepasirinktas nė vienas elementas`,
    one: () => `Pasirinktas ${formatter.number(args.count)} elementas`,
    other: () => `Pasirinkta elementų: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Pasirinkta: ${args.item}.`
};
var $9dd86690a5c2b2c5$exports = {};
$9dd86690a5c2b2c5$exports = {
  "deselectedItem": (args) => `Vienums ${args.item} nav atlasīts.`,
  "longPressToSelect": `Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.`,
  "select": `Atlasīt`,
  "selectedAll": `Atlasīti visi vienumi.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nav atlasīts neviens vienums`,
    one: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`,
    other: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Atlasīts vienums ${args.item}.`
};
var $843964c3bf9a7d24$exports = {};
$843964c3bf9a7d24$exports = {
  "deselectedItem": (args) => `${args.item} er ikke valgt.`,
  "longPressToSelect": `Bruk et langt trykk for å gå inn i valgmodus.`,
  "select": `Velg`,
  "selectedAll": `Alle elementer er valgt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Ingen elementer er valgt`,
    one: () => `${formatter.number(args.count)} element er valgt`,
    other: () => `${formatter.number(args.count)} elementer er valgt`
  })}.`,
  "selectedItem": (args) => `${args.item} er valgt.`
};
var $73f50e845f9ef3b4$exports = {};
$73f50e845f9ef3b4$exports = {
  "deselectedItem": (args) => `${args.item} niet geselecteerd.`,
  "longPressToSelect": `Druk lang om de selectiemodus te openen.`,
  "select": `Selecteren`,
  "selectedAll": `Alle items geselecteerd.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Geen items geselecteerd`,
    one: () => `${formatter.number(args.count)} item geselecteerd`,
    other: () => `${formatter.number(args.count)} items geselecteerd`
  })}.`,
  "selectedItem": (args) => `${args.item} geselecteerd.`
};
var $87f92a7e077514b2$exports = {};
$87f92a7e077514b2$exports = {
  "deselectedItem": (args) => `Nie zaznaczono ${args.item}.`,
  "longPressToSelect": `Naciśnij i przytrzymaj, aby wejść do trybu wyboru.`,
  "select": `Zaznacz`,
  "selectedAll": `Wszystkie zaznaczone elementy.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nie zaznaczono żadnych elementów`,
    one: () => `${formatter.number(args.count)} zaznaczony element`,
    other: () => `${formatter.number(args.count)} zaznaczonych elementów`
  })}.`,
  "selectedItem": (args) => `Zaznaczono ${args.item}.`
};
var $c28c98d58ee9ff6f$exports = {};
$c28c98d58ee9ff6f$exports = {
  "deselectedItem": (args) => `${args.item} não selecionado.`,
  "longPressToSelect": `Mantenha pressionado para entrar no modo de seleção.`,
  "select": `Selecionar`,
  "selectedAll": `Todos os itens selecionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nenhum item selecionado`,
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}.`,
  "selectedItem": (args) => `${args.item} selecionado.`
};
var $b6b1503b17b2254d$exports = {};
$b6b1503b17b2254d$exports = {
  "deselectedItem": (args) => `${args.item} não selecionado.`,
  "longPressToSelect": `Prima continuamente para entrar no modo de seleção.`,
  "select": `Selecionar`,
  "selectedAll": `Todos os itens selecionados.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nenhum item selecionado`,
    one: () => `${formatter.number(args.count)} item selecionado`,
    other: () => `${formatter.number(args.count)} itens selecionados`
  })}.`,
  "selectedItem": (args) => `${args.item} selecionado.`
};
var $8bdaeb71e50c3e1a$exports = {};
$8bdaeb71e50c3e1a$exports = {
  "deselectedItem": (args) => `${args.item} neselectat.`,
  "longPressToSelect": `Apăsați lung pentru a intra în modul de selectare.`,
  "select": `Selectare`,
  "selectedAll": `Toate elementele selectate.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Niciun element selectat`,
    one: () => `${formatter.number(args.count)} element selectat`,
    other: () => `${formatter.number(args.count)} elemente selectate`
  })}.`,
  "selectedItem": (args) => `${args.item} selectat.`
};
var $ec2b852dd7c3d1f2$exports = {};
$ec2b852dd7c3d1f2$exports = {
  "deselectedItem": (args) => `${args.item} не выбрано.`,
  "longPressToSelect": `Нажмите и удерживайте для входа в режим выбора.`,
  "select": `Выбрать`,
  "selectedAll": `Выбраны все элементы.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Нет выбранных элементов`,
    one: () => `${formatter.number(args.count)} элемент выбран`,
    other: () => `${formatter.number(args.count)} элементов выбрано`
  })}.`,
  "selectedItem": (args) => `${args.item} выбрано.`
};
var $79e6d900d6a4f82d$exports = {};
$79e6d900d6a4f82d$exports = {
  "deselectedItem": (args) => `Nevybraté položky: ${args.item}.`,
  "longPressToSelect": `Dlhším stlačením prejdite do režimu výberu.`,
  "select": `Vybrať`,
  "selectedAll": `Všetky vybraté položky.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Žiadne vybraté položky`,
    one: () => `${formatter.number(args.count)} vybratá položka`,
    other: () => `Počet vybratých položiek:${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `Vybraté položky: ${args.item}.`
};
var $f4c1f0d5d4d03d80$exports = {};
$f4c1f0d5d4d03d80$exports = {
  "deselectedItem": (args) => `Element ${args.item} ni izbran.`,
  "longPressToSelect": `Za izbirni način pritisnite in dlje časa držite.`,
  "select": `Izberite`,
  "selectedAll": `Vsi elementi so izbrani.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Noben element ni izbran`,
    one: () => `${formatter.number(args.count)} element je izbran`,
    other: () => `${formatter.number(args.count)} elementov je izbranih`
  })}.`,
  "selectedItem": (args) => `Element ${args.item} je izbran.`
};
var $46252cd87269b10b$exports = {};
$46252cd87269b10b$exports = {
  "deselectedItem": (args) => `${args.item} nije izabrano.`,
  "longPressToSelect": `Dugo pritisnite za ulazak u režim biranja.`,
  "select": `Izaberite`,
  "selectedAll": `Izabrane su sve stavke.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Nije izabrana nijedna stavka`,
    one: () => `Izabrana je ${formatter.number(args.count)} stavka`,
    other: () => `Izabrano je ${formatter.number(args.count)} stavki`
  })}.`,
  "selectedItem": (args) => `${args.item} je izabrano.`
};
var $d4d5d8dab362555c$exports = {};
$d4d5d8dab362555c$exports = {
  "deselectedItem": (args) => `${args.item} ej markerat.`,
  "longPressToSelect": `Tryck länge när du vill öppna väljarläge.`,
  "select": `Markera`,
  "selectedAll": `Alla markerade objekt.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Inga markerade objekt`,
    one: () => `${formatter.number(args.count)} markerat objekt`,
    other: () => `${formatter.number(args.count)} markerade objekt`
  })}.`,
  "selectedItem": (args) => `${args.item} markerat.`
};
var $3d55d1f97c377e83$exports = {};
$3d55d1f97c377e83$exports = {
  "deselectedItem": (args) => `${args.item} seçilmedi.`,
  "longPressToSelect": `Seçim moduna girmek için uzun basın.`,
  "select": `Seç`,
  "selectedAll": `Tüm ögeler seçildi.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Hiçbir öge seçilmedi`,
    one: () => `${formatter.number(args.count)} öge seçildi`,
    other: () => `${formatter.number(args.count)} öge seçildi`
  })}.`,
  "selectedItem": (args) => `${args.item} seçildi.`
};
var $5368512f1c703a3f$exports = {};
$5368512f1c703a3f$exports = {
  "deselectedItem": (args) => `${args.item} не вибрано.`,
  "longPressToSelect": `Виконайте довге натиснення, щоб перейти в режим вибору.`,
  "select": `Вибрати`,
  "selectedAll": `Усі елементи вибрано.`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `Жодних елементів не вибрано`,
    one: () => `${formatter.number(args.count)} елемент вибрано`,
    other: () => `Вибрано елементів: ${formatter.number(args.count)}`
  })}.`,
  "selectedItem": (args) => `${args.item} вибрано.`
};
var $f1316b1074463583$exports = {};
$f1316b1074463583$exports = {
  "deselectedItem": (args) => `未选择 ${args.item}。`,
  "longPressToSelect": `长按以进入选择模式。`,
  "select": `选择`,
  "selectedAll": `已选择所有项目。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `未选择项目`,
    one: () => `已选择 ${formatter.number(args.count)} 个项目`,
    other: () => `已选择 ${formatter.number(args.count)} 个项目`
  })}。`,
  "selectedItem": (args) => `已选择 ${args.item}。`
};
var $7e60654723031b6f$exports = {};
$7e60654723031b6f$exports = {
  "deselectedItem": (args) => `未選取「${args.item}」。`,
  "longPressToSelect": `長按以進入選擇模式。`,
  "select": `選取`,
  "selectedAll": `已選取所有項目。`,
  "selectedCount": (args, formatter) => `${formatter.plural(args.count, {
    "=0": `未選取任何項目`,
    one: () => `已選取 ${formatter.number(args.count)} 個項目`,
    other: () => `已選取 ${formatter.number(args.count)} 個項目`
  })}。`,
  "selectedItem": (args) => `已選取「${args.item}」。`
};
$1dbe5ffd32adb38c$exports = {
  "ar-AE": $682989befd4f478d$exports,
  "bg-BG": $f7fca02019afd941$exports,
  "cs-CZ": $8f86f40be75387f1$exports,
  "da-DK": $db24ba43c8d652ee$exports,
  "de-DE": $f8f1e72c8b5447d6$exports,
  "el-GR": $9a73ed2983c3ab0b$exports,
  "en-US": $583de0b3587601b9$exports,
  "es-ES": $147159c978043442$exports,
  "et-EE": $5cbb62c8a19173ac$exports,
  "fi-FI": $a33d71dc804cc59e$exports,
  "fr-FR": $92d800447793d084$exports,
  "he-IL": $fe732cdb32124ea8$exports,
  "hr-HR": $e41234e934efb4f5$exports,
  "hu-HU": $1b0393182473bf9e$exports,
  "it-IT": $2eed782c1c110ce7$exports,
  "ja-JP": $8b5d459f86e9b23c$exports,
  "ko-KR": $1949c3ad17295fd4$exports,
  "lt-LT": $f5e3df4dc8aa7b54$exports,
  "lv-LV": $9dd86690a5c2b2c5$exports,
  "nb-NO": $843964c3bf9a7d24$exports,
  "nl-NL": $73f50e845f9ef3b4$exports,
  "pl-PL": $87f92a7e077514b2$exports,
  "pt-BR": $c28c98d58ee9ff6f$exports,
  "pt-PT": $b6b1503b17b2254d$exports,
  "ro-RO": $8bdaeb71e50c3e1a$exports,
  "ru-RU": $ec2b852dd7c3d1f2$exports,
  "sk-SK": $79e6d900d6a4f82d$exports,
  "sl-SI": $f4c1f0d5d4d03d80$exports,
  "sr-SP": $46252cd87269b10b$exports,
  "sv-SE": $d4d5d8dab362555c$exports,
  "tr-TR": $3d55d1f97c377e83$exports,
  "uk-UA": $5368512f1c703a3f$exports,
  "zh-CN": $f1316b1074463583$exports,
  "zh-TW": $7e60654723031b6f$exports
};
function $92599c3fd427b763$export$137e594ef3218a10(props, state) {
  var _state_collection_getTextValue;
  let { getRowText = (key) => {
    var _state_collection, _state_collection_getTextValue1, _state_collection_getItem;
    return (_state_collection_getTextValue = (_state_collection_getTextValue1 = (_state_collection = state.collection).getTextValue) === null || _state_collection_getTextValue1 === void 0 ? void 0 : _state_collection_getTextValue1.call(_state_collection, key)) !== null && _state_collection_getTextValue !== void 0 ? _state_collection_getTextValue : (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;
  } } = props;
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb12)((0, $parcel$interopDefault2($1dbe5ffd32adb38c$exports)));
  let selection = state.selectionManager.rawSelection;
  let lastSelection = (0, _)(selection);
  (0, $4f58c5f72bcf79f7$export$496315a1608d9602)(() => {
    var _lastSelection_current;
    if (!state.selectionManager.isFocused) {
      lastSelection.current = selection;
      return;
    }
    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);
    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);
    let isReplace = state.selectionManager.selectionBehavior === "replace";
    let messages = [];
    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {
      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {
        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);
        if (currentSelectionText)
          messages.push(stringFormatter.format("selectedItem", {
            item: currentSelectionText
          }));
      }
    } else if (addedKeys.size === 1 && removedKeys.size === 0) {
      let addedText = getRowText(addedKeys.keys().next().value);
      if (addedText)
        messages.push(stringFormatter.format("selectedItem", {
          item: addedText
        }));
    } else if (removedKeys.size === 1 && addedKeys.size === 0) {
      if (state.collection.getItem(removedKeys.keys().next().value)) {
        let removedText = getRowText(removedKeys.keys().next().value);
        if (removedText)
          messages.push(stringFormatter.format("deselectedItem", {
            item: removedText
          }));
      }
    }
    if (state.selectionManager.selectionMode === "multiple") {
      if (messages.length === 0 || selection === "all" || selection.size > 1 || lastSelection.current === "all" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1)
        messages.push(selection === "all" ? stringFormatter.format("selectedAll") : stringFormatter.format("selectedCount", {
          count: selection.size
        }));
    }
    if (messages.length > 0)
      (0, $319e236875307eab$export$a9b970dcc4ae71a9)(messages.join(" "));
    lastSelection.current = selection;
  }, [
    selection
  ]);
}
function $92599c3fd427b763$var$diffSelection(a13, b6) {
  let res = /* @__PURE__ */ new Set();
  if (a13 === "all" || b6 === "all")
    return res;
  for (let key of a13.keys())
    if (!b6.has(key))
      res.add(key);
  return res;
}
function $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {
  let stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb12)((0, $parcel$interopDefault2($1dbe5ffd32adb38c$exports)));
  let modality = (0, $507fabe10e71c6fb$export$98e20ec92f614cfe)();
  let shouldLongPress = (modality === "pointer" || modality === "virtual" || modality == null) && typeof window !== "undefined" && "ontouchstart" in window;
  let interactionDescription = (0, F)(() => {
    let selectionMode = props.selectionManager.selectionMode;
    let selectionBehavior = props.selectionManager.selectionBehavior;
    let message = void 0;
    if (shouldLongPress)
      message = stringFormatter.format("longPressToSelect");
    return selectionBehavior === "replace" && selectionMode !== "none" && props.hasItemActions ? message : void 0;
  }, [
    props.selectionManager.selectionMode,
    props.selectionManager.selectionBehavior,
    props.hasItemActions,
    stringFormatter,
    shouldLongPress
  ]);
  let descriptionProps = (0, $ef06256079686ba0$export$f8aeda7b10753fa17)(interactionDescription);
  return descriptionProps;
}
function $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {
  let { isVirtualized, keyboardDelegate, focusMode, scrollRef, getRowText, onRowAction, onCellAction } = props;
  let { selectionManager: manager } = state;
  if (!props["aria-label"] && !props["aria-labelledby"])
    console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d2)({
    usage: "search",
    sensitivity: "base"
  });
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f72)();
  let disabledBehavior = state.selectionManager.disabledBehavior;
  let delegate = (0, F)(() => keyboardDelegate || new (0, $d1c300d9c497e402$export$de9feff04fda126e)({
    collection: state.collection,
    disabledKeys: disabledBehavior === "selection" ? /* @__PURE__ */ new Set() : state.disabledKeys,
    ref,
    direction,
    collator,
    focusMode
  }), [
    keyboardDelegate,
    state.collection,
    state.disabledKeys,
    disabledBehavior,
    ref,
    direction,
    collator,
    focusMode
  ]);
  let { collectionProps } = (0, $ae20dd8cbca75726$export$d6daf82dcd84e87c)({
    ref,
    selectionManager: manager,
    keyboardDelegate: delegate,
    isVirtualized,
    scrollRef
  });
  let id = (0, $bdb11010cef70236$export$f680877a34711e374)(props.id);
  (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).set(state, {
    keyboardDelegate: delegate,
    actions: {
      onRowAction,
      onCellAction
    }
  });
  let descriptionProps = (0, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2)({
    selectionManager: manager,
    hasItemActions: !!(onRowAction || onCellAction)
  });
  let domProps = (0, $65484d02dcb7eb3e$export$457c3d6518dd4c6f6)(props, {
    labelable: true
  });
  let onFocus = (0, T)((e15) => {
    if (manager.isFocused) {
      if (!e15.currentTarget.contains(e15.target))
        manager.setFocused(false);
      return;
    }
    if (!e15.currentTarget.contains(e15.target))
      return;
    manager.setFocused(true);
  }, [
    manager
  ]);
  let navDisabledHandlers = (0, F)(() => ({
    onBlur: collectionProps.onBlur,
    onFocus
  }), [
    onFocus,
    collectionProps.onBlur
  ]);
  let hasTabbableChild = (0, $83013635b024ae3d$export$eac1895992b9f3d6)(ref, {
    isDisabled: state.collection.size !== 0
  });
  let gridProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe9287)(
    domProps,
    {
      role: "grid",
      id,
      "aria-multiselectable": manager.selectionMode === "multiple" ? "true" : void 0
    },
    state.isKeyboardNavigationDisabled ? navDisabledHandlers : collectionProps,
    // If collection is empty, make sure the grid is tabbable unless there is a child tabbable element.
    state.collection.size === 0 && {
      tabIndex: hasTabbableChild ? -1 : 0
    },
    descriptionProps
  );
  if (isVirtualized) {
    gridProps["aria-rowcount"] = state.collection.size;
    gridProps["aria-colcount"] = state.collection.columnCount;
  }
  (0, $92599c3fd427b763$export$137e594ef3218a10)({
    getRowText
  }, state);
  return {
    gridProps
  };
}
function $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {
  return {
    rowGroupProps: {
      role: "rowgroup"
    }
  };
}
function $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {
  let { node, isVirtualized, shouldSelectOnPressUp, onAction } = props;
  let { actions: { onRowAction } } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);
  let { itemProps, ...states } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key: node.key,
    ref,
    isVirtualized,
    shouldSelectOnPressUp,
    onAction: onRowAction ? () => onRowAction(node.key) : onAction,
    isDisabled: state.collection.size === 0
  });
  let isSelected = state.selectionManager.isSelected(node.key);
  let rowProps = {
    role: "row",
    "aria-selected": state.selectionManager.selectionMode !== "none" ? isSelected : void 0,
    "aria-disabled": states.isDisabled || void 0,
    ...itemProps
  };
  if (isVirtualized)
    rowProps["aria-rowindex"] = node.index + 1;
  return {
    rowProps,
    ...states
  };
}
function $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {
  let { node, isVirtualized, focusMode = "child", shouldSelectOnPressUp, onAction } = props;
  let { direction } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f72)();
  let { keyboardDelegate, actions: { onCellAction } } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);
  let focus = () => {
    let treeWalker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa3)(ref.current);
    if (focusMode === "child") {
      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement)
        return;
      let focusable = state.selectionManager.childFocusStrategy === "last" ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();
      if (focusable) {
        (0, $6a99195332edec8b$export$80f3e147d781571c6)(focusable);
        return;
      }
    }
    if (!ref.current.contains(document.activeElement))
      (0, $6a99195332edec8b$export$80f3e147d781571c6)(ref.current);
  };
  let { itemProps, isPressed } = (0, $880e95eb8b93ba9a$export$ecf600387e221c37)({
    selectionManager: state.selectionManager,
    key: node.key,
    ref,
    isVirtualized,
    focus,
    shouldSelectOnPressUp,
    onAction: onCellAction ? () => onCellAction(node.key) : onAction,
    isDisabled: state.collection.size === 0
  });
  let onKeyDownCapture = (e15) => {
    if (!e15.currentTarget.contains(e15.target) || state.isKeyboardNavigationDisabled)
      return;
    let walker = (0, $9bf71ea28793e738$export$2d6ec8fc375ceafa3)(ref.current);
    walker.currentNode = document.activeElement;
    switch (e15.key) {
      case "ArrowLeft": {
        let focusable = direction === "rtl" ? walker.nextNode() : walker.previousNode();
        if (focusMode === "child" && focusable === ref.current)
          focusable = null;
        if (focusable) {
          e15.preventDefault();
          e15.stopPropagation();
          (0, $6a99195332edec8b$export$80f3e147d781571c6)(focusable);
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
            containingElement: (0, $62d8ded9296f3872$export$cfa2225e879387812)(ref.current)
          });
        } else {
          let prev = keyboardDelegate.getKeyLeftOf(node.key);
          if (prev !== node.key)
            break;
          e15.preventDefault();
          e15.stopPropagation();
          if (focusMode === "cell" && direction === "rtl") {
            (0, $6a99195332edec8b$export$80f3e147d781571c6)(ref.current);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e879387812)(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            focusable = direction === "rtl" ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);
            if (focusable) {
              (0, $6a99195332edec8b$export$80f3e147d781571c6)(focusable);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e879387812)(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowRight": {
        let focusable1 = direction === "rtl" ? walker.previousNode() : walker.nextNode();
        if (focusMode === "child" && focusable1 === ref.current)
          focusable1 = null;
        if (focusable1) {
          e15.preventDefault();
          e15.stopPropagation();
          (0, $6a99195332edec8b$export$80f3e147d781571c6)(focusable1);
          (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable1, {
            containingElement: (0, $62d8ded9296f3872$export$cfa2225e879387812)(ref.current)
          });
        } else {
          let next = keyboardDelegate.getKeyRightOf(node.key);
          if (next !== node.key)
            break;
          e15.preventDefault();
          e15.stopPropagation();
          if (focusMode === "cell" && direction === "ltr") {
            (0, $6a99195332edec8b$export$80f3e147d781571c6)(ref.current);
            (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(ref.current, {
              containingElement: (0, $62d8ded9296f3872$export$cfa2225e879387812)(ref.current)
            });
          } else {
            walker.currentNode = ref.current;
            focusable1 = direction === "rtl" ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();
            if (focusable1) {
              (0, $6a99195332edec8b$export$80f3e147d781571c6)(focusable1);
              (0, $2f04cbc44ee30ce0$export$c826860796309d1b)(focusable1, {
                containingElement: (0, $62d8ded9296f3872$export$cfa2225e879387812)(ref.current)
              });
            }
          }
        }
        break;
      }
      case "ArrowUp":
      case "ArrowDown":
        if (!e15.altKey && ref.current.contains(e15.target)) {
          e15.stopPropagation();
          e15.preventDefault();
          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e15.nativeEvent.type, e15.nativeEvent));
        }
        break;
    }
  };
  let onFocus = (e15) => {
    if (e15.target !== ref.current) {
      if (!(0, $507fabe10e71c6fb$export$b9b3dfddab17db277)())
        state.selectionManager.setFocusedKey(node.key);
      return;
    }
    requestAnimationFrame(() => {
      if (focusMode === "child" && document.activeElement === ref.current)
        focus();
    });
  };
  let gridCellProps = (0, $3ef42575df84b30b$export$9d1611c77c2fe9287)(itemProps, {
    role: "gridcell",
    onKeyDownCapture,
    onFocus
  });
  var _node_colIndex;
  if (isVirtualized)
    gridCellProps["aria-colindex"] = ((_node_colIndex = node.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node.index) + 1;
  if (shouldSelectOnPressUp && gridCellProps.tabIndex != null && gridCellProps.onPointerDown == null)
    gridCellProps.onPointerDown = (e15) => {
      let el = e15.currentTarget;
      let tabindex = el.getAttribute("tabindex");
      el.removeAttribute("tabindex");
      requestAnimationFrame(() => {
        el.setAttribute("tabindex", tabindex);
      });
    };
  return {
    gridCellProps,
    isPressed
  };
}
function $ab90dcbc1b5466d0$var$last(walker) {
  let next;
  let last;
  do {
    last = walker.lastChild();
    if (last)
      next = last;
  } while (last);
  return next;
}
function $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {
  let { key } = props;
  let manager = state.selectionManager;
  let checkboxId = (0, $bdb11010cef70236$export$f680877a34711e374)();
  let isDisabled = !state.selectionManager.canSelectItem(key);
  let isSelected = state.selectionManager.isSelected(key);
  let onChange = () => manager.select(key);
  const stringFormatter = (0, $fca6afa0e843324b$export$f12b703ca79dfbb12)((0, $parcel$interopDefault2($1dbe5ffd32adb38c$exports)));
  return {
    checkboxProps: {
      id: checkboxId,
      "aria-label": stringFormatter.format("select"),
      isSelected,
      isDisabled,
      onChange
    }
  };
}

// node_modules/@react-aria/table/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/table/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext10 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext10 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext10);
var $704cf1d3b684cc5c$var$canUseDOM10 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $704cf1d3b684cc5c$var$componentIds4 = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter4(isDisabled = false) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext10);
  let ref = (0, _)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, Cn).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds4.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds4.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds4.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b2610(defaultId) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext10);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext10 && !$704cf1d3b684cc5c$var$canUseDOM10)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter4(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}

// node_modules/@react-aria/table/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c10 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
var $bdb11010cef70236$var$idsUpdaterMap9 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e375(defaultId) {
  let [value, setValue] = (0, h)(defaultId);
  let nextId = (0, _)(null);
  let res = (0, $704cf1d3b684cc5c$export$619500959fc48b2610)(value);
  let updateValue = (0, T)((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap9.set(res, updateValue);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c10)(() => {
    let r14 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap9.delete(r14);
    };
  }, [
    res
  ]);
  (0, p)(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f8426299(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap9.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap9.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e9(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe9289(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e9)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f8426299)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
function $7215afc6de606d6b$export$de79e2c695e052f39(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll9())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements9(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition9(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached9 = null;
function $7215afc6de606d6b$var$supportsPreventScroll9() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached9 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached9 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached9 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached9;
}
function $7215afc6de606d6b$var$getScrollableElements9(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition9(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement10 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks10 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents10() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement10.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement10.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement10.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement10.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement10.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks10)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks10.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents10();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents10);
}
function $bbed8b41f857bcc0$export$24490316f764c4309(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement10.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks10.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed69() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $4f58c5f72bcf79f7$export$496315a1608d96022(effect, dependencies) {
  const isInitialMount = (0, _)(true);
  (0, p)(() => {
    if (isInitialMount.current)
      isInitialMount.current = false;
    else
      effect();
  }, dependencies);
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e9(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c10)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
var $5df64b3807dc15ee$var$visualViewport10 = typeof window !== "undefined" && window.visualViewport;
var $ef06256079686ba0$var$descriptionId4 = 0;
var $ef06256079686ba0$var$descriptionNodes4 = /* @__PURE__ */ new Map();
function $ef06256079686ba0$export$f8aeda7b10753fa19(description) {
  let [id, setId] = (0, h)(void 0);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c10)(() => {
    if (!description)
      return;
    let desc = $ef06256079686ba0$var$descriptionNodes4.get(description);
    if (!desc) {
      let id2 = `react-aria-description-${$ef06256079686ba0$var$descriptionId4++}`;
      setId(id2);
      let node = document.createElement("div");
      node.id = id2;
      node.style.display = "none";
      node.textContent = description;
      document.body.appendChild(node);
      desc = {
        refCount: 0,
        element: node
      };
      $ef06256079686ba0$var$descriptionNodes4.set(description, desc);
    } else
      setId(desc.element.id);
    desc.refCount++;
    return () => {
      if (--desc.refCount === 0) {
        desc.element.remove();
        $ef06256079686ba0$var$descriptionNodes4.delete(description);
      }
    };
  }, [
    description
  ]);
  return {
    "aria-describedby": description ? id : void 0
  };
}
function $c87311424ea30a05$var$testUserAgent9(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform9(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea109() {
  return $c87311424ea30a05$var$testPlatform9(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d999() {
  return $c87311424ea30a05$var$testPlatform9(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e42249() {
  return $c87311424ea30a05$var$testPlatform9(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea109() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f19() {
  return $c87311424ea30a05$export$186c6964ca17d999() || $c87311424ea30a05$export$7bef049ce92e42249();
}
function $c87311424ea30a05$export$a11b0059900ceec89() {
  return $c87311424ea30a05$var$testUserAgent9(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de9(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec89)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf639(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/table/dist/module.js
init_compat_module();

// node_modules/@react-aria/table/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/table/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state9 = "default";
var $14c0b72509d70225$var$savedUserSelect9 = "";
var $14c0b72509d70225$var$modifiedElementMap9 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a46974671754879(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f19)()) {
    if ($14c0b72509d70225$var$state9 === "default") {
      $14c0b72509d70225$var$savedUserSelect9 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state9 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap9.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e32959(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f19)()) {
    if ($14c0b72509d70225$var$state9 !== "disabled")
      return;
    $14c0b72509d70225$var$state9 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c4309)(() => {
        if ($14c0b72509d70225$var$state9 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect9 || "";
          $14c0b72509d70225$var$savedUserSelect9 = "";
          $14c0b72509d70225$var$state9 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap9.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap9.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap9.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb59 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb59.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext9(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb59));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe9289)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e9)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad219(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext9(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed69)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent9(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32959)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent9(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard9(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink9(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent9(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent9(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de9)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f39)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent9(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard9(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent9(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink9(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf639)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault9(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f39)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a46974671754879)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault9(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget9(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget9(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent9(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent9(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget9(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent9(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent9(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e32959)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault9(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de9)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f39)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget9(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent9(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent9(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent9(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f39)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a46974671754879)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById9(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget9(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById9(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget9(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e32959)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e32959)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9289)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink9(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent9(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey9(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink9(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent9(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById9(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent9(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect9(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping9(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget9(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect9(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping9(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault9(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard9(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey9(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes9 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey9(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes9.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e999 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad219)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe9289)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b89 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb59));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe9289)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e9)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb59).Provider, {
    value: context
  }, children);
});
var $8a9cb279dc87e130$export$905e7fc544a71f367 = class {
  isDefaultPrevented() {
    return this.nativeEvent.defaultPrevented;
  }
  preventDefault() {
    this.defaultPrevented = true;
    this.nativeEvent.preventDefault();
  }
  stopPropagation() {
    this.nativeEvent.stopPropagation();
    this.isPropagationStopped = () => true;
  }
  isPropagationStopped() {
    return false;
  }
  persist() {
  }
  constructor(type, nativeEvent) {
    this.nativeEvent = nativeEvent;
    this.target = nativeEvent.target;
    this.currentTarget = nativeEvent.currentTarget;
    this.relatedTarget = nativeEvent.relatedTarget;
    this.bubbles = nativeEvent.bubbles;
    this.cancelable = nativeEvent.cancelable;
    this.defaultPrevented = nativeEvent.defaultPrevented;
    this.eventPhase = nativeEvent.eventPhase;
    this.isTrusted = nativeEvent.isTrusted;
    this.timeStamp = nativeEvent.timeStamp;
    this.type = type;
  }
};
function $8a9cb279dc87e130$export$715c682d09d639cc7(onBlur) {
  let stateRef = (0, _)({
    isFocused: false,
    onBlur,
    observer: null
  });
  stateRef.current.onBlur = onBlur;
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c10)(() => {
    const state = stateRef.current;
    return () => {
      if (state.observer) {
        state.observer.disconnect();
        state.observer = null;
      }
    };
  }, []);
  return (0, T)((e15) => {
    if (e15.target instanceof HTMLButtonElement || e15.target instanceof HTMLInputElement || e15.target instanceof HTMLTextAreaElement || e15.target instanceof HTMLSelectElement) {
      stateRef.current.isFocused = true;
      let target = e15.target;
      let onBlurHandler = (e16) => {
        var _stateRef_current, _stateRef_current_onBlur;
        stateRef.current.isFocused = false;
        if (target.disabled)
          (_stateRef_current_onBlur = (_stateRef_current = stateRef.current).onBlur) === null || _stateRef_current_onBlur === void 0 ? void 0 : _stateRef_current_onBlur.call(_stateRef_current, new $8a9cb279dc87e130$export$905e7fc544a71f367("blur", e16));
        if (stateRef.current.observer) {
          stateRef.current.observer.disconnect();
          stateRef.current.observer = null;
        }
      };
      target.addEventListener("focusout", onBlurHandler, {
        once: true
      });
      stateRef.current.observer = new MutationObserver(() => {
        if (stateRef.current.isFocused && target.disabled) {
          stateRef.current.observer.disconnect();
          target.dispatchEvent(new FocusEvent("blur"));
          target.dispatchEvent(new FocusEvent("focusout", {
            bubbles: true
          }));
        }
      });
      stateRef.current.observer.observe(target, {
        attributes: true,
        attributeFilter: [
          "disabled"
        ]
      });
    }
  }, []);
}
function $a1ea59d68270f0dd$export$f8168d8dd8fd66e69(props) {
  let { isDisabled, onFocus: onFocusProp, onBlur: onBlurProp, onFocusChange } = props;
  const onBlur = (0, T)((e15) => {
    if (e15.target === e15.currentTarget) {
      if (onBlurProp)
        onBlurProp(e15);
      if (onFocusChange)
        onFocusChange(false);
      return true;
    }
  }, [
    onBlurProp,
    onFocusChange
  ]);
  const onSyntheticFocus = (0, $8a9cb279dc87e130$export$715c682d09d639cc7)(onBlur);
  const onFocus = (0, T)((e15) => {
    if (e15.target === e15.currentTarget && document.activeElement === e15.target) {
      if (onFocusProp)
        onFocusProp(e15);
      if (onFocusChange)
        onFocusChange(true);
      onSyntheticFocus(e15);
    }
  }, [
    onFocusChange,
    onFocusProp,
    onSyntheticFocus
  ]);
  return {
    focusProps: {
      onFocus: !isDisabled && (onFocusProp || onFocusChange || onBlurProp) ? onFocus : void 0,
      onBlur: !isDisabled && (onBlurProp || onFocusChange) ? onBlur : void 0
    }
  };
}
var $507fabe10e71c6fb$var$currentModality9 = null;
var $507fabe10e71c6fb$var$changeHandlers9 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners9 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus9 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently9 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers9(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers9)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey9(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea109)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent9(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus9 = true;
  if ($507fabe10e71c6fb$var$isValidKey9(e15)) {
    $507fabe10e71c6fb$var$currentModality9 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers9("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent9(e15) {
  $507fabe10e71c6fb$var$currentModality9 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus9 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers9("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent9(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de9)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus9 = true;
    $507fabe10e71c6fb$var$currentModality9 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent9(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus9 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently9) {
    $507fabe10e71c6fb$var$currentModality9 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers9("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus9 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently9 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur9() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus9 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently9 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents9() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners9)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus9 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent9, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent9, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent9, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent9, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur9, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent9, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent9, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent9, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent9, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent9, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent9, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners9 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents9();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents9);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a99() {
  return $507fabe10e71c6fb$var$currentModality9;
}
function $93925083ecbb358c$export$48d1ea63208302605(handler) {
  if (!handler)
    return;
  let shouldStopPropagation = true;
  return (e15) => {
    let event = {
      ...e15,
      preventDefault() {
        e15.preventDefault();
      },
      isDefaultPrevented() {
        return e15.isDefaultPrevented();
      },
      stopPropagation() {
        console.error("stopPropagation is now the default behavior for events in React Spectrum. You can use continuePropagation() to revert this behavior.");
      },
      continuePropagation() {
        shouldStopPropagation = false;
      }
    };
    handler(event);
    if (shouldStopPropagation)
      e15.stopPropagation();
  };
}
function $46d819fcbaf35654$export$8f71654801c2f7cd9(props) {
  return {
    keyboardProps: props.isDisabled ? {} : {
      onKeyDown: (0, $93925083ecbb358c$export$48d1ea63208302605)(props.onKeyDown),
      onKeyUp: (0, $93925083ecbb358c$export$48d1ea63208302605)(props.onKeyUp)
    }
  };
}

// node_modules/@react-aria/table/node_modules/@react-aria/focus/dist/import.mjs
function $6a99195332edec8b$export$80f3e147d781571c8(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a99)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c4309)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f39)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f39)(element);
}
var $9bf71ea28793e738$var$FocusContext9 = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements9 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR9 = $9bf71ea28793e738$var$focusableElements9.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements9.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR9 = $9bf71ea28793e738$var$focusableElements9.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope9(element, scope) {
  return scope.some((node) => node.contains(element));
}
var $9bf71ea28793e738$var$Tree8 = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode8({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope9(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree8();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode8({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode8 = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e8 = new $9bf71ea28793e738$var$Tree8();
var $e6afbd83fe6ebbd2$var$FocusableContext9 = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$useFocusableContext5(ref) {
  let context = (0, q)($e6afbd83fe6ebbd2$var$FocusableContext9) || {};
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e9)(context, ref);
  let { ref: _2, ...otherProps } = context;
  return otherProps;
}
function $e6afbd83fe6ebbd2$var$FocusableProvider9(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext9.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd59 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider9);
function $e6afbd83fe6ebbd2$export$4c014de7c8940b4c5(props, domRef) {
  let { focusProps } = (0, $a1ea59d68270f0dd$export$f8168d8dd8fd66e69)(props);
  let { keyboardProps } = (0, $46d819fcbaf35654$export$8f71654801c2f7cd9)(props);
  let interactions = (0, $3ef42575df84b30b$export$9d1611c77c2fe9289)(focusProps, keyboardProps);
  let domProps = $e6afbd83fe6ebbd2$var$useFocusableContext5(domRef);
  let interactionProps = props.isDisabled ? {} : domProps;
  let autoFocusRef = (0, _)(props.autoFocus);
  (0, p)(() => {
    if (autoFocusRef.current && domRef.current)
      (0, $6a99195332edec8b$export$80f3e147d781571c8)(domRef.current);
    autoFocusRef.current = false;
  }, [
    domRef
  ]);
  return {
    focusableProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe9289)({
      ...interactions,
      tabIndex: props.excludeFromTabOrder && !props.isDisabled ? -1 : void 0
    }, interactionProps)
  };
}

// node_modules/@react-aria/table/dist/module.js
function $parcel$interopDefault3(a13) {
  return a13 && a13.__esModule ? a13.default : a13;
}
var $2140fb2337097f2d$export$552312adfd451dab = /* @__PURE__ */ new WeakMap();
function $2140fb2337097f2d$var$normalizeKey(key) {
  if (typeof key === "string")
    return key.replace(/\s*/g, "");
  return "" + key;
}
function $2140fb2337097f2d$export$37cd4213f2ad742e(state, columnKey) {
  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);
  if (!gridId)
    throw new Error("Unknown grid");
  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;
}
function $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey) {
  let gridId = $2140fb2337097f2d$export$552312adfd451dab.get(state);
  if (!gridId)
    throw new Error("Unknown grid");
  return `${gridId}-${$2140fb2337097f2d$var$normalizeKey(rowKey)}-${$2140fb2337097f2d$var$normalizeKey(columnKey)}`;
}
function $2140fb2337097f2d$export$85069b70317f543(state, rowKey) {
  return [
    ...state.collection.rowHeaderColumnKeys
  ].map(
    (columnKey) => $2140fb2337097f2d$export$19baff3266315d44(state, rowKey, columnKey)
  ).join(" ");
}
var $ae7e9c471762b4d3$exports = {};
var $ce3de3ff2fd66848$exports = {};
$ce3de3ff2fd66848$exports = {
  "ascending": `تصاعدي`,
  "ascendingSort": (args) => `ترتيب حسب العمود ${args.columnName} بترتيب تصاعدي`,
  "columnSize": (args) => `${args.value} بالبكسل`,
  "descending": `تنازلي`,
  "descendingSort": (args) => `ترتيب حسب العمود ${args.columnName} بترتيب تنازلي`,
  "select": `تحديد`,
  "selectAll": `تحديد الكل`,
  "sortable": `عمود قابل للترتيب`
};
var $cb80dcce530985b9$exports = {};
$cb80dcce530985b9$exports = {
  "ascending": `възходящ`,
  "ascendingSort": (args) => `сортирано по колона ${args.columnName} във възходящ ред`,
  "columnSize": (args) => `${args.value} пиксела`,
  "descending": `низходящ`,
  "descendingSort": (args) => `сортирано по колона ${args.columnName} в низходящ ред`,
  "select": `Изберете`,
  "selectAll": `Изберете всичко`,
  "sortable": `сортираща колона`
};
var $68ac86749db4c0fb$exports = {};
$68ac86749db4c0fb$exports = {
  "ascending": `vzestupně`,
  "ascendingSort": (args) => `řazeno vzestupně podle sloupce ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixelů`,
  "descending": `sestupně`,
  "descendingSort": (args) => `řazeno sestupně podle sloupce ${args.columnName}`,
  "select": `Vybrat`,
  "selectAll": `Vybrat vše`,
  "sortable": `sloupec s možností řazení`
};
var $9a6cbac08487e661$exports = {};
$9a6cbac08487e661$exports = {
  "ascending": `stigende`,
  "ascendingSort": (args) => `sorteret efter kolonne ${args.columnName} i stigende rækkefølge`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `faldende`,
  "descendingSort": (args) => `sorteret efter kolonne ${args.columnName} i faldende rækkefølge`,
  "select": `Vælg`,
  "selectAll": `Vælg alle`,
  "sortable": `sorterbar kolonne`
};
var $c963661d89486e72$exports = {};
$c963661d89486e72$exports = {
  "ascending": `aufsteigend`,
  "ascendingSort": (args) => `sortiert nach Spalte ${args.columnName} in aufsteigender Reihenfolge`,
  "columnSize": (args) => `${args.value} Pixel`,
  "descending": `absteigend`,
  "descendingSort": (args) => `sortiert nach Spalte ${args.columnName} in absteigender Reihenfolge`,
  "select": `Auswählen`,
  "selectAll": `Alles auswählen`,
  "sortable": `sortierbare Spalte`
};
var $ac03861c6e8605f4$exports = {};
$ac03861c6e8605f4$exports = {
  "ascending": `αύξουσα`,
  "ascendingSort": (args) => `διαλογή ανά στήλη ${args.columnName} σε αύξουσα σειρά`,
  "columnSize": (args) => `${args.value} pixel`,
  "descending": `φθίνουσα`,
  "descendingSort": (args) => `διαλογή ανά στήλη ${args.columnName} σε φθίνουσα σειρά`,
  "select": `Επιλογή`,
  "selectAll": `Επιλογή όλων`,
  "sortable": `Στήλη διαλογής`
};
var $09e6b82e0d6e466a$exports = {};
$09e6b82e0d6e466a$exports = {
  "select": `Select`,
  "selectAll": `Select All`,
  "sortable": `sortable column`,
  "ascending": `ascending`,
  "descending": `descending`,
  "ascendingSort": (args) => `sorted by column ${args.columnName} in ascending order`,
  "descendingSort": (args) => `sorted by column ${args.columnName} in descending order`,
  "columnSize": (args) => `${args.value} pixels`
};
var $8cc39eb66c2bf220$exports = {};
$8cc39eb66c2bf220$exports = {
  "ascending": `de subida`,
  "ascendingSort": (args) => `ordenado por columna ${args.columnName} en orden de subida`,
  "columnSize": (args) => `${args.value} píxeles`,
  "descending": `de bajada`,
  "descendingSort": (args) => `ordenado por columna ${args.columnName} en orden de bajada`,
  "select": `Seleccionar`,
  "selectAll": `Seleccionar todos`,
  "sortable": `columna ordenable`
};
var $4e11db3c25a38112$exports = {};
$4e11db3c25a38112$exports = {
  "ascending": `tõusev järjestus`,
  "ascendingSort": (args) => `sorditud veeru järgi ${args.columnName} tõusvas järjestuses`,
  "columnSize": (args) => `${args.value} pikslit`,
  "descending": `laskuv järjestus`,
  "descendingSort": (args) => `sorditud veeru järgi ${args.columnName} laskuvas järjestuses`,
  "select": `Vali`,
  "selectAll": `Vali kõik`,
  "sortable": `sorditav veerg`
};
var $da1e751a92575e02$exports = {};
$da1e751a92575e02$exports = {
  "ascending": `nouseva`,
  "ascendingSort": (args) => `lajiteltu sarakkeen ${args.columnName} mukaan nousevassa järjestyksessä`,
  "columnSize": (args) => `${args.value} pikseliä`,
  "descending": `laskeva`,
  "descendingSort": (args) => `lajiteltu sarakkeen ${args.columnName} mukaan laskevassa järjestyksessä`,
  "select": `Valitse`,
  "selectAll": `Valitse kaikki`,
  "sortable": `lajiteltava sarake`
};
var $1b5d6c6c47d55106$exports = {};
$1b5d6c6c47d55106$exports = {
  "ascending": `croissant`,
  "ascendingSort": (args) => `trié en fonction de la colonne ${args.columnName} par ordre croissant`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `décroissant`,
  "descendingSort": (args) => `trié en fonction de la colonne ${args.columnName} par ordre décroissant`,
  "select": `Sélectionner`,
  "selectAll": `Sélectionner tout`,
  "sortable": `colonne triable`
};
var $7c18ba27b86d3308$exports = {};
$7c18ba27b86d3308$exports = {
  "ascending": `עולה`,
  "ascendingSort": (args) => `מוין לפי עמודה ${args.columnName} בסדר עולה`,
  "columnSize": (args) => `${args.value} פיקסלים`,
  "descending": `יורד`,
  "descendingSort": (args) => `מוין לפי עמודה ${args.columnName} בסדר יורד`,
  "select": `בחר`,
  "selectAll": `בחר הכול`,
  "sortable": `עמודה שניתן למיין`
};
var $2cb40998e20e8a46$exports = {};
$2cb40998e20e8a46$exports = {
  "ascending": `rastući`,
  "ascendingSort": (args) => `razvrstano po stupcima ${args.columnName} rastućem redoslijedom`,
  "columnSize": (args) => `${args.value} piksela`,
  "descending": `padajući`,
  "descendingSort": (args) => `razvrstano po stupcima ${args.columnName} padajućim redoslijedom`,
  "select": `Odaberite`,
  "selectAll": `Odaberite sve`,
  "sortable": `stupac koji se može razvrstati`
};
var $189e23eec1d6aa3a$exports = {};
$189e23eec1d6aa3a$exports = {
  "ascending": `növekvő`,
  "ascendingSort": (args) => `rendezve a(z) ${args.columnName} oszlop szerint, növekvő sorrendben`,
  "columnSize": (args) => `${args.value} képpont`,
  "descending": `csökkenő`,
  "descendingSort": (args) => `rendezve a(z) ${args.columnName} oszlop szerint, csökkenő sorrendben`,
  "select": `Kijelölés`,
  "selectAll": `Összes kijelölése`,
  "sortable": `rendezendő oszlop`
};
var $3c5ec8e4f015dfd0$exports = {};
$3c5ec8e4f015dfd0$exports = {
  "ascending": `crescente`,
  "ascendingSort": (args) => `in ordine crescente in base alla colonna ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixel`,
  "descending": `decrescente`,
  "descendingSort": (args) => `in ordine decrescente in base alla colonna ${args.columnName}`,
  "select": `Seleziona`,
  "selectAll": `Seleziona tutto`,
  "sortable": `colonna ordinabile`
};
var $d021d50e6b315ebb$exports = {};
$d021d50e6b315ebb$exports = {
  "ascending": `昇順`,
  "ascendingSort": (args) => `列 ${args.columnName} を昇順で並べ替え`,
  "columnSize": (args) => `${args.value} ピクセル`,
  "descending": `降順`,
  "descendingSort": (args) => `列 ${args.columnName} を降順で並べ替え`,
  "select": `選択`,
  "selectAll": `すべて選択`,
  "sortable": `並べ替え可能な列`
};
var $52535c35c24ec937$exports = {};
$52535c35c24ec937$exports = {
  "ascending": `오름차순`,
  "ascendingSort": (args) => `${args.columnName} 열을 기준으로 오름차순으로 정렬됨`,
  "columnSize": (args) => `${args.value} 픽셀`,
  "descending": `내림차순`,
  "descendingSort": (args) => `${args.columnName} 열을 기준으로 내림차순으로 정렬됨`,
  "select": `선택`,
  "selectAll": `모두 선택`,
  "sortable": `정렬 가능한 열`
};
var $b37ee03672edfd1d$exports = {};
$b37ee03672edfd1d$exports = {
  "ascending": `didėjančia tvarka`,
  "ascendingSort": (args) => `surikiuota pagal stulpelį ${args.columnName} didėjančia tvarka`,
  "columnSize": (args) => `${args.value} piks.`,
  "descending": `mažėjančia tvarka`,
  "descendingSort": (args) => `surikiuota pagal stulpelį ${args.columnName} mažėjančia tvarka`,
  "select": `Pasirinkti`,
  "selectAll": `Pasirinkti viską`,
  "sortable": `rikiuojamas stulpelis`
};
var $c7df6686b4189d56$exports = {};
$c7df6686b4189d56$exports = {
  "ascending": `augošā secībā`,
  "ascendingSort": (args) => `kārtots pēc kolonnas ${args.columnName} augošā secībā`,
  "columnSize": (args) => `${args.value} pikseļi`,
  "descending": `dilstošā secībā`,
  "descendingSort": (args) => `kārtots pēc kolonnas ${args.columnName} dilstošā secībā`,
  "select": `Atlasīt`,
  "selectAll": `Atlasīt visu`,
  "sortable": `kārtojamā kolonna`
};
var $da07fe8ec87e6b68$exports = {};
$da07fe8ec87e6b68$exports = {
  "ascending": `stigende`,
  "ascendingSort": (args) => `sortert etter kolonne ${args.columnName} i stigende rekkefølge`,
  "columnSize": (args) => `${args.value} piksler`,
  "descending": `synkende`,
  "descendingSort": (args) => `sortert etter kolonne ${args.columnName} i synkende rekkefølge`,
  "select": `Velg`,
  "selectAll": `Velg alle`,
  "sortable": `kolonne som kan sorteres`
};
var $64b7e390f5791490$exports = {};
$64b7e390f5791490$exports = {
  "ascending": `oplopend`,
  "ascendingSort": (args) => `gesorteerd in oplopende volgorde in kolom ${args.columnName}`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `aflopend`,
  "descendingSort": (args) => `gesorteerd in aflopende volgorde in kolom ${args.columnName}`,
  "select": `Selecteren`,
  "selectAll": `Alles selecteren`,
  "sortable": `sorteerbare kolom`
};
var $2a03621e773f1678$exports = {};
$2a03621e773f1678$exports = {
  "ascending": `rosnąco`,
  "ascendingSort": (args) => `posortowano według kolumny ${args.columnName} w porządku rosnącym`,
  "columnSize": (args) => `Liczba pikseli: ${args.value}`,
  "descending": `malejąco`,
  "descendingSort": (args) => `posortowano według kolumny ${args.columnName} w porządku malejącym`,
  "select": `Zaznacz`,
  "selectAll": `Zaznacz wszystko`,
  "sortable": `kolumna z możliwością sortowania`
};
var $0a79c0aba9e5ecc6$exports = {};
$0a79c0aba9e5ecc6$exports = {
  "ascending": `crescente`,
  "ascendingSort": (args) => `classificado pela coluna ${args.columnName} em ordem crescente`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `decrescente`,
  "descendingSort": (args) => `classificado pela coluna ${args.columnName} em ordem decrescente`,
  "select": `Selecionar`,
  "selectAll": `Selecionar tudo`,
  "sortable": `coluna classificável`
};
var $de7b4d0f7dc86fc8$exports = {};
$de7b4d0f7dc86fc8$exports = {
  "ascending": `ascendente`,
  "ascendingSort": (args) => `Ordenar por coluna ${args.columnName} em ordem ascendente`,
  "columnSize": (args) => `${args.value} pixels`,
  "descending": `descendente`,
  "descendingSort": (args) => `Ordenar por coluna ${args.columnName} em ordem descendente`,
  "select": `Selecionar`,
  "selectAll": `Selecionar tudo`,
  "sortable": `Coluna ordenável`
};
var $28ea7e849d77bd1c$exports = {};
$28ea7e849d77bd1c$exports = {
  "ascending": `crescătoare`,
  "ascendingSort": (args) => `sortate după coloana ${args.columnName} în ordine crescătoare`,
  "columnSize": (args) => `${args.value} pixeli`,
  "descending": `descrescătoare`,
  "descendingSort": (args) => `sortate după coloana ${args.columnName} în ordine descrescătoare`,
  "select": `Selectare`,
  "selectAll": `Selectare totală`,
  "sortable": `coloană sortabilă`
};
var $9a09321cf046b187$exports = {};
$9a09321cf046b187$exports = {
  "ascending": `возрастание`,
  "ascendingSort": (args) => `сортировать столбец ${args.columnName} в порядке возрастания`,
  "columnSize": (args) => `${args.value} пикс.`,
  "descending": `убывание`,
  "descendingSort": (args) => `сортировать столбец ${args.columnName} в порядке убывания`,
  "select": `Выбрать`,
  "selectAll": `Выбрать все`,
  "sortable": `сортируемый столбец`
};
var $5afe469a63fcac7b$exports = {};
$5afe469a63fcac7b$exports = {
  "ascending": `vzostupne`,
  "ascendingSort": (args) => `zoradené zostupne podľa stĺpca ${args.columnName}`,
  "columnSize": (args) => `Počet pixelov: ${args.value}`,
  "descending": `zostupne`,
  "descendingSort": (args) => `zoradené zostupne podľa stĺpca ${args.columnName}`,
  "select": `Vybrať`,
  "selectAll": `Vybrať všetko`,
  "sortable": `zoraditeľný stĺpec`
};
var $2956757ac31a7ce2$exports = {};
$2956757ac31a7ce2$exports = {
  "ascending": `naraščajoče`,
  "ascendingSort": (args) => `razvrščeno po stolpcu ${args.columnName} v naraščajočem vrstnem redu`,
  "columnSize": (args) => `${args.value} slikovnih pik`,
  "descending": `padajoče`,
  "descendingSort": (args) => `razvrščeno po stolpcu ${args.columnName} v padajočem vrstnem redu`,
  "select": `Izberite`,
  "selectAll": `Izberite vse`,
  "sortable": `razvrstljivi stolpec`
};
var $cedee0e66b175529$exports = {};
$cedee0e66b175529$exports = {
  "ascending": `rastući`,
  "ascendingSort": (args) => `sortirano po kolonama ${args.columnName} rastućim redosledom`,
  "descending": `padajući`,
  "descendingSort": (args) => `sortirano po kolonama ${args.columnName} padajućim redosledom`,
  "select": `Izaberite`,
  "selectAll": `Izaberite sve`,
  "sortable": `kolona koja se može sortirati`
};
var $6db19998ba4427da$exports = {};
$6db19998ba4427da$exports = {
  "ascending": `stigande`,
  "ascendingSort": (args) => `sorterat på kolumn ${args.columnName} i stigande ordning`,
  "columnSize": (args) => `${args.value} pixlar`,
  "descending": `fallande`,
  "descendingSort": (args) => `sorterat på kolumn ${args.columnName} i fallande ordning`,
  "select": `Markera`,
  "selectAll": `Markera allt`,
  "sortable": `sorterbar kolumn`
};
var $166b7c9cc1adb1a1$exports = {};
$166b7c9cc1adb1a1$exports = {
  "ascending": `artan sırada`,
  "ascendingSort": (args) => `${args.columnName} sütuna göre artan düzende sırala`,
  "columnSize": (args) => `${args.value} piksel`,
  "descending": `azalan sırada`,
  "descendingSort": (args) => `${args.columnName} sütuna göre azalan düzende sırala`,
  "select": `Seç`,
  "selectAll": `Tümünü Seç`,
  "sortable": `Sıralanabilir sütun`
};
var $c7ab180b401e49ff$exports = {};
$c7ab180b401e49ff$exports = {
  "ascending": `висхідний`,
  "ascendingSort": (args) => `відсортовано за стовпцем ${args.columnName} у висхідному порядку`,
  "columnSize": (args) => `${args.value} пікс.`,
  "descending": `низхідний`,
  "descendingSort": (args) => `відсортовано за стовпцем ${args.columnName} у низхідному порядку`,
  "select": `Вибрати`,
  "selectAll": `Вибрати все`,
  "sortable": `сортувальний стовпець`
};
var $1648ec00941567f3$exports = {};
$1648ec00941567f3$exports = {
  "ascending": `升序`,
  "ascendingSort": (args) => `按列 ${args.columnName} 升序排序`,
  "columnSize": (args) => `${args.value} 像素`,
  "descending": `降序`,
  "descendingSort": (args) => `按列 ${args.columnName} 降序排序`,
  "select": `选择`,
  "selectAll": `全选`,
  "sortable": `可排序的列`
};
var $b26f22384b3c1526$exports = {};
$b26f22384b3c1526$exports = {
  "ascending": `遞增`,
  "ascendingSort": (args) => `已依據「${args.columnName}」欄遞增排序`,
  "columnSize": (args) => `${args.value} 像素`,
  "descending": `遞減`,
  "descendingSort": (args) => `已依據「${args.columnName}」欄遞減排序`,
  "select": `選取`,
  "selectAll": `全選`,
  "sortable": `可排序的欄`
};
$ae7e9c471762b4d3$exports = {
  "ar-AE": $ce3de3ff2fd66848$exports,
  "bg-BG": $cb80dcce530985b9$exports,
  "cs-CZ": $68ac86749db4c0fb$exports,
  "da-DK": $9a6cbac08487e661$exports,
  "de-DE": $c963661d89486e72$exports,
  "el-GR": $ac03861c6e8605f4$exports,
  "en-US": $09e6b82e0d6e466a$exports,
  "es-ES": $8cc39eb66c2bf220$exports,
  "et-EE": $4e11db3c25a38112$exports,
  "fi-FI": $da1e751a92575e02$exports,
  "fr-FR": $1b5d6c6c47d55106$exports,
  "he-IL": $7c18ba27b86d3308$exports,
  "hr-HR": $2cb40998e20e8a46$exports,
  "hu-HU": $189e23eec1d6aa3a$exports,
  "it-IT": $3c5ec8e4f015dfd0$exports,
  "ja-JP": $d021d50e6b315ebb$exports,
  "ko-KR": $52535c35c24ec937$exports,
  "lt-LT": $b37ee03672edfd1d$exports,
  "lv-LV": $c7df6686b4189d56$exports,
  "nb-NO": $da07fe8ec87e6b68$exports,
  "nl-NL": $64b7e390f5791490$exports,
  "pl-PL": $2a03621e773f1678$exports,
  "pt-BR": $0a79c0aba9e5ecc6$exports,
  "pt-PT": $de7b4d0f7dc86fc8$exports,
  "ro-RO": $28ea7e849d77bd1c$exports,
  "ru-RU": $9a09321cf046b187$exports,
  "sk-SK": $5afe469a63fcac7b$exports,
  "sl-SI": $2956757ac31a7ce2$exports,
  "sr-SP": $cedee0e66b175529$exports,
  "sv-SE": $6db19998ba4427da$exports,
  "tr-TR": $166b7c9cc1adb1a1$exports,
  "uk-UA": $c7ab180b401e49ff$exports,
  "zh-CN": $1648ec00941567f3$exports,
  "zh-TW": $b26f22384b3c1526$exports
};
var $0ba3c81c7f1caedd$export$da43f8f5cb04028d = class extends $d1c300d9c497e402$export$de9feff04fda126e {
  isCell(node) {
    return node.type === "cell" || node.type === "rowheader" || node.type === "column";
  }
  getKeyBelow(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (startItem.type === "column") {
      let child = [
        ...startItem.childNodes
      ][0];
      if (child)
        return child.key;
      let firstKey = this.getFirstKey();
      if (firstKey == null)
        return;
      let firstItem = this.collection.getItem(firstKey);
      return [
        ...firstItem.childNodes
      ][startItem.index].key;
    }
    return super.getKeyBelow(key);
  }
  getKeyAbove(key) {
    let startItem = this.collection.getItem(key);
    if (!startItem)
      return;
    if (startItem.type === "column") {
      let parent = this.collection.getItem(startItem.parentKey);
      if (parent && parent.type === "column")
        return parent.key;
      return;
    }
    let superKey = super.getKeyAbove(key);
    if (superKey != null && this.collection.getItem(superKey).type !== "headerrow")
      return superKey;
    if (this.isCell(startItem))
      return this.collection.columns[startItem.index].key;
    return this.collection.columns[0].key;
  }
  findNextColumnKey(column) {
    let key = this.findNextKey(
      column.key,
      (item) => item.type === "column"
    );
    if (key != null)
      return key;
    let row = this.collection.headerRows[column.level];
    for (let item1 of row.childNodes) {
      if (item1.type === "column")
        return item1.key;
    }
  }
  findPreviousColumnKey(column) {
    let key = this.findPreviousKey(
      column.key,
      (item) => item.type === "column"
    );
    if (key != null)
      return key;
    let row = this.collection.headerRows[column.level];
    let childNodes = [
      ...row.childNodes
    ];
    for (let i13 = childNodes.length - 1; i13 >= 0; i13--) {
      let item = childNodes[i13];
      if (item.type === "column")
        return item.key;
    }
  }
  getKeyRightOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (item.type === "column")
      return this.direction === "rtl" ? this.findPreviousColumnKey(item) : this.findNextColumnKey(item);
    return super.getKeyRightOf(key);
  }
  getKeyLeftOf(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return;
    if (item.type === "column")
      return this.direction === "rtl" ? this.findNextColumnKey(item) : this.findPreviousColumnKey(item);
    return super.getKeyLeftOf(key);
  }
  getKeyForSearch(search, fromKey) {
    if (!this.collator)
      return null;
    let collection = this.collection;
    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();
    if (key == null)
      return null;
    let startItem = collection.getItem(key);
    if (startItem.type === "cell")
      key = startItem.parentKey;
    let hasWrapped = false;
    while (key != null) {
      let item = collection.getItem(key);
      for (let cell of item.childNodes) {
        let column = collection.columns[cell.index];
        if (collection.rowHeaderColumnKeys.has(column.key) && cell.textValue) {
          let substring = cell.textValue.slice(0, search.length);
          if (this.collator.compare(substring, search) === 0) {
            let fromItem = fromKey != null ? collection.getItem(fromKey) : startItem;
            return fromItem.type === "cell" ? cell.key : item.key;
          }
        }
      }
      key = this.getKeyBelow(key);
      if (key == null && !hasWrapped) {
        key = this.getFirstKey();
        hasWrapped = true;
      }
    }
    return null;
  }
};
function $6e31608fbba75bab$export$25bceaac3c7e4dc7(props, state, ref1) {
  let { keyboardDelegate, isVirtualized, layout } = props;
  let collator = $325a3faab7a68acd$export$a16aca283550c30d({
    usage: "search",
    sensitivity: "base"
  });
  let { direction } = $18f2051aff69b9bf$export$43bb16f9c6d9e3f7();
  let delegate = F(
    () => keyboardDelegate || new $0ba3c81c7f1caedd$export$da43f8f5cb04028d({
      collection: state.collection,
      disabledKeys: state.disabledKeys,
      ref: ref1,
      direction,
      collator,
      layout
    }),
    [
      keyboardDelegate,
      state.collection,
      state.disabledKeys,
      ref1,
      direction,
      collator,
      layout
    ]
  );
  let id = $bdb11010cef70236$export$f680877a34711e375(props.id);
  $2140fb2337097f2d$export$552312adfd451dab.set(state, id);
  let { gridProps } = $83c6e2eafa584c67$export$f6b86a04e5d66d90({
    ...props,
    id,
    keyboardDelegate: delegate,
    getRowText(key) {
      let added = state.collection.getItem(key);
      if (!added)
        return "";
      if (added.textValue != null)
        return added.textValue;
      let rowHeaderColumnKeys = state.collection.rowHeaderColumnKeys;
      if (rowHeaderColumnKeys) {
        let text = [];
        for (let cell of added.childNodes) {
          let column = state.collection.columns[cell.index];
          if (rowHeaderColumnKeys.has(column.key) && cell.textValue)
            text.push(cell.textValue);
          if (text.length === rowHeaderColumnKeys.size)
            break;
        }
        return text.join(" ");
      }
      return "";
    }
  }, state, ref1);
  if (isVirtualized)
    gridProps["aria-rowcount"] = state.collection.size + state.collection.headerRows.length;
  let { column: column1, direction: sortDirection } = state.sortDescriptor || {};
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1($parcel$interopDefault3($ae7e9c471762b4d3$exports));
  let sortDescription = F(() => {
    var ref;
    let columnName = (ref = state.collection.columns.find(
      (c15) => c15.key === column1
    )) === null || ref === void 0 ? void 0 : ref.textValue;
    return sortDirection && column1 ? stringFormatter.format(`${sortDirection}Sort`, {
      columnName
    }) : void 0;
  }, [
    sortDirection,
    column1,
    state.collection.columns
  ]);
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa19(sortDescription);
  $4f58c5f72bcf79f7$export$496315a1608d96022(() => {
    $319e236875307eab$export$a9b970dcc4ae71a9(sortDescription, "assertive", 500);
  }, [
    sortDescription
  ]);
  return {
    gridProps: $3ef42575df84b30b$export$9d1611c77c2fe9289(
      gridProps,
      descriptionProps,
      // If table is empty, make sure the table is tabbable
      state.collection.size === 0 && {
        tabIndex: 0
      },
      {
        // merge sort description with long press information
        "aria-describedby": [
          descriptionProps["aria-describedby"],
          gridProps["aria-describedby"]
        ].filter(Boolean).join(" ")
      }
    )
  };
}
function $f329116d8ad0aba0$export$9514819a8c81e960(props, state, ref) {
  var ref1, ref2;
  let { node } = props;
  let allowsSorting = node.props.allowsSorting;
  let { gridCellProps } = $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c({
    ...props,
    focusMode: node.props.isSelectionCell || props.hasMenu || node.props.allowsSorting ? "child" : "cell"
  }, state, ref);
  let isSelectionCellDisabled = node.props.isSelectionCell && state.selectionManager.selectionMode === "single";
  let { pressProps } = $f6c31cce2adf654f$export$45712eceda6fad219({
    isDisabled: !allowsSorting || isSelectionCellDisabled,
    onPress() {
      state.sort(node.key);
    },
    ref
  });
  let { focusableProps } = $e6afbd83fe6ebbd2$export$4c014de7c8940b4c5({}, ref);
  if (props.hasMenu)
    pressProps = {};
  let ariaSort = null;
  let isSortedColumn = ((ref1 = state.sortDescriptor) === null || ref1 === void 0 ? void 0 : ref1.column) === node.key;
  let sortDirection = (ref2 = state.sortDescriptor) === null || ref2 === void 0 ? void 0 : ref2.direction;
  if (node.props.allowsSorting && !$c87311424ea30a05$export$a11b0059900ceec89())
    ariaSort = isSortedColumn ? sortDirection : "none";
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1($parcel$interopDefault3($ae7e9c471762b4d3$exports));
  let sortDescription;
  if (allowsSorting) {
    sortDescription = `${stringFormatter.format("sortable")}`;
    if (isSortedColumn && sortDirection && $c87311424ea30a05$export$a11b0059900ceec89())
      sortDescription = `${sortDescription}, ${stringFormatter.format(sortDirection)}`;
  }
  let descriptionProps = $ef06256079686ba0$export$f8aeda7b10753fa19(sortDescription);
  return {
    columnHeaderProps: {
      ...$3ef42575df84b30b$export$9d1611c77c2fe9289(
        gridCellProps,
        pressProps,
        focusableProps,
        descriptionProps,
        // If the table is empty, make all column headers untabbable or programatically focusable
        state.collection.size === 0 && {
          tabIndex: null
        }
      ),
      role: "columnheader",
      id: $2140fb2337097f2d$export$37cd4213f2ad742e(state, node.key),
      "aria-colspan": node.colspan && node.colspan > 1 ? node.colspan : null,
      "aria-sort": ariaSort
    }
  };
}
function $b2db214c022798eb$export$7f2f6ae19e707aa5(props, state, ref) {
  let { node } = props;
  let { rowProps, isPressed } = $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref);
  return {
    rowProps: {
      ...rowProps,
      "aria-labelledby": $2140fb2337097f2d$export$85069b70317f543(state, node.key)
    },
    isPressed
  };
}
function $f917ee10f4c32dab$export$1b95a7d2d517b841(props, state, ref) {
  let { node, isVirtualized } = props;
  let rowProps = {
    role: "row"
  };
  if (isVirtualized)
    rowProps["aria-rowindex"] = node.index + 1;
  return {
    rowProps
  };
}
function $7713593715703b24$export$49571c903d73624c(props, state, ref) {
  let { gridCellProps, isPressed } = $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref);
  let columnKey = props.node.column.key;
  if (state.collection.rowHeaderColumnKeys.has(columnKey)) {
    gridCellProps.role = "rowheader";
    gridCellProps.id = $2140fb2337097f2d$export$19baff3266315d44(state, props.node.parentKey, columnKey);
  }
  return {
    gridCellProps,
    isPressed
  };
}
function $2a795c53a101c542$export$16ea7f650bd7c1bb(props, state) {
  let { key } = props;
  const { checkboxProps } = $7cb39d07f245a780$export$70e2eed1a92976ad(props, state);
  return {
    checkboxProps: {
      ...checkboxProps,
      "aria-labelledby": `${checkboxProps.id} ${$2140fb2337097f2d$export$85069b70317f543(state, key)}`
    }
  };
}
function $2a795c53a101c542$export$1003db6a7e384b99(state) {
  let { isEmpty, isSelectAll, selectionMode } = state.selectionManager;
  const stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1($parcel$interopDefault3($ae7e9c471762b4d3$exports));
  return {
    checkboxProps: {
      "aria-label": stringFormatter.format(selectionMode === "single" ? "select" : "selectAll"),
      isSelected: isSelectAll,
      isDisabled: selectionMode !== "multiple" || state.collection.size === 0,
      isIndeterminate: !isEmpty && !isSelectAll,
      onChange: () => state.selectionManager.toggleSelectAll()
    }
  };
}
function $0047e6c294ea075f$export$6fb1613bd7b28198() {
  return $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf();
}

// node_modules/@react-stately/collections/dist/module.js
init_compat_module();
function $c1d7fb2ec91bae71$var$Item2(props) {
  return null;
}
$c1d7fb2ec91bae71$var$Item2.getCollectionNode = function* getCollectionNode3(props, context) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning))
    console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  yield {
    type: "item",
    props,
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems2(props),
    *childNodes() {
      if (childItems)
        for (let child1 of childItems)
          yield {
            type: "item",
            value: child1
          };
      else if (title) {
        let items = [];
        Cn.Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function $c1d7fb2ec91bae71$var$hasChildItems2(props) {
  if (props.hasChildItems != null)
    return props.hasChildItems;
  if (props.childItems)
    return true;
  if (props.title && Cn.Children.count(props.children) > 0)
    return true;
  return false;
}
var $c1d7fb2ec91bae71$export$6d08773d2e66f8f2 = $c1d7fb2ec91bae71$var$Item2;
function $9fc4852771d079eb$var$Section2(props) {
  return null;
}
$9fc4852771d079eb$var$Section2.getCollectionNode = function* getCollectionNode4(props) {
  let { children, title, items: items1 } = props;
  yield {
    type: "section",
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items1)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items1)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items = [];
        Cn.Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
var $9fc4852771d079eb$export$6e2c8f0811a474ce = $9fc4852771d079eb$var$Section2;
var $eb2240fc39a57fa5$export$bf788dd355e3a401 = class {
  build(props, context) {
    this.context = context;
    return $eb2240fc39a57fa5$var$iterable(
      () => this.iterateCollection(props)
    );
  }
  *iterateCollection(props) {
    let { children, items } = props;
    if (typeof children === "function") {
      if (!items)
        throw new Error("props.children was a function but props.items is missing");
      for (let item of props.items)
        yield* this.getFullNode({
          value: item
        }, {
          renderer: children
        });
    } else {
      let items2 = [];
      Cn.Children.forEach(children, (child) => {
        items2.push(child);
      });
      let index = 0;
      for (let item of items2) {
        let nodes = this.getFullNode({
          element: item,
          index
        }, {});
        for (let node of nodes) {
          index++;
          yield node;
        }
      }
    }
  }
  getKey(item, partialNode, state, parentKey) {
    if (item.key != null)
      return item.key;
    if (partialNode.type === "cell" && partialNode.key != null)
      return `${parentKey}${partialNode.key}`;
    let v4 = partialNode.value;
    if (v4 != null) {
      var _key;
      let key = (_key = v4.key) !== null && _key !== void 0 ? _key : v4.id;
      if (key == null)
        throw new Error("No key found for item");
      return key;
    }
    return parentKey ? `${parentKey}.${partialNode.index}` : `$.${partialNode.index}`;
  }
  getChildState(state, partialNode) {
    return {
      renderer: partialNode.renderer || state.renderer
    };
  }
  *getFullNode(partialNode, state, parentKey, parentNode) {
    let element = partialNode.element;
    if (!element && partialNode.value && state && state.renderer) {
      let cached = this.cache.get(partialNode.value);
      if (cached && (!cached.shouldInvalidate || !cached.shouldInvalidate(this.context))) {
        cached.index = partialNode.index;
        cached.parentKey = parentNode ? parentNode.key : null;
        yield cached;
        return;
      }
      element = state.renderer(partialNode.value);
    }
    if (Cn.isValidElement(element)) {
      let type = element.type;
      if (typeof type !== "function" && typeof type.getCollectionNode !== "function") {
        let name = typeof element.type === "function" ? element.type.name : element.type;
        throw new Error(`Unknown element <${name}> in collection.`);
      }
      let childNodes = type.getCollectionNode(element.props, this.context);
      let index = partialNode.index;
      let result = childNodes.next();
      while (!result.done && result.value) {
        let childNode = result.value;
        partialNode.index = index;
        let nodeKey = childNode.key;
        if (!nodeKey)
          nodeKey = childNode.element ? null : this.getKey(element, partialNode, state, parentKey);
        let nodes = this.getFullNode({
          ...childNode,
          key: nodeKey,
          index,
          wrapper: $eb2240fc39a57fa5$var$compose(partialNode.wrapper, childNode.wrapper)
        }, this.getChildState(state, childNode), parentKey ? `${parentKey}${element.key}` : element.key, parentNode);
        let children = [
          ...nodes
        ];
        for (let node2 of children) {
          node2.value = childNode.value || partialNode.value;
          if (node2.value)
            this.cache.set(node2.value, node2);
          if (partialNode.type && node2.type !== partialNode.type)
            throw new Error(`Unsupported type <${$eb2240fc39a57fa5$var$capitalize(node2.type)}> in <${$eb2240fc39a57fa5$var$capitalize(parentNode.type)}>. Only <${$eb2240fc39a57fa5$var$capitalize(partialNode.type)}> is supported.`);
          index++;
          yield node2;
        }
        result = childNodes.next(children);
      }
      return;
    }
    if (partialNode.key == null)
      return;
    let builder = this;
    let node = {
      type: partialNode.type,
      props: partialNode.props,
      key: partialNode.key,
      parentKey: parentNode ? parentNode.key : null,
      value: partialNode.value,
      level: parentNode ? parentNode.level + 1 : 0,
      index: partialNode.index,
      rendered: partialNode.rendered,
      textValue: partialNode.textValue,
      "aria-label": partialNode["aria-label"],
      wrapper: partialNode.wrapper,
      shouldInvalidate: partialNode.shouldInvalidate,
      hasChildNodes: partialNode.hasChildNodes,
      childNodes: $eb2240fc39a57fa5$var$iterable(function* () {
        if (!partialNode.hasChildNodes)
          return;
        let index = 0;
        for (let child of partialNode.childNodes()) {
          if (child.key != null)
            child.key = `${node.key}${child.key}`;
          child.index = index;
          let nodes = builder.getFullNode(child, builder.getChildState(state, child), node.key, node);
          for (let node1 of nodes) {
            index++;
            yield node1;
          }
        }
      })
    };
    yield node;
  }
  constructor() {
    this.cache = /* @__PURE__ */ new WeakMap();
  }
};
function $eb2240fc39a57fa5$var$iterable(iterator) {
  let cache = [];
  let iterable = null;
  return {
    *[Symbol.iterator]() {
      for (let item of cache)
        yield item;
      if (!iterable)
        iterable = iterator();
      for (let item1 of iterable) {
        cache.push(item1);
        yield item1;
      }
    }
  };
}
function $eb2240fc39a57fa5$var$compose(outer, inner) {
  if (outer && inner)
    return (element) => outer(inner(element));
  if (outer)
    return outer;
  if (inner)
    return inner;
}
function $eb2240fc39a57fa5$var$capitalize(str) {
  return str[0].toUpperCase() + str.slice(1);
}
function $7613b1592d41b092$export$6cd28814d92fa9c9(props, factory, context, invalidators = []) {
  let builder = F(
    () => new $eb2240fc39a57fa5$export$bf788dd355e3a401(),
    []
  );
  let prev = _(null);
  return F(() => {
    let nodes = builder.build(props, context);
    prev.current = factory(nodes, prev.current);
    return prev.current;
  }, [
    builder,
    props.children,
    props.items,
    context,
    ...invalidators
  ]);
}
var $453cc9f0df89c0a5$var$cache = /* @__PURE__ */ new WeakMap();
function $453cc9f0df89c0a5$export$77d5aafae4e095b2(collection) {
  let count = $453cc9f0df89c0a5$var$cache.get(collection);
  if (count != null)
    return count;
  count = 0;
  for (let item of collection)
    if (item.type === "section")
      count += $453cc9f0df89c0a5$export$77d5aafae4e095b2(item.childNodes);
    else
      count++;
  $453cc9f0df89c0a5$var$cache.set(collection, count);
  return count;
}

// node_modules/@react-stately/table/dist/module.js
init_compat_module();

// node_modules/@react-stately/grid/node_modules/@react-stately/collections/dist/import.mjs
init_compat_module();
function $c1d7fb2ec91bae71$var$Item3(props) {
  return null;
}
$c1d7fb2ec91bae71$var$Item3.getCollectionNode = function* getCollectionNode5(props, context) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning))
    console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  yield {
    type: "item",
    props,
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems3(props),
    *childNodes() {
      if (childItems)
        for (let child of childItems)
          yield {
            type: "item",
            value: child
          };
      else if (title) {
        let items = [];
        (0, Cn).Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function $c1d7fb2ec91bae71$var$hasChildItems3(props) {
  if (props.hasChildItems != null)
    return props.hasChildItems;
  if (props.childItems)
    return true;
  if (props.title && (0, Cn).Children.count(props.children) > 0)
    return true;
  return false;
}
function $9fc4852771d079eb$var$Section3(props) {
  return null;
}
$9fc4852771d079eb$var$Section3.getCollectionNode = function* getCollectionNode6(props) {
  let { children, title, items } = props;
  yield {
    type: "section",
    props,
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items1 = [];
        (0, Cn).Children.forEach(children, (child) => {
          items1.push({
            type: "item",
            element: child
          });
        });
        yield* items1;
      }
    }
  };
};
function $c5a24bc478652b5f$export$1005530eda016c132(node, collection) {
  if (typeof collection.getChildren === "function")
    return collection.getChildren(node.key);
  return node.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f712(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e22(iterable, 0);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e22(iterable, index) {
  if (index < 0)
    return void 0;
  let i13 = 0;
  for (let item of iterable) {
    if (i13 === index)
      return item;
    i13++;
  }
}
function $c5a24bc478652b5f$export$7475b2c64539e4cf2(iterable) {
  let lastItem = void 0;
  for (let value of iterable)
    lastItem = value;
  return lastItem;
}

// node_modules/@react-stately/grid/dist/import.mjs
init_compat_module();

// node_modules/@react-stately/selection/dist/import.mjs
init_compat_module();

// node_modules/@react-stately/selection/node_modules/@react-stately/collections/dist/import.mjs
init_compat_module();
function $c1d7fb2ec91bae71$var$Item4(props) {
  return null;
}
$c1d7fb2ec91bae71$var$Item4.getCollectionNode = function* getCollectionNode7(props, context) {
  let { childItems, title, children } = props;
  let rendered = props.title || props.children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"] || "";
  if (!textValue && !(context === null || context === void 0 ? void 0 : context.suppressTextValueWarning))
    console.warn("<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.");
  yield {
    type: "item",
    props,
    rendered,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: $c1d7fb2ec91bae71$var$hasChildItems4(props),
    *childNodes() {
      if (childItems)
        for (let child of childItems)
          yield {
            type: "item",
            value: child
          };
      else if (title) {
        let items = [];
        (0, Cn).Children.forEach(children, (child) => {
          items.push({
            type: "item",
            element: child
          });
        });
        yield* items;
      }
    }
  };
};
function $c1d7fb2ec91bae71$var$hasChildItems4(props) {
  if (props.hasChildItems != null)
    return props.hasChildItems;
  if (props.childItems)
    return true;
  if (props.title && (0, Cn).Children.count(props.children) > 0)
    return true;
  return false;
}
function $9fc4852771d079eb$var$Section4(props) {
  return null;
}
$9fc4852771d079eb$var$Section4.getCollectionNode = function* getCollectionNode8(props) {
  let { children, title, items } = props;
  yield {
    type: "section",
    props,
    hasChildNodes: true,
    rendered: title,
    "aria-label": props["aria-label"],
    *childNodes() {
      if (typeof children === "function") {
        if (!items)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items1 = [];
        (0, Cn).Children.forEach(children, (child) => {
          items1.push({
            type: "item",
            element: child
          });
        });
        yield* items1;
      }
    }
  };
};
function $c5a24bc478652b5f$export$1005530eda016c133(node, collection) {
  if (typeof collection.getChildren === "function")
    return collection.getChildren(node.key);
  return node.childNodes;
}
function $c5a24bc478652b5f$export$fbdeaa6a76694f713(iterable) {
  return $c5a24bc478652b5f$export$5f3398f8733f90e23(iterable, 0);
}
function $c5a24bc478652b5f$export$5f3398f8733f90e23(iterable, index) {
  if (index < 0)
    return void 0;
  let i13 = 0;
  for (let item of iterable) {
    if (i13 === index)
      return item;
    i13++;
  }
}
function $c5a24bc478652b5f$export$8c434b3a7a4dad6(collection, a13, b6) {
  if (a13.parentKey === b6.parentKey)
    return a13.index - b6.index;
  let aAncestors = $c5a24bc478652b5f$var$getAncestors(collection, a13);
  let bAncestors = $c5a24bc478652b5f$var$getAncestors(collection, b6);
  let firstNonMatchingAncestor = aAncestors.slice(0, bAncestors.length).findIndex((a14, i13) => a14 !== bAncestors[i13]);
  if (firstNonMatchingAncestor !== -1) {
    a13 = aAncestors[firstNonMatchingAncestor];
    b6 = bAncestors[firstNonMatchingAncestor];
    return a13.index - b6.index;
  }
  return -1;
}
function $c5a24bc478652b5f$var$getAncestors(collection, node) {
  let parents = [];
  while ((node === null || node === void 0 ? void 0 : node.parentKey) != null) {
    node = collection.getItem(node.parentKey);
    parents.unshift(node);
  }
  return parents;
}

// node_modules/@react-stately/selection/dist/import.mjs
var $e40ea825a81a3709$export$52baac22726c72bf = class extends Set {
  constructor(keys, anchorKey, currentKey) {
    super(keys);
    if (keys instanceof $e40ea825a81a3709$export$52baac22726c72bf) {
      this.anchorKey = anchorKey || keys.anchorKey;
      this.currentKey = currentKey || keys.currentKey;
    } else {
      this.anchorKey = anchorKey;
      this.currentKey = currentKey;
    }
  }
};
function $7af3f5b51489e0b5$var$equalSets(setA, setB) {
  if (setA.size !== setB.size)
    return false;
  for (let item of setA) {
    if (!setB.has(item))
      return false;
  }
  return true;
}
function $7af3f5b51489e0b5$export$253fe78d46329472(props) {
  let { selectionMode = "none", disallowEmptySelection, allowDuplicateSelectionEvents, selectionBehavior: selectionBehaviorProp = "toggle", disabledBehavior = "all" } = props;
  let isFocusedRef = (0, _)(false);
  let [, setFocused] = (0, h)(false);
  let focusedKeyRef = (0, _)(null);
  let childFocusStrategyRef = (0, _)(null);
  let [, setFocusedKey] = (0, h)(null);
  let selectedKeysProp = (0, F)(() => $7af3f5b51489e0b5$var$convertSelection(props.selectedKeys), [
    props.selectedKeys
  ]);
  let defaultSelectedKeys = (0, F)(() => $7af3f5b51489e0b5$var$convertSelection(props.defaultSelectedKeys, new (0, $e40ea825a81a3709$export$52baac22726c72bf)()), [
    props.defaultSelectedKeys
  ]);
  let [selectedKeys, setSelectedKeys] = (0, $458b0a5536c1a7cf$export$40bfa8c7b0832715)(selectedKeysProp, defaultSelectedKeys, props.onSelectionChange);
  let disabledKeysProp = (0, F)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let [selectionBehavior, setSelectionBehavior] = (0, h)(selectionBehaviorProp);
  if (selectionBehaviorProp === "replace" && selectionBehavior === "toggle" && typeof selectedKeys === "object" && selectedKeys.size === 0)
    setSelectionBehavior("replace");
  let lastSelectionBehavior = (0, _)(selectionBehaviorProp);
  (0, p)(() => {
    if (selectionBehaviorProp !== lastSelectionBehavior.current) {
      setSelectionBehavior(selectionBehaviorProp);
      lastSelectionBehavior.current = selectionBehaviorProp;
    }
  }, [
    selectionBehaviorProp
  ]);
  return {
    selectionMode,
    disallowEmptySelection,
    selectionBehavior,
    setSelectionBehavior,
    get isFocused() {
      return isFocusedRef.current;
    },
    setFocused(f5) {
      isFocusedRef.current = f5;
      setFocused(f5);
    },
    get focusedKey() {
      return focusedKeyRef.current;
    },
    get childFocusStrategy() {
      return childFocusStrategyRef.current;
    },
    setFocusedKey(k6, childFocusStrategy = "first") {
      focusedKeyRef.current = k6;
      childFocusStrategyRef.current = childFocusStrategy;
      setFocusedKey(k6);
    },
    selectedKeys,
    setSelectedKeys(keys) {
      if (allowDuplicateSelectionEvents || !$7af3f5b51489e0b5$var$equalSets(keys, selectedKeys))
        setSelectedKeys(keys);
    },
    disabledKeys: disabledKeysProp,
    disabledBehavior
  };
}
function $7af3f5b51489e0b5$var$convertSelection(selection, defaultValue) {
  if (!selection)
    return defaultValue;
  return selection === "all" ? "all" : new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selection);
}
var $d496c0a20b6e58ec$export$6c8a5aaad13c9852 = class {
  /**
  * The type of selection that is allowed in the collection.
  */
  get selectionMode() {
    return this.state.selectionMode;
  }
  /**
  * Whether the collection allows empty selection.
  */
  get disallowEmptySelection() {
    return this.state.disallowEmptySelection;
  }
  /**
  * The selection behavior for the collection.
  */
  get selectionBehavior() {
    return this.state.selectionBehavior;
  }
  /**
  * Sets the selection behavior for the collection.
  */
  setSelectionBehavior(selectionBehavior) {
    this.state.setSelectionBehavior(selectionBehavior);
  }
  /**
  * Whether the collection is currently focused.
  */
  get isFocused() {
    return this.state.isFocused;
  }
  /**
  * Sets whether the collection is focused.
  */
  setFocused(isFocused) {
    this.state.setFocused(isFocused);
  }
  /**
  * The current focused key in the collection.
  */
  get focusedKey() {
    return this.state.focusedKey;
  }
  /** Whether the first or last child of the focused key should receive focus. */
  get childFocusStrategy() {
    return this.state.childFocusStrategy;
  }
  /**
  * Sets the focused key.
  */
  setFocusedKey(key, childFocusStrategy) {
    if (key == null || this.collection.getItem(key))
      this.state.setFocusedKey(key, childFocusStrategy);
  }
  /**
  * The currently selected keys in the collection.
  */
  get selectedKeys() {
    return this.state.selectedKeys === "all" ? new Set(this.getSelectAllKeys()) : this.state.selectedKeys;
  }
  /**
  * The raw selection value for the collection.
  * Either 'all' for select all, or a set of keys.
  */
  get rawSelection() {
    return this.state.selectedKeys;
  }
  /**
  * Returns whether a key is selected.
  */
  isSelected(key) {
    if (this.state.selectionMode === "none")
      return false;
    key = this.getKey(key);
    return this.state.selectedKeys === "all" ? this.canSelectItem(key) : this.state.selectedKeys.has(key);
  }
  /**
  * Whether the selection is empty.
  */
  get isEmpty() {
    return this.state.selectedKeys !== "all" && this.state.selectedKeys.size === 0;
  }
  /**
  * Whether all items in the collection are selected.
  */
  get isSelectAll() {
    if (this.isEmpty)
      return false;
    if (this.state.selectedKeys === "all")
      return true;
    if (this._isSelectAll != null)
      return this._isSelectAll;
    let allKeys = this.getSelectAllKeys();
    let selectedKeys = this.state.selectedKeys;
    this._isSelectAll = allKeys.every((k6) => selectedKeys.has(k6));
    return this._isSelectAll;
  }
  get firstSelectedKey() {
    let first = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!first || item && (0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, item, first) < 0)
        first = item;
    }
    return first === null || first === void 0 ? void 0 : first.key;
  }
  get lastSelectedKey() {
    let last = null;
    for (let key of this.state.selectedKeys) {
      let item = this.collection.getItem(key);
      if (!last || item && (0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, item, last) > 0)
        last = item;
    }
    return last === null || last === void 0 ? void 0 : last.key;
  }
  get disabledKeys() {
    return this.state.disabledKeys;
  }
  get disabledBehavior() {
    return this.state.disabledBehavior;
  }
  /**
  * Extends the selection to the given key.
  */
  extendSelection(toKey) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single") {
      this.replaceSelection(toKey);
      return;
    }
    toKey = this.getKey(toKey);
    let selection;
    if (this.state.selectedKeys === "all")
      selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)([
        toKey
      ], toKey, toKey);
    else {
      let selectedKeys = this.state.selectedKeys;
      let anchorKey = selectedKeys.anchorKey || toKey;
      selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(selectedKeys, anchorKey, toKey);
      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey))
        selection.delete(key);
      for (let key1 of this.getKeyRange(toKey, anchorKey))
        if (this.canSelectItem(key1))
          selection.add(key1);
    }
    this.state.setSelectedKeys(selection);
  }
  getKeyRange(from, to) {
    let fromItem = this.collection.getItem(from);
    let toItem = this.collection.getItem(to);
    if (fromItem && toItem) {
      if ((0, $c5a24bc478652b5f$export$8c434b3a7a4dad6)(this.collection, fromItem, toItem) <= 0)
        return this.getKeyRangeInternal(from, to);
      return this.getKeyRangeInternal(to, from);
    }
    return [];
  }
  getKeyRangeInternal(from, to) {
    let keys = [];
    let key = from;
    while (key) {
      let item = this.collection.getItem(key);
      if (item && item.type === "item" || item.type === "cell" && this.allowsCellSelection)
        keys.push(key);
      if (key === to)
        return keys;
      key = this.collection.getKeyAfter(key);
    }
    return [];
  }
  getKey(key) {
    let item = this.collection.getItem(key);
    if (!item)
      return key;
    if (item.type === "cell" && this.allowsCellSelection)
      return key;
    while (item.type !== "item" && item.parentKey != null)
      item = this.collection.getItem(item.parentKey);
    if (!item || item.type !== "item")
      return null;
    return item.key;
  }
  /**
  * Toggles whether the given key is selected.
  */
  toggleSelection(key) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single" && !this.isSelected(key)) {
      this.replaceSelection(key);
      return;
    }
    key = this.getKey(key);
    if (key == null)
      return;
    let keys = new (0, $e40ea825a81a3709$export$52baac22726c72bf)(this.state.selectedKeys === "all" ? this.getSelectAllKeys() : this.state.selectedKeys);
    if (keys.has(key))
      keys.delete(key);
    else if (this.canSelectItem(key)) {
      keys.add(key);
      keys.anchorKey = key;
      keys.currentKey = key;
    }
    if (this.disallowEmptySelection && keys.size === 0)
      return;
    this.state.setSelectedKeys(keys);
  }
  /**
  * Replaces the selection with only the given key.
  */
  replaceSelection(key) {
    if (this.selectionMode === "none")
      return;
    key = this.getKey(key);
    if (key == null)
      return;
    let selection = this.canSelectItem(key) ? new (0, $e40ea825a81a3709$export$52baac22726c72bf)([
      key
    ], key, key) : new (0, $e40ea825a81a3709$export$52baac22726c72bf)();
    this.state.setSelectedKeys(selection);
  }
  /**
  * Replaces the selection with the given keys.
  */
  setSelectedKeys(keys) {
    if (this.selectionMode === "none")
      return;
    let selection = new (0, $e40ea825a81a3709$export$52baac22726c72bf)();
    for (let key of keys) {
      key = this.getKey(key);
      if (key != null) {
        selection.add(key);
        if (this.selectionMode === "single")
          break;
      }
    }
    this.state.setSelectedKeys(selection);
  }
  getSelectAllKeys() {
    let keys = [];
    let addKeys = (key) => {
      while (key) {
        if (this.canSelectItem(key)) {
          let item = this.collection.getItem(key);
          if (item.type === "item")
            keys.push(key);
          if (item.hasChildNodes && (this.allowsCellSelection || item.type !== "item"))
            addKeys((0, $c5a24bc478652b5f$export$fbdeaa6a76694f713)((0, $c5a24bc478652b5f$export$1005530eda016c133)(item, this.collection)).key);
        }
        key = this.collection.getKeyAfter(key);
      }
    };
    addKeys(this.collection.getFirstKey());
    return keys;
  }
  /**
  * Selects all items in the collection.
  */
  selectAll() {
    if (!this.isSelectAll && this.selectionMode === "multiple")
      this.state.setSelectedKeys("all");
  }
  /**
  * Removes all keys from the selection.
  */
  clearSelection() {
    if (!this.disallowEmptySelection && (this.state.selectedKeys === "all" || this.state.selectedKeys.size > 0))
      this.state.setSelectedKeys(new (0, $e40ea825a81a3709$export$52baac22726c72bf)());
  }
  /**
  * Toggles between select all and an empty selection.
  */
  toggleSelectAll() {
    if (this.isSelectAll)
      this.clearSelection();
    else
      this.selectAll();
  }
  select(key, e15) {
    if (this.selectionMode === "none")
      return;
    if (this.selectionMode === "single") {
      if (this.isSelected(key) && !this.disallowEmptySelection)
        this.toggleSelection(key);
      else
        this.replaceSelection(key);
    } else if (this.selectionBehavior === "toggle" || e15 && (e15.pointerType === "touch" || e15.pointerType === "virtual"))
      this.toggleSelection(key);
    else
      this.replaceSelection(key);
  }
  /**
  * Returns whether the current selection is equal to the given selection.
  */
  isSelectionEqual(selection) {
    if (selection === this.state.selectedKeys)
      return true;
    let selectedKeys = this.selectedKeys;
    if (selection.size !== selectedKeys.size)
      return false;
    for (let key of selection) {
      if (!selectedKeys.has(key))
        return false;
    }
    for (let key1 of selectedKeys) {
      if (!selection.has(key1))
        return false;
    }
    return true;
  }
  canSelectItem(key) {
    if (this.state.selectionMode === "none" || this.state.disabledKeys.has(key))
      return false;
    let item = this.collection.getItem(key);
    if (!item || item.type === "cell" && !this.allowsCellSelection)
      return false;
    return true;
  }
  isDisabled(key) {
    return this.state.disabledKeys.has(key) && this.state.disabledBehavior === "all";
  }
  constructor(collection, state, options) {
    this.collection = collection;
    this.state = state;
    var _options_allowsCellSelection;
    this.allowsCellSelection = (_options_allowsCellSelection = options === null || options === void 0 ? void 0 : options.allowsCellSelection) !== null && _options_allowsCellSelection !== void 0 ? _options_allowsCellSelection : false;
    this._isSelectAll = null;
  }
};

// node_modules/@react-stately/grid/dist/import.mjs
function $62967d126f3aa823$export$4007ac09ff9c68ed(props) {
  let { collection, focusMode } = props;
  let selectionState = (0, $7af3f5b51489e0b5$export$253fe78d46329472)(props);
  let disabledKeys = (0, F)(() => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(), [
    props.disabledKeys
  ]);
  let setFocusedKey = selectionState.setFocusedKey;
  selectionState.setFocusedKey = (key, child) => {
    if (focusMode === "cell" && key != null) {
      let item = collection.getItem(key);
      if ((item === null || item === void 0 ? void 0 : item.type) === "item") {
        var _getLastItem, _getFirstItem;
        let children = (0, $c5a24bc478652b5f$export$1005530eda016c132)(item, collection);
        if (child === "last")
          key = (_getLastItem = (0, $c5a24bc478652b5f$export$7475b2c64539e4cf2)(children)) === null || _getLastItem === void 0 ? void 0 : _getLastItem.key;
        else
          key = (_getFirstItem = (0, $c5a24bc478652b5f$export$fbdeaa6a76694f712)(children)) === null || _getFirstItem === void 0 ? void 0 : _getFirstItem.key;
      }
    }
    setFocusedKey(key, child);
  };
  let selectionManager = (0, F)(() => new (0, $d496c0a20b6e58ec$export$6c8a5aaad13c9852)(collection, selectionState), [
    collection,
    selectionState
  ]);
  const cachedCollection = (0, _)(null);
  (0, p)(() => {
    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey)) {
      const node = cachedCollection.current.getItem(selectionState.focusedKey);
      const parentNode = node.parentKey != null && (node.type === "cell" || node.type === "rowheader" || node.type === "column") ? cachedCollection.current.getItem(node.parentKey) : node;
      const cachedRows = cachedCollection.current.rows;
      const rows = collection.rows;
      const diff = cachedRows.length - rows.length;
      let index = Math.min(diff > 1 ? Math.max(parentNode.index - diff + 1, 0) : parentNode.index, rows.length - 1);
      let newRow;
      while (index >= 0) {
        if (!selectionManager.isDisabled(rows[index].key)) {
          newRow = rows[index];
          break;
        }
        if (index < rows.length - 1)
          index++;
        else {
          if (index > parentNode.index)
            index = parentNode.index;
          index--;
        }
      }
      if (newRow) {
        const childNodes = newRow.hasChildNodes ? [
          ...(0, $c5a24bc478652b5f$export$1005530eda016c132)(newRow, collection)
        ] : [];
        const keyToFocus = newRow.hasChildNodes && parentNode !== node && node.index < childNodes.length ? childNodes[node.index].key : newRow.key;
        selectionState.setFocusedKey(keyToFocus);
      } else
        selectionState.setFocusedKey(null);
    }
    cachedCollection.current = collection;
  }, [
    collection,
    selectionManager,
    selectionState,
    selectionState.focusedKey
  ]);
  return {
    collection,
    disabledKeys,
    isKeyboardNavigationDisabled: false,
    selectionManager
  };
}
var $16805b1b18093c5f$var$_Symbol_iterator = Symbol.iterator;
var $16805b1b18093c5f$export$de3fdf6493c353d = class {
  *[$16805b1b18093c5f$var$_Symbol_iterator]() {
    yield* [
      ...this.rows
    ];
  }
  get size() {
    return [
      ...this.rows
    ].length;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    return node ? node.prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    return node ? node.nextKey : null;
  }
  getFirstKey() {
    var _2;
    return (_2 = [
      ...this.rows
    ][0]) === null || _2 === void 0 ? void 0 : _2.key;
  }
  getLastKey() {
    var _rows_;
    let rows = [
      ...this.rows
    ];
    return (_rows_ = rows[rows.length - 1]) === null || _rows_ === void 0 ? void 0 : _rows_.key;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  getChildren(key) {
    let node = this.keyMap.get(key);
    return (node === null || node === void 0 ? void 0 : node.childNodes) || [];
  }
  constructor(opts) {
    (0, _defineProperty)(this, "keyMap", /* @__PURE__ */ new Map());
    this.keyMap = /* @__PURE__ */ new Map();
    this.columnCount = opts === null || opts === void 0 ? void 0 : opts.columnCount;
    this.rows = [];
    let visit = (node) => {
      let prevNode = this.keyMap.get(node.key);
      if (opts.visitNode)
        node = opts.visitNode(node);
      this.keyMap.set(node.key, node);
      let childKeys = /* @__PURE__ */ new Set();
      let last2;
      for (let child of node.childNodes) {
        if (child.type === "cell" && child.parentKey == null)
          child.parentKey = node.key;
        childKeys.add(child.key);
        if (last2) {
          last2.nextKey = child.key;
          child.prevKey = last2.key;
        } else
          child.prevKey = null;
        visit(child);
        last2 = child;
      }
      if (last2)
        last2.nextKey = null;
      if (prevNode) {
        for (let child1 of prevNode.childNodes)
          if (!childKeys.has(child1.key))
            remove(child1);
      }
    };
    let remove = (node) => {
      this.keyMap.delete(node.key);
      for (let child of node.childNodes)
        if (this.keyMap.get(child.key) === child)
          remove(child);
    };
    let last;
    opts.items.forEach((node, i13) => {
      let rowNode = {
        level: 0,
        key: "row-" + i13,
        type: "row",
        value: void 0,
        hasChildNodes: true,
        childNodes: [
          ...node.childNodes
        ],
        rendered: void 0,
        textValue: void 0,
        ...node,
        index: i13
      };
      if (last) {
        last.nextKey = rowNode.key;
        rowNode.prevKey = last.key;
      } else
        rowNode.prevKey = null;
      this.rows.push(rowNode);
      visit(rowNode);
      last = rowNode;
    });
    if (last)
      last.nextKey = null;
  }
};

// node_modules/@react-stately/table/dist/module.js
var $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY = "row-header-column-" + Math.random().toString(36).slice(2);
function $788781baa30117fa$var$buildHeaderRows(keyMap, columnNodes) {
  let columns = [];
  let seen = /* @__PURE__ */ new Map();
  for (let column of columnNodes) {
    let parentKey = column.parentKey;
    let col = [
      column
    ];
    while (parentKey) {
      let parent = keyMap.get(parentKey);
      if (seen.has(parent)) {
        parent.colspan++;
        let { column: column2, index } = seen.get(parent);
        if (index > col.length)
          break;
        for (let i14 = index; i14 < col.length; i14++)
          column2.splice(i14, 0, null);
        for (let i1 = col.length; i1 < column2.length; i1++)
          if (column2[i1] && seen.has(column2[i1]))
            seen.get(column2[i1]).index = i1;
      } else {
        parent.colspan = 1;
        col.push(parent);
        seen.set(parent, {
          column: col,
          index: col.length - 1
        });
      }
      parentKey = parent.parentKey;
    }
    columns.push(col);
    column.index = columns.length - 1;
  }
  let maxLength = Math.max(...columns.map(
    (c15) => c15.length
  ));
  let headerRows = Array(maxLength).fill(0).map(
    () => []
  );
  let colIndex = 0;
  for (let column1 of columns) {
    let i14 = maxLength - 1;
    for (let item of column1) {
      if (item) {
        let row = headerRows[i14];
        let rowLength = row.reduce(
          (p7, c15) => p7 + c15.colspan,
          0
        );
        if (rowLength < colIndex) {
          let placeholder = {
            type: "placeholder",
            key: "placeholder-" + item.key,
            colspan: colIndex - rowLength,
            index: rowLength,
            value: null,
            rendered: null,
            level: i14,
            hasChildNodes: false,
            childNodes: [],
            textValue: null
          };
          if (row.length > 0) {
            row[row.length - 1].nextKey = placeholder.key;
            placeholder.prevKey = row[row.length - 1].key;
          }
          row.push(placeholder);
        }
        if (row.length > 0) {
          row[row.length - 1].nextKey = item.key;
          item.prevKey = row[row.length - 1].key;
        }
        item.level = i14;
        item.colIndex = colIndex;
        row.push(item);
      }
      i14--;
    }
    colIndex++;
  }
  let i13 = 0;
  for (let row1 of headerRows) {
    let rowLength = row1.reduce(
      (p7, c15) => p7 + c15.colspan,
      0
    );
    if (rowLength < columnNodes.length) {
      let placeholder = {
        type: "placeholder",
        key: "placeholder-" + row1[row1.length - 1].key,
        colspan: columnNodes.length - rowLength,
        index: rowLength,
        value: null,
        rendered: null,
        level: i13,
        hasChildNodes: false,
        childNodes: [],
        textValue: null,
        prevKey: row1[row1.length - 1].key
      };
      row1.push(placeholder);
    }
    i13++;
  }
  return headerRows.map((childNodes, index) => {
    let row = {
      type: "headerrow",
      key: "headerrow-" + index,
      index,
      value: null,
      rendered: null,
      level: 0,
      hasChildNodes: true,
      childNodes,
      textValue: null
    };
    return row;
  });
}
var tmp = Symbol.iterator;
var $788781baa30117fa$export$596e1b2e2cf93690 = class extends $16805b1b18093c5f$export$de3fdf6493c353d {
  *[tmp]() {
    yield* this.body.childNodes;
  }
  get size() {
    return [
      ...this.body.childNodes
    ].length;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    return node ? node.prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    return node ? node.nextKey : null;
  }
  getFirstKey() {
    var ref;
    return (ref = [
      ...this.body.childNodes
    ][0]) === null || ref === void 0 ? void 0 : ref.key;
  }
  getLastKey() {
    var ref;
    let rows = [
      ...this.body.childNodes
    ];
    return (ref = rows[rows.length - 1]) === null || ref === void 0 ? void 0 : ref.key;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  constructor(nodes, prev, opts) {
    let rowHeaderColumnKeys = /* @__PURE__ */ new Set();
    let body;
    let columns = [];
    if (opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) {
      let rowHeaderColumn = {
        type: "column",
        key: $788781baa30117fa$var$ROW_HEADER_COLUMN_KEY,
        value: null,
        textValue: "",
        level: 0,
        index: 0,
        hasChildNodes: false,
        rendered: null,
        childNodes: [],
        props: {
          isSelectionCell: true
        }
      };
      columns.unshift(rowHeaderColumn);
    }
    let rows = [];
    let columnKeyMap = /* @__PURE__ */ new Map();
    let visit = (node) => {
      switch (node.type) {
        case "body":
          body = node;
          break;
        case "column":
          columnKeyMap.set(node.key, node);
          if (!node.hasChildNodes) {
            columns.push(node);
            if (node.props.isRowHeader)
              rowHeaderColumnKeys.add(node.key);
          }
          break;
        case "item":
          rows.push(node);
          return;
      }
      for (let child of node.childNodes)
        visit(child);
    };
    for (let node1 of nodes)
      visit(node1);
    let headerRows = $788781baa30117fa$var$buildHeaderRows(columnKeyMap, columns);
    headerRows.forEach(
      (row, i13) => rows.splice(i13, 0, row)
    );
    super({
      columnCount: columns.length,
      items: rows,
      visitNode: (node) => {
        node.column = columns[node.index];
        return node;
      }
    });
    this.columns = columns;
    this.rowHeaderColumnKeys = rowHeaderColumnKeys;
    this.body = body;
    this.headerRows = headerRows;
    if (this.rowHeaderColumnKeys.size === 0)
      this.rowHeaderColumnKeys.add(this.columns[(opts === null || opts === void 0 ? void 0 : opts.showSelectionCheckboxes) ? 1 : 0].key);
  }
};
var $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION = {
  ascending: "descending",
  descending: "ascending"
};
function $4a0dd036d492cee4$export$907bcc6c48325fd6(props) {
  let [isKeyboardNavigationDisabled, setKeyboardNavigationDisabled] = h(false);
  let { selectionMode = "none" } = props;
  let context = F(
    () => ({
      showSelectionCheckboxes: props.showSelectionCheckboxes && selectionMode !== "none",
      selectionMode,
      columns: []
    }),
    [
      props.children,
      props.showSelectionCheckboxes,
      selectionMode
    ]
  );
  let collection = $7613b1592d41b092$export$6cd28814d92fa9c9(
    props,
    (nodes, prev) => new $788781baa30117fa$export$596e1b2e2cf93690(nodes, prev, context),
    context
  );
  let { disabledKeys, selectionManager } = $62967d126f3aa823$export$4007ac09ff9c68ed({
    ...props,
    collection
  });
  return {
    collection,
    disabledKeys,
    selectionManager,
    showSelectionCheckboxes: props.showSelectionCheckboxes || false,
    sortDescriptor: props.sortDescriptor,
    isKeyboardNavigationDisabled: collection.size === 0 || isKeyboardNavigationDisabled,
    setKeyboardNavigationDisabled,
    sort(columnKey, direction) {
      var ref;
      props.onSortChange({
        column: columnKey,
        direction: direction !== null && direction !== void 0 ? direction : ((ref = props.sortDescriptor) === null || ref === void 0 ? void 0 : ref.column) === columnKey ? $4a0dd036d492cee4$var$OPPOSITE_SORT_DIRECTION[props.sortDescriptor.direction] : "ascending"
      });
    }
  };
}
function $312ae3b56a94a86e$var$TableHeader(props) {
  return null;
}
$312ae3b56a94a86e$var$TableHeader.getCollectionNode = function* getCollectionNode9(props) {
  let { children, columns } = props;
  if (typeof children === "function") {
    if (!columns)
      throw new Error("props.children was a function but props.columns is missing");
    for (let column of columns)
      yield {
        type: "column",
        value: column,
        renderer: children
      };
  } else {
    let columns2 = [];
    Cn.Children.forEach(children, (column) => {
      columns2.push({
        type: "column",
        element: column
      });
    });
    yield* columns2;
  }
};
var $312ae3b56a94a86e$export$f850895b287ef28e = $312ae3b56a94a86e$var$TableHeader;
function $4ae5314bf50db1a3$var$TableBody(props) {
  return null;
}
$4ae5314bf50db1a3$var$TableBody.getCollectionNode = function* getCollectionNode10(props) {
  let { children, items: items1 } = props;
  yield {
    type: "body",
    hasChildNodes: true,
    props,
    *childNodes() {
      if (typeof children === "function") {
        if (!items1)
          throw new Error("props.children was a function but props.items is missing");
        for (let item of items1)
          yield {
            type: "item",
            value: item,
            renderer: children
          };
      } else {
        let items = [];
        Cn.Children.forEach(children, (item) => {
          items.push({
            type: "item",
            element: item
          });
        });
        yield* items;
      }
    }
  };
};
var $4ae5314bf50db1a3$export$76ccd210b9029917 = $4ae5314bf50db1a3$var$TableBody;
function $1cd244557c2f97d5$var$Column(props) {
  return null;
}
$1cd244557c2f97d5$var$Column.getCollectionNode = function* getCollectionNode11(props, context1) {
  let { title, children, childColumns: childColumns1 } = props;
  let rendered = title || children;
  let textValue = props.textValue || (typeof rendered === "string" ? rendered : "") || props["aria-label"];
  let fullNodes = yield {
    type: "column",
    hasChildNodes: !!childColumns1 || title && Cn.Children.count(children) > 0,
    rendered,
    textValue,
    props,
    *childNodes() {
      if (childColumns1)
        for (let child1 of childColumns1)
          yield {
            type: "column",
            value: child1
          };
      else if (title) {
        let childColumns = [];
        Cn.Children.forEach(children, (child) => {
          childColumns.push({
            type: "column",
            element: child
          });
        });
        yield* childColumns;
      }
    },
    shouldInvalidate(newContext) {
      updateContext(newContext);
      return false;
    }
  };
  let updateContext = (context) => {
    for (let node of fullNodes)
      if (!node.hasChildNodes)
        context.columns.push(node);
  };
  updateContext(context1);
};
var $1cd244557c2f97d5$export$816b5d811295e6bc = $1cd244557c2f97d5$var$Column;
function $70d70eb16ea48428$var$Row(props) {
  return null;
}
$70d70eb16ea48428$var$Row.getCollectionNode = function* getCollectionNode12(props, context) {
  let { children, textValue } = props;
  yield {
    type: "item",
    props,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: true,
    *childNodes() {
      if (context.showSelectionCheckboxes && context.selectionMode !== "none")
        yield {
          type: "cell",
          key: "header",
          props: {
            isSelectionCell: true
          }
        };
      if (typeof children === "function")
        for (let column of context.columns)
          yield {
            type: "cell",
            element: children(column.key),
            key: column.key
            // this is combined with the row key by CollectionBuilder
          };
      else {
        let cells = [];
        Cn.Children.forEach(children, (cell) => {
          cells.push({
            type: "cell",
            element: cell
          });
        });
        if (cells.length !== context.columns.length)
          throw new Error(`Cell count must match column count. Found ${cells.length} cells and ${context.columns.length} columns.`);
        yield* cells;
      }
    },
    shouldInvalidate(newContext) {
      return newContext.columns.length !== context.columns.length || newContext.columns.some(
        (c15, i13) => c15.key !== context.columns[i13].key
      ) || newContext.showSelectionCheckboxes !== context.showSelectionCheckboxes || newContext.selectionMode !== context.selectionMode;
    }
  };
};
var $70d70eb16ea48428$export$b59bdbef9ce70de2 = $70d70eb16ea48428$var$Row;
function $941d1d9a6a28982a$var$Cell(props) {
  return null;
}
$941d1d9a6a28982a$var$Cell.getCollectionNode = function* getCollectionNode13(props) {
  let { children } = props;
  let textValue = props.textValue || (typeof children === "string" ? children : "") || props["aria-label"] || "";
  yield {
    type: "cell",
    props,
    rendered: children,
    textValue,
    "aria-label": props["aria-label"],
    hasChildNodes: false
  };
};
var $941d1d9a6a28982a$export$f6f0c3fe4ec306ea = $941d1d9a6a28982a$var$Cell;

// node_modules/@nextui-org/react/esm/table/table-row-group.js
init_compat_module();

// node_modules/@nextui-org/react/esm/table/table.styles.js
var StyledTableHeaderRow = styled("tr", { ov: "visible" });
var StyledTableColumnHeader = styled("th", { height: "$14", cursor: "default", bg: "$accents0", color: "$accents7", fontSize: "$xs", textAlign: "left", position: "relative", "@motion": { transition: "none" }, "&:first-child": { pl: "$8", btlr: "$md", bblr: "$md" }, "&:last-child": { pr: "$8", btrr: "$md", bbrr: "$md" }, variants: { align: { start: { textAlign: "left" }, center: { textAlign: "center" }, end: { textAlign: "right" } }, animated: { false: { transition: "none" } }, allowsSorting: { true: { transition: "background 0.25s ease 0s, color 0.25s ease 0s", cursor: "pointer", "@motion": { transition: "none" }, "&:hover": { color: "$accents8", bg: "$accents1" } } } }, defaultVariants: { align: "left", animated: true }, compoundVariants: [{ animated: false, allowsSorting: true, css: { transition: "none" } }] }, cssFocusVisible);
var StyledTableHeaderCell = styled(StyledTableColumnHeader, cssFocusVisible);
var StyledTableFooter = styled("tfoot", { height: "$14", variants: { align: { start: { textAlign: "left" }, center: { textAlign: "center" }, end: { textAlign: "right" } } }, defaultVariants: { align: "right" } });
var StyledBaseTableCell = styled("td", {});
var StyledTableCell = styled(StyledBaseTableCell, { position: "relative", userSelect: "none", cursor: "default", py: "$5", pr: "$5", zIndex: "$2", ov: "hidden", whiteSpace: "nowrap", textOverflow: "ellipsis", "&:first-child": { pl: "$8" }, "&:last-child": { pr: "$8" }, "&:before": { zIndex: "-$1", transition: "background 0.25s ease 0s, opacity 0.25s ease 0s", content: '""', position: "absolute", size: "100%", top: 0, left: 0, opacity: 0, transform: "translateZ(0)", backfaceVisibility: "hidden" }, variants: { align: { start: { textAlign: "left" }, center: { textAlign: "center" }, end: { textAlign: "right" } }, isStatic: { true: { cursor: "text", userSelect: "text" } } } }, cssFocusVisible);
var StyledTableRow = styled("tr", { ov: "visible", color: "$text", variants: { isDisabled: { true: { color: "$accents3", pointerEvents: "none", cursor: "not-allowed" } }, isSelected: { true: { color: "$$tableRowTextColor", [`& ${StyledTableCell}:before`]: { opacity: 1, bg: "$$tableRowColor" } } } } }, cssFocusVisible);
var StyledTableRowGroup = styled("thead", { variants: { isFixed: { true: { display: "table", width: "100%", tableLayout: "fixed" } }, isInfinityScroll: { true: { display: "block", height: "100%", overflow: "auto", pb: "$10", [`& ${StyledTableRow}`]: { display: "table", width: "100%", tableLayout: "fixed" } } } }, defaultVariants: { isInfinityScroll: false } });
var StyledTableLoadingRow = styled("tr", { width: "100%", display: "flex", alignItems: "center", justifyContent: "center", height: "calc(100% - $space$14)", variants: { isAtEnd: { true: { height: "$space$18" } }, isAbsolute: { true: { position: "absolute", left: "0", top: "$10" } } } });
var StyledTable = styled("table", { borderCollapse: "separate", borderSpacing: 0, width: "100%", p: "$md $sm", "@motion": { [`& ${StyledTableCell}:before`]: { transition: "none" } }, variants: { animated: { false: { [`& ${StyledTableCell}:before`]: { transition: "none" } } }, color: { primary: { $$tableRowColor: "$colors$primaryLight", $$tableRowTextColor: "$colors$primaryLightContrast" }, secondary: { $$tableRowColor: "$colors$secondaryLight", $$tableRowTextColor: "$colors$secondaryLightContrast" }, success: { $$tableRowColor: "$colors$successLight", $$tableRowTextColor: "$colors$successLightContrast" }, warning: { $$tableRowColor: "$colors$warningLight", $$tableRowTextColor: "$colors$warningLightContrast" }, error: { $$tableRowColor: "$colors$errorLight", $$tableRowTextColor: "$colors$errorLightContrast" } }, striped: { true: { [`& ${StyledTableRow}[aria-selected=false]:nth-child(even)`]: { [`& ${StyledTableCell}`]: { bg: "$accents0" } }, [`& ${StyledTableRow}:nth-child(even)`]: { [`& ${StyledTableCell}:first-child`]: { br: "$lg 0 0 $lg" }, [`& ${StyledTableCell}:last-child`]: { br: "0 $lg $lg 0" } } } }, sticked: { true: { p: 0, [`& ${StyledTableColumnHeader}:first-child`]: { br: "$lg 0 0 0" }, [`& ${StyledTableColumnHeader}:last-child`]: { br: "0 $lg 0 0" } } }, lineWeight: { light: { $$tableLineWeight: "$borderWeights$light" }, normal: { $$tableLineWeight: "$borderWeights$normal" }, bold: { $$tableLineWeight: "$borderWeights$bold" }, extrabold: { $$tableLineWeight: "$borderWeights$extrabold" }, black: { $$tableLineWeight: "$borderWeights$black" } }, headerLined: { true: { [`& ${StyledTableColumnHeader}`]: { position: "relative", bg: "transparent", "&:after": { content: "", position: "absolute", left: 0, right: 0, bottom: 0, height: "calc($$tableLineWeight * 1.5)", bg: "$accents1" }, "&:first-child": { ml: "$12", br: "0", "&:after": { left: "$space$md" } }, "&:last-child": { br: "0", "&:after": { right: "$space$md" } } } } }, lined: { true: { [`& ${StyledTableRow}:not(:last-child)`]: { position: "relative", [`& ${StyledTableCell}:after`]: { content: "", position: "absolute", bottom: 0, left: 0, right: 0, height: "$$tableLineWeight", bg: "$border" }, [`& ${StyledTableCell}:first-child`]: { "&:after": { left: "$space$md" } }, [`& ${StyledTableCell}:last-child`]: { "&:after": { right: "$space$md" } } }, [`& ${StyledTableRow}[aria-selected=true]:not(last-child)`]: { [`& ${StyledTableCell}:after`]: { bg: "$$tableRowTextColor", opacity: 0.3 } } } }, fixed: { true: { tableLayout: "fixed" } }, hoverable: { true: { [`& ${StyledTableCell}:first-child`]: { br: "$md 0 0 $md" }, [`& ${StyledTableCell}:last-child`]: { br: "0 $md $md 0" }, [`& ${StyledTableRow}`]: { cursor: "pointer" }, [`& ${StyledTableRow}[aria-selected=false]`]: { "&:hover": { [`& ${StyledTableCell}:before`]: { opacity: 1, bg: "$accents0" } } }, [`& ${StyledTableRow}[aria-selected=true]`]: { "&:hover": { [`& ${StyledTableCell}:before`]: { opacity: 0.8 } } } } }, isMultiple: { true: {} }, hasPagination: { true: {} }, shadow: { true: {} }, compact: { true: { [`& ${StyledTableCell}`]: { py: "$1" }, [`& ${StyledTableColumnHeader}`]: { height: "$12", "&:first-child": { br: "$sm 0 0 $sm" }, "&:last-child": { br: "0 $sm $sm 0" } } } } }, compoundVariants: [{ isMultiple: true, hoverable: true, css: { [`& ${StyledTableRow}:not(:first-child):not(:last-child)`]: { [`& ${StyledTableCell}:first-child`]: { br: 0 }, [`& ${StyledTableCell}:last-child`]: { br: 0 } }, [`& ${StyledTableRow}:first-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "$md 0 0 0" }, [`& ${StyledTableCell}:last-child`]: { br: "0 $md 0 0" } }, [`& ${StyledTableRow}:last-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "0 0 0 $md" }, [`& ${StyledTableCell}:last-child`]: { br: "0 0 $md 0" } } } }, { isMultiple: true, hoverable: true, sticked: true, css: { [`& ${StyledTableRow}:first-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "0" }, [`& ${StyledTableCell}:last-child`]: { br: "0" } } } }, { compact: true, shadow: true, css: { p: "$md $sm" } }, { compact: true, sticked: true, css: { p: 0 } }, { sticked: true, isMultiple: false, hoverable: true, hasPagination: false, css: { [`& ${StyledTableRow}:not(:last-child)`]: { [`& ${StyledTableCell}`]: { br: "0" } }, [`& ${StyledTableRow}:last-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "0 0 0 $md" }, [`& ${StyledTableCell}:last-child`]: { br: "0 0 $md 0" } } } }, { sticked: true, isMultiple: false, hoverable: true, hasPagination: true, css: { [`& ${StyledTableRow}`]: { [`& ${StyledTableCell}`]: { br: "0" } } } }, { sticked: true, hasPagination: true, css: { pb: "$5" } }, { sticked: true, hasPagination: true, isMultiple: true, hoverable: true, css: { [`& ${StyledTableRow}:last-child`]: { [`& ${StyledTableCell}:first-child`]: { br: "0" }, [`& ${StyledTableCell}:last-child`]: { br: "0" } } } }], defaultVariants: { sticked: false, color: "primary", lineWeight: "light" } });
var StyledTableContainer = styled("div", { display: "flex", flexDirection: "column", br: "$xl", overflowX: "auto", overflowY: "hidden", variants: { shadow: { true: { bs: "$md" } }, bordered: { true: { borderStyle: "solid", borderColor: "$border" }, false: { bw: 0 } }, borderWeight: { light: { bw: "$light" }, normal: { bw: "$normal" }, bold: { bw: "$bold" }, extrabold: { bw: "$extrabold" }, black: { bw: "$black" } } }, defaultVariants: { shadow: true, borderWeight: "normal" } });

// node_modules/@nextui-org/react/esm/table/table-row-group.js
var table_row_group_default = with_defaults_default(({ children: r14, ...o14 }) => {
  const { rowGroupProps: m13 } = $0047e6c294ea075f$export$6fb1613bd7b28198();
  return o(StyledTableRowGroup, { className: clsx_default("nextui-table-row-group", o14.className), ...o14, ...m13, children: r14 });
}, { as: "thead" });

// node_modules/@nextui-org/react/esm/table/table-column-header.js
init_compat_module();

// node_modules/@nextui-org/react/esm/table/table-sort-icon.js
init_compat_module();
var r11 = styled("svg", { opacity: 0, transition: "$default", path: { fill: "$$tableRowTextColor" }, variants: { visible: { true: { opacity: 1 } }, ascending: { true: { transform: "rotate(180deg)" } } } });
var ICON_SIZE = 22;
var table_sort_icon_default = (t9) => o(r11, { "aria-hidden": "true", className: "nextui-table-sort-icon", fill: "none", focusable: "false", height: 22, role: "presentation", viewBox: "0 0 24 24", width: 22, xmlns: "http://www.w3.org/2000/svg", ...t9, children: o("path", { d: "M12 2C6.49 2 2 6.49 2 12C2 17.51 6.49 22 12 22C17.51 22 22 17.51 22 12C22 6.49 17.51 2 12 2ZM16.06 11.27L12.53 14.8C12.38 14.95 12.19 15.02 12 15.02C11.81 15.02 11.62 14.95 11.47 14.8L7.94 11.27C7.65 10.98 7.65 10.5 7.94 10.21C8.23 9.92 8.71 9.92 9 10.21L12 13.21L15 10.21C15.29 9.92 15.77 9.92 16.06 10.21C16.35 10.5 16.35 10.97 16.06 11.27Z" }) });

// node_modules/@nextui-org/react/esm/table/table-column-header.js
var p4 = Cn.forwardRef(({ column: r14, state: p7, ...f5 }, b6) => {
  var x8, h4;
  const v4 = _(null);
  A(b6, () => null == v4 ? void 0 : v4.current);
  const { columnHeaderProps: g4 } = $f329116d8ad0aba0$export$9514819a8c81e960({ node: r14 }, p7, v4), { isFocusVisible: j2, focusProps: y3 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), { hideHeader: N5, ...H2 } = r14.props;
  return o(StyledTableColumnHeader, { ref: v4, className: clsx_default("nextui-table-column-header", f5.className), colSpan: r14.colspan, isFocusVisible: j2, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(f5, g4, y3, H2), children: [N5 ? o($5c3e21d68f1c4674$export$439d29a4e110a164, { children: r14.rendered }) : r14.rendered, H2.allowsSorting && o(table_sort_icon_default, { ascending: "ascending" === (null == (x8 = p7.sortDescriptor) ? void 0 : x8.direction), css: { position: "absolute", m: "0 $2", bottom: `calc(50% - ${ICON_SIZE / 2}px)` }, visible: (null == (h4 = p7.sortDescriptor) ? void 0 : h4.column) === r14.key })] });
});
p4.displayName = "NextUI.TableColumnHeader", p4.toString = () => ".nextui-table-column-header";
var table_column_header_default = p4;

// node_modules/@nextui-org/react/esm/table/table-header-row.js
init_compat_module();
var i11 = Cn.forwardRef(({ children: e15, item: i13, state: m13, ...n15 }, c15) => {
  const d11 = _(null);
  A(c15, () => null == d11 ? void 0 : d11.current);
  const { rowProps: f5 } = $f917ee10f4c32dab$export$1b95a7d2d517b841({ node: i13 }, m13, d11);
  return o(StyledTableHeaderRow, { ref: d11, className: clsx_default("nextui-table-header-row", n15.className), ...n15, ...f5, children: e15 });
});
i11.displayName = "NextUI.TableHeaderRow", i11.toString = () => ".nextui-table-header-row";
var table_header_row_default = i11;

// node_modules/@nextui-org/react/esm/table/table-select-all-checkbox.js
init_compat_module();
var b4 = Cn.forwardRef(({ column: e15, state: b6, color: d11, animated: f5, ...p7 }, x8) => {
  const h4 = _(null);
  A(x8, () => null == h4 ? void 0 : h4.current);
  const k6 = "single" === b6.selectionManager.selectionMode, { columnHeaderProps: y3 } = $f329116d8ad0aba0$export$9514819a8c81e960({ node: e15 }, b6, h4), { checkboxProps: N5 } = $2a795c53a101c542$export$1003db6a7e384b99(b6), { isFocusVisible: $2, focusProps: g4 } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  return o(StyledTableHeaderCell, { ref: h4, className: clsx_default("nextui-table-select-all-checkbox", p7.className), isFocusVisible: $2, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(y3, g4, p7), children: k6 ? o($5c3e21d68f1c4674$export$439d29a4e110a164, { children: N5["aria-label"] }) : o(checkbox_default2, { ...N5, color: d11, css: { display: "inherit", $$checkboxBorderColor: "$colors$accents3" }, disableAnimation: !f5 }) });
});
b4.displayName = "NextUI.TableSelectAllCheckbox", b4.toString = () => ".nextui-table-select-all-checkbox";
var table_select_all_checkbox_default = b4;

// node_modules/@nextui-org/react/esm/table/table-pagination.js
init_compat_module();

// node_modules/@nextui-org/react/esm/table/table-context.js
init_compat_module();
var o11 = { footerAlign: "end", rowsPerPage: 0, currentPage: 1, animated: true };
var TableContext = Cn.createContext(o11);
var useTableContext = () => Cn.useContext(TableContext);
var table_context_default = { Provider: ({ children: r14, defaultValues: n15 }) => {
  const [a13, l13] = Cn.useState((null == n15 ? void 0 : n15.footerAlign) || o11.footerAlign), [s9, i13] = Cn.useState(void 0 === (null == n15 ? void 0 : n15.animated) ? o11.animated : null == n15 ? void 0 : n15.animated), [u9, d11] = Cn.useState(null == n15 ? void 0 : n15.collection), [c15, P3] = Cn.useState(void 0 === (null == n15 ? void 0 : n15.rowsPerPage) ? o11.rowsPerPage : null == n15 ? void 0 : n15.rowsPerPage), [g4, m13] = Cn.useState(o11.currentPage), [v4, x8] = Cn.useState(null == n15 ? void 0 : n15.color), C4 = Cn.useMemo(() => ({ animated: s9, footerAlign: a13, collection: u9, rowsPerPage: c15, currentPage: g4, color: v4, setFooterAlign: l13, setCollection: d11, setAnimated: i13, setRowsPerPage: P3, setColor: x8, setCurrentPage: m13 }), [s9, v4, u9, a13, c15, g4]);
  return o(TableContext.Provider, { value: C4, children: r14 });
}, Consumer: TableContext.Consumer };

// node_modules/@nextui-org/react/esm/table/table-pagination.js
var r12 = ({ align: r14, rowsPerPage: i13, onPageChange: s9, ...c15 }) => {
  const { color: u9, animated: m13, collection: g4, footerAlign: f5, rowsPerPage: d11, setFooterAlign: p7, setRowsPerPage: x8, setCurrentPage: P3 } = useTableContext();
  Cn.useEffect(() => {
    r14 && r14 !== f5 && (null == p7 || p7(r14));
  }, [r14, f5]), Cn.useEffect(() => {
    i13 && i13 !== d11 && (null == x8 || x8(i13));
  }, [d11, i13]);
  const b6 = F(() => {
    var e15;
    const t9 = null != g4 && g4.body ? [...null == g4 || null == (e15 = g4.body) ? void 0 : e15.childNodes].length : 0;
    return d11 > 0 ? Math.ceil(t9 / d11) : 1;
  }, [g4, d11]);
  return o(pagination_default2, { animated: m13, className: clsx_default("nextui-table-pagination", c15.className), color: c15.color || u9, total: b6, onChange: (e15) => {
    null == P3 || P3(e15), null == s9 || s9(e15);
  }, ...c15 });
};
r12.displayName = "NextUI.TablePagination", r12.toString = () => ".nextui-table-pagination";
var table_pagination_default = r12;

// node_modules/@nextui-org/react/esm/table/table-footer.js
init_compat_module();
var n12 = Cn.forwardRef(({ children: t9, ...n15 }, s9) => {
  const m13 = _(null);
  A(s9, () => null == m13 ? void 0 : m13.current);
  const { footerAlign: c15 } = useTableContext();
  return o(StyledTableFooter, { ref: m13, align: n15.align || c15, className: clsx_default("nextui-table-footer", n15.className), role: "rowgroup", ...n15, children: t9 });
});
n12.displayName = "NextUI.TableFooter", n12.toString = () => ".nextui-table-footer";
var table_footer_default = n12;

// node_modules/@nextui-org/react/esm/table/table-body.js
init_compat_module();

// node_modules/@nextui-org/react/esm/table/table-row.js
init_compat_module();
var m9 = Cn.forwardRef(({ children: e15, item: m13, state: d11, ...n15 }, u9) => {
  const f5 = _(null);
  A(u9, () => null == f5 ? void 0 : f5.current);
  const { rowProps: p7 } = $b2db214c022798eb$export$7f2f6ae19e707aa5({ node: m13 }, d11, f5), { isFocusVisible: b6, focusProps: x8 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), w3 = d11.disabledKeys.has(m13.key);
  return o(StyledTableRow, { ref: f5, className: clsx_default("nextui-table-row", { "nextui-table-row--selected": p7["aria-selected"], "nextui-table-row--disabled": w3 }, n15.className), css: m13.props.css, isDisabled: w3, isFocusVisible: b6, isSelected: !!p7["aria-selected"], ...$3ef42575df84b30b$export$9d1611c77c2fe9282(p7, x8, n15), children: e15 });
});
m9.displayName = "NextUI.TableRow", m9.toString = () => ".nextui-table-row";
var table_row_default = m9;

// node_modules/@nextui-org/react/esm/table/table-cell.js
init_compat_module();
var c10 = Cn.forwardRef(({ cell: t9, state: c15, isStatic: m13, ...p7 }, n15) => {
  const f5 = useDOMRef(n15), { gridCellProps: u9 } = $7713593715703b24$export$49571c903d73624c({ node: t9 }, c15, f5), { isFocusVisible: d11, focusProps: b6 } = $f7dceffc5ad7768b$export$4e328f61c538687f(), x8 = m13 ? { ...u9, onMouseDown: (t10) => t10.stopPropagation(), onPointerDown: (t10) => t10.stopPropagation() } : u9;
  return o(StyledTableCell, { ref: f5, className: clsx_default("nextui-table-cell", p7.className), css: t9.props.css, isFocusVisible: d11, isStatic: m13, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(x8, b6, p7), children: t9.rendered });
});
c10.displayName = "NextUI.TableCell", c10.toString = () => ".nextui-table-cell";
var table_cell_default = c10;

// node_modules/@nextui-org/react/esm/table/table-checkbox-cell.js
init_compat_module();
var p5 = Cn.forwardRef(({ cell: e15, state: p7, color: u9, animated: f5, ...b6 }, x8) => {
  const d11 = _(null);
  A(x8, () => null == d11 ? void 0 : d11.current);
  const { gridCellProps: h4 } = $7713593715703b24$export$49571c903d73624c({ node: e15 }, p7, d11), { checkboxProps: k6 } = $2a795c53a101c542$export$16ea7f650bd7c1bb({ key: (null == e15 ? void 0 : e15.parentKey) || e15.key }, p7), { isFocusVisible: y3, focusProps: N5 } = $f7dceffc5ad7768b$export$4e328f61c538687f();
  return o(StyledTableCell, { ref: d11, className: clsx_default("nextui-table-checkbox-cell", b6.className), isFocusVisible: y3, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(h4, N5, b6), children: o(checkbox_default2, { ...k6, color: u9, css: { display: "inherit" }, disableAnimation: !f5 }) });
});
p5.displayName = "NextUI.TableCheckboxCell", p5.toString = () => ".nextui-table-checkbox-cell";
var table_checkbox_cell_default = p5;

// node_modules/@nextui-org/react/esm/table/utils.js
init_compat_module();
var hasPaginationChild = (n15, i13) => {
  const r14 = Cn.Children.toArray(n15).find((n16) => Cn.isValidElement(n16) && n16.type === i13);
  var t9;
  return Cn.isValidElement(r14) ? { hasPagination: true, rowsPerPage: (null == r14 || null == (t9 = r14.props) ? void 0 : t9.rowsPerPage) || 0 } : { hasPagination: false, rowsPerPage: 0 };
};
var isInfinityScroll = (o14) => {
  var n15;
  const i13 = null == (n15 = o14.body) ? void 0 : n15.props;
  return void 0 !== (null == i13 ? void 0 : i13.loadingState) && "function" == typeof (null == i13 ? void 0 : i13.onLoadMore);
};

// node_modules/@nextui-org/react/esm/table/table-body.js
var b5 = ({ children: b6, collection: y3, state: f5, animated: g4, color: x8, hasPagination: v4, hideLoading: S2, isStatic: N5, ...w3 }) => {
  var C4, j2, k6, E2, H2, P3;
  const { currentPage: B2, rowsPerPage: L2, collection: M2, setCollection: A3 } = useTableContext(), I2 = F(() => isInfinityScroll(y3), [y3.body.props]);
  Cn.useEffect(() => {
    y3 !== M2 && (null == A3 || A3(y3));
  }, [y3, M2]);
  const T3 = "loading" === (null == (C4 = y3.body) || null == (j2 = C4.props) ? void 0 : j2.loadingState) || "loadingMore" === (null == (k6 = y3.body) || null == (E2 = k6.props) ? void 0 : E2.loadingState), U2 = F(() => {
    const l13 = [...y3.body.childNodes];
    return v4 ? null == l13 ? void 0 : l13.slice((B2 - 1) * L2, B2 * L2) : l13;
  }, [v4, y3, B2, L2]), $2 = F(() => {
    const l13 = U2.length;
    return l13 >= L2 && !I2 ? null : o("tr", { "aria-hidden": "true", className: "nextui-table-hidden-row", role: "row", children: o(StyledBaseTableCell, { "aria-hidden": "true", colSpan: y3.columnCount, css: { height: "var(--nextui--tableBodyEmptySpaceHeight)" }, style: $3ef42575df84b30b$export$9d1611c77c2fe9282({ "--nextui--tableBodyEmptySpaceHeight": I2 ? "var(--nextui-space-10)" : `calc(${L2 - l13} * var(--nextui-space-15))` }, (null == w3 ? void 0 : w3.style) || {}) }) });
  }, [y3.columnCount, U2, L2, I2]);
  return o(table_row_group_default, { as: "tbody", className: clsx_default("nextui-table-body", w3.className), css: { position: "relative", ...w3.css, ...null == (H2 = y3.body) || null == (P3 = H2.props) ? void 0 : P3.css }, isInfinityScroll: I2, onScroll: (l13) => {
    if (!I2)
      return;
    const e15 = l13.target;
    var o14, t9;
    e15.scrollHeight - (e15.scrollTop + 40) <= e15.clientHeight && !T3 && (null == (o14 = y3.body) || null == (t9 = o14.props) || null == t9.onLoadMore || t9.onLoadMore());
  }, ...w3, children: [b6, null == U2 ? void 0 : U2.map((l13) => l13.hasChildNodes ? o(table_row_default, { "aria-hidden": "false", item: l13, state: f5, children: [...l13.childNodes].map((l14) => {
    var e15;
    return null != l14 && null != (e15 = l14.props) && e15.isSelectionCell ? o(table_checkbox_cell_default, { animated: g4, cell: l14, color: x8, state: f5 }, null == l14 ? void 0 : l14.key) : o(table_cell_default, { cell: l14, isStatic: N5, state: f5 }, null == l14 ? void 0 : l14.key);
  }) }, null == l13 ? void 0 : l13.key) : null), !S2 && T3 && o(StyledTableLoadingRow, { "aria-hidden": "true", className: "nextui-table-hidden-row", isAbsolute: !I2, isAtEnd: U2.length > 0, role: "row", children: o(StyledBaseTableCell, { "aria-hidden": "true", colSpan: y3.columnCount, children: o(loading_default2, { color: x8 }) }) }), $2] });
};
b5.displayName = "NextUI.TableBody", b5.toString = () => ".nextui-table-body";
var table_body_default = b5;

// node_modules/@nextui-org/react/esm/table/table.js
var N4 = Cn.forwardRef((n15, N5) => {
  const { css: S2, selectionMode: C4, selectionBehavior: j2, hideLoading: M2, children: L2, shadow: B2, color: I2, animated: R3, borderWeight: W2, bordered: F3, hoverable: T3, sticked: U2, containerCss: V2, className: q3, ...z3 } = n15, [A3, D3] = pickSingleChild(L2, table_pagination_default), { hasPagination: E2, rowsPerPage: G3 } = hasPaginationChild(L2, table_pagination_default), H2 = $4a0dd036d492cee4$export$907bcc6c48325fd6({ ...n15, children: A3, showSelectionCheckboxes: void 0 !== n15.showSelectionCheckboxes ? n15.showSelectionCheckboxes : "multiple" === C4 && "replace" !== j2 }), J2 = useDOMRef(N5), { collection: K } = H2, { gridProps: O3 } = $6e31608fbba75bab$export$25bceaac3c7e4dc7(n15, H2, J2), Q = Cn.useMemo(() => ({ collection: K, color: I2, animated: R3, rowsPerPage: G3 }), [K, R3, I2, G3]), X = F(() => !("none" === C4 && !T3), [C4, T3]);
  return o(table_context_default.Provider, { defaultValues: Q, children: o(StyledTableContainer, { borderWeight: W2, bordered: F3, className: "nextui-table-container", css: V2, shadow: B2, children: o(StyledTable, { ref: J2, animated: R3, className: clsx_default("nextui-table", q3), color: I2, css: S2, hasPagination: E2, hoverable: X, isMultiple: "multiple" === C4, shadow: B2, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(O3, z3), children: [o(table_row_group_default, { as: "thead", isFixed: isInfinityScroll(K), children: [K.headerRows.map((e15) => o(table_header_row_default, { item: e15, state: H2, children: [...e15.childNodes].map((e16) => {
    var o14;
    return null != e16 && null != (o14 = e16.props) && o14.isSelectionCell ? o(table_select_all_checkbox_default, { animated: R3, color: I2, column: e16, state: H2 }, null == e16 ? void 0 : e16.key) : o(table_column_header_default, { animated: R3, column: e16, state: H2 }, null == e16 ? void 0 : e16.key);
  }) }, null == e15 ? void 0 : e15.key)), !U2 && o(spacer_default2, { as: "tr", className: "nextui-table-hidden-row", y: 0.4 })] }), o(table_body_default, { animated: R3, collection: K, color: I2, hasPagination: E2, hideLoading: M2, isStatic: !X, state: H2 }), E2 && o(table_footer_default, { children: [o(spacer_default2, { as: "tr", className: "nextui-table-hidden-row", y: 0.6 }), o("tr", { role: "row", children: o("th", { colSpan: K.columnCount, role: "columnheader", tabIndex: -1, children: D3 }) })] })] }) }) });
});
N4.displayName = "NextUI.Table", N4.toString = () => ".nextui-table";
var table_default = with_defaults_default(N4, { animated: true, hideLoading: false, selectionMode: "none", selectionBehavior: "toggle" });

// node_modules/@nextui-org/react/esm/table/base/table-body.js
var a10 = $4ae5314bf50db1a3$export$76ccd210b9029917;
var table_body_default2 = a10;

// node_modules/@nextui-org/react/esm/table/base/table-cell.js
var e12 = $941d1d9a6a28982a$export$f6f0c3fe4ec306ea;
var table_cell_default2 = e12;

// node_modules/@nextui-org/react/esm/table/base/table-column.js
var e13 = $1cd244557c2f97d5$export$816b5d811295e6bc;
var table_column_default = e13;

// node_modules/@nextui-org/react/esm/table/base/table-header.js
var t8 = $312ae3b56a94a86e$export$f850895b287ef28e;
var table_header_default = t8;

// node_modules/@nextui-org/react/esm/table/base/table-row.js
var a11 = $70d70eb16ea48428$export$b59bdbef9ce70de2;
var table_row_default2 = a11;

// node_modules/@nextui-org/react/esm/table/index.js
table_default.Cell = table_cell_default2, table_default.Column = table_column_default, table_default.Header = table_header_default, table_default.Row = table_row_default2, table_default.Body = table_body_default2, table_default.Pagination = table_pagination_default;
var table_default2 = table_default;

// node_modules/@nextui-org/react/esm/popover/popover.js
init_compat_module();

// node_modules/@nextui-org/react/esm/popover/use-popover.js
init_compat_module();

// node_modules/@react-stately/overlays/dist/module.js
function $fc909762b330b746$export$61c6a8c84e605fb6(props) {
  let [isOpen, setOpen] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.isOpen, props.defaultOpen || false, props.onOpenChange);
  return {
    isOpen,
    setOpen,
    open() {
      setOpen(true);
    },
    close() {
      setOpen(false);
    },
    toggle() {
      setOpen(!isOpen);
    }
  };
}

// node_modules/@nextui-org/react/esm/utils/refs.js
function assignRef(e15, n15) {
  if (null != e15)
    if (isFunction(e15))
      e15(n15);
    else
      try {
        e15.current = n15;
      } catch (r14) {
        throw new Error(`Cannot assign value '${n15}' to ref '${e15}'`);
      }
}
function mergeRefs(...r14) {
  return (e15) => {
    r14.forEach((r15) => assignRef(r15, e15));
  };
}

// node_modules/@nextui-org/react/esm/popover/utils.js
var getAriaPlacement = (t9) => t9 ? t9.replace("-", " ") : "bottom";
var getTransformOrigin = (t9) => {
  if (!t9)
    return "bottom";
  switch (t9) {
    case "bottom":
    default:
      return "top center";
    case "top":
      return "bottom center";
    case "left":
      return "right center";
    case "right":
      return "left center";
    case "bottom-left":
      return "top left";
    case "bottom-right":
      return "top right";
    case "top-left":
      return "bottom left";
    case "top-right":
      return "bottom right";
    case "left-top":
      return "right top";
    case "left-bottom":
      return "right bottom";
    case "right-top":
      return "left top";
    case "right-bottom":
      return "left bottom";
  }
};

// node_modules/@nextui-org/react/esm/popover/use-popover.js
function usePopover(u9 = {}) {
  const { ref: m13, triggerRef: c15, scrollRef: f5, isOpen: g4, defaultOpen: O3, onOpenChange: y3, isBordered: b6, borderWeight: h4, disableShadow: P3, shouldFlip: v4 = true, offset: C4 = 12, placement: R3 = "bottom", onClose: D3, triggerType: x8 = "dialog", isDismissable: B2 = true, shouldCloseOnBlur: j2 = false, isKeyboardDismissDisabled: E2 = false, disableAnimation: k6 = false, shouldCloseOnInteractOutside: w3 } = u9, A3 = _(null), F3 = _(null), I2 = m13 || A3, K = c15 || F3, S2 = $fc909762b330b746$export$61c6a8c84e605fb6({ isOpen: g4, defaultOpen: O3, onOpenChange: y3 }), [T3, W2] = h(!S2.isOpen), H2 = F(() => S2.isOpen ? "open" : "closed", [S2.isOpen]), q3 = T(() => {
    null == D3 || D3(), S2.close();
  }, [S2, D3]), z3 = T(() => {
    W2(false);
  }, []), G3 = T(() => {
    W2(true);
  }, []), { triggerProps: J2, overlayProps: L2 } = $628037886ba31236$export$f9d5c8beee7d008d({ type: x8 }, S2, K), M2 = F(() => getAriaPlacement(R3), [R3]), { overlayProps: N5 } = $2a41e45df1593e64$export$d39e1813b3bdd0e1({ isOpen: S2.isOpen, targetRef: K, scrollRef: f5, placement: M2, overlayRef: I2, shouldFlip: v4, offset: C4 }), Q = F(() => {
    var e15;
    return !(null == (e15 = N5.style) || !e15.maxHeight);
  }, [N5.style]), U2 = T((e15 = {}, s9 = null) => ({ ...null != c15 && c15.current ? $3ef42575df84b30b$export$9d1611c77c2fe9282(J2, e15) : $3ef42575df84b30b$export$9d1611c77c2fe9282(e15, J2), ref: mergeRefs(K, s9) }), [K, c15, J2]), V2 = T((e15 = {}, s9 = {}) => {
    const o14 = N5.style ? Object.keys(N5.style) : [];
    let r14 = {};
    o14.forEach((e16) => {
      const o15 = isObject(s9) && s9[e16];
      o15 && (r14 = { ...r14, [e16]: o15 });
    });
    const t9 = Object.keys(r14).length > 0 ? { ...N5, style: { ...N5.style, ...r14 } } : N5;
    return { css: s9, ...e15, ...L2, ...t9, "data-state": H2, "data-placement": R3 };
  }, [H2, N5, L2, R3]);
  return { state: S2, exited: T3, overlayRef: I2, triggerRef: K, placement: R3, disableShadow: P3, disableAnimation: k6, shouldCloseOnBlur: j2, isDismissable: B2, isBordered: b6, borderWeight: h4, isKeyboardDismissDisabled: E2, shouldCloseOnInteractOutside: w3, isOpen: S2.isOpen, onClose: q3, onExited: G3, onEntered: z3, triggerProps: J2, overlayProps: L2, positionProps: N5, getTriggerProps: U2, getPopoverProps: V2, isPositioned: Q };
}

// node_modules/@nextui-org/react/esm/popover/popover-context.js
var [PopoverProvider, usePopoverContext] = createContext({ name: "PopoverContext", errorMessage: "usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`" });

// node_modules/@nextui-org/react/esm/popover/popover.js
var p6 = Cn.forwardRef((o14, p7) => {
  const { children: s9, ...n15 } = o14, f5 = usePopover({ ref: p7, ...n15 }), [c15, l13] = Cn.Children.toArray(s9), x8 = f5.state.isOpen || !f5.exited;
  return o(PopoverProvider, { value: f5, children: [c15, x8 && o($f57aed4a881a3485$export$b47c3594eab58386, { children: l13 })] });
});
__DEV__ && (p6.displayName = "NextUI.Popover"), p6.toString = () => ".nextui-popover";
var popover_default = p6;

// node_modules/@nextui-org/react/esm/popover/popover-trigger.js
init_compat_module();
var c11 = Cn.forwardRef((r14, a13) => {
  const { triggerRef: c15, getTriggerProps: g4 } = usePopoverContext(), { children: u9, ...d11 } = r14, P3 = F(() => "string" == typeof u9 ? o(text_default2, { children: u9 }) : O.only(u9), [u9]), { onPress: x8, onKeyDown: y3, onPressStart: v4, ...w3 } = F(() => g4($3ef42575df84b30b$export$9d1611c77c2fe9282(P3.props, d11), P3.ref), [g4, P3.props, d11, P3.ref]), { buttonProps: S2 } = $701a24aa0da5b062$export$ea18c227d4417cc3({ onPress: x8, onKeyDown: y3, onPressStart: v4, ...w3 }, c15), [, h4] = pickChild(r14.children, button_default2), D3 = F(() => void 0 !== (null == h4 ? void 0 : h4[0]), [h4]), K = F(() => ({ ...w3, onPress: x8, onKeyDown: y3, onPressStart: v4 }), [w3, x8, y3, v4]);
  return sn(P3, $3ef42575df84b30b$export$9d1611c77c2fe9282(w3, D3 ? K : S2));
});
__DEV__ && (c11.displayName = "NextUI.PopoverTrigger"), c11.toString = () => ".nextui-popover-trigger";
var popover_trigger_default = c11;

// node_modules/@nextui-org/react/esm/popover/popover-content.js
init_compat_module();

// node_modules/@react-aria/dialog/node_modules/@react-aria/utils/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/dialog/node_modules/@react-aria/ssr/dist/import.mjs
init_compat_module();
var $704cf1d3b684cc5c$var$defaultContext11 = {
  prefix: String(Math.round(Math.random() * 1e10)),
  current: 0,
  isSSR: false
};
var $704cf1d3b684cc5c$var$SSRContext11 = (0, Cn).createContext($704cf1d3b684cc5c$var$defaultContext11);
var $704cf1d3b684cc5c$var$canUseDOM11 = Boolean(typeof window !== "undefined" && window.document && window.document.createElement);
var $704cf1d3b684cc5c$var$componentIds5 = /* @__PURE__ */ new WeakMap();
function $704cf1d3b684cc5c$var$useCounter5(isDisabled = false) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext11);
  let ref = (0, _)(null);
  if (ref.current === null && !isDisabled) {
    var _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner;
    let currentOwner = (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = (0, Cn).__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED === void 0 ? void 0 : (_React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner = _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner) === null || _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner === void 0 ? void 0 : _React___SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED_ReactCurrentOwner.current;
    if (currentOwner) {
      let prevComponentValue = $704cf1d3b684cc5c$var$componentIds5.get(currentOwner);
      if (prevComponentValue == null)
        $704cf1d3b684cc5c$var$componentIds5.set(currentOwner, {
          id: ctx.current,
          state: currentOwner.memoizedState
        });
      else if (currentOwner.memoizedState !== prevComponentValue.state) {
        ctx.current = prevComponentValue.id;
        $704cf1d3b684cc5c$var$componentIds5.delete(currentOwner);
      }
    }
    ref.current = ++ctx.current;
  }
  return ref.current;
}
function $704cf1d3b684cc5c$export$619500959fc48b2611(defaultId) {
  let ctx = (0, q)($704cf1d3b684cc5c$var$SSRContext11);
  if (ctx === $704cf1d3b684cc5c$var$defaultContext11 && !$704cf1d3b684cc5c$var$canUseDOM11)
    console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");
  let counter = $704cf1d3b684cc5c$var$useCounter5(!!defaultId);
  return defaultId || `react-aria${ctx.prefix}-${counter}`;
}

// node_modules/@react-aria/dialog/node_modules/@react-aria/utils/dist/import.mjs
var $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c11 = typeof window !== "undefined" ? (0, Cn).useLayoutEffect : () => {
};
function $1dbecbe27a04f9af$export$14d238f342723f252(defaultValue) {
  let [value, setValue] = (0, h)(defaultValue);
  let valueRef = (0, _)(value);
  let effect = (0, _)(null);
  let nextIter = (0, T)(() => {
    let newValue = effect.current.next();
    while (!newValue.done && valueRef.current === newValue.value)
      newValue = effect.current.next();
    if (newValue.done) {
      effect.current = null;
      return;
    }
    setValue(newValue.value);
    valueRef.current = newValue.value;
  }, [
    setValue,
    valueRef,
    effect
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c11)(() => {
    if (effect.current)
      nextIter();
  });
  let queue = (0, T)((fn) => {
    effect.current = fn(valueRef.current);
    nextIter();
  }, [
    nextIter,
    effect,
    valueRef
  ]);
  return [
    value,
    queue
  ];
}
var $bdb11010cef70236$var$idsUpdaterMap10 = /* @__PURE__ */ new Map();
function $bdb11010cef70236$export$f680877a34711e376(defaultId) {
  let [value, setValue] = (0, h)(defaultId);
  let nextId = (0, _)(null);
  let res = (0, $704cf1d3b684cc5c$export$619500959fc48b2611)(value);
  let updateValue = (0, T)((val) => {
    nextId.current = val;
  }, []);
  $bdb11010cef70236$var$idsUpdaterMap10.set(res, updateValue);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c11)(() => {
    let r14 = res;
    return () => {
      $bdb11010cef70236$var$idsUpdaterMap10.delete(r14);
    };
  }, [
    res
  ]);
  (0, p)(() => {
    let newId = nextId.current;
    if (newId) {
      nextId.current = null;
      setValue(newId);
    }
  });
  return res;
}
function $bdb11010cef70236$export$cd8c9cb68f84262910(idA, idB) {
  if (idA === idB)
    return idA;
  let setIdA = $bdb11010cef70236$var$idsUpdaterMap10.get(idA);
  if (setIdA) {
    setIdA(idB);
    return idB;
  }
  let setIdB = $bdb11010cef70236$var$idsUpdaterMap10.get(idB);
  if (setIdB) {
    setIdB(idA);
    return idA;
  }
  return idB;
}
function $bdb11010cef70236$export$b4cc09c592e8fdb82(depArray = []) {
  let id = $bdb11010cef70236$export$f680877a34711e376();
  let [resolvedId, setResolvedId] = (0, $1dbecbe27a04f9af$export$14d238f342723f252)(id);
  let updateId = (0, T)(() => {
    setResolvedId(function* () {
      yield id;
      yield document.getElementById(id) ? id : void 0;
    });
  }, [
    id,
    setResolvedId
  ]);
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c11)(updateId, [
    id,
    updateId,
    ...depArray
  ]);
  return resolvedId;
}
function $ff5963eb1fccf552$export$e08e3b67e392101e10(...callbacks) {
  return (...args) => {
    for (let callback of callbacks)
      if (typeof callback === "function")
        callback(...args);
  };
}
function $3ef42575df84b30b$export$9d1611c77c2fe92810(...args) {
  let result = {
    ...args[0]
  };
  for (let i13 = 1; i13 < args.length; i13++) {
    let props = args[i13];
    for (let key in props) {
      let a13 = result[key];
      let b6 = props[key];
      if (typeof a13 === "function" && typeof b6 === "function" && // This is a lot faster than a regex.
      key[0] === "o" && key[1] === "n" && key.charCodeAt(2) >= /* 'A' */
      65 && key.charCodeAt(2) <= /* 'Z' */
      90)
        result[key] = (0, $ff5963eb1fccf552$export$e08e3b67e392101e10)(a13, b6);
      else if ((key === "className" || key === "UNSAFE_className") && typeof a13 === "string" && typeof b6 === "string")
        result[key] = (0, clsx_m_default)(a13, b6);
      else if (key === "id" && a13 && b6)
        result.id = (0, $bdb11010cef70236$export$cd8c9cb68f84262910)(a13, b6);
      else
        result[key] = b6 !== void 0 ? b6 : a13;
    }
  }
  return result;
}
var $65484d02dcb7eb3e$var$DOMPropNames7 = /* @__PURE__ */ new Set([
  "id"
]);
var $65484d02dcb7eb3e$var$labelablePropNames7 = /* @__PURE__ */ new Set([
  "aria-label",
  "aria-labelledby",
  "aria-describedby",
  "aria-details"
]);
var $65484d02dcb7eb3e$var$propRe7 = /^(data-.*)$/;
function $65484d02dcb7eb3e$export$457c3d6518dd4c6f7(props, opts = {}) {
  let { labelable, propNames } = opts;
  let filteredProps = {};
  for (const prop in props)
    if (Object.prototype.hasOwnProperty.call(props, prop) && ($65484d02dcb7eb3e$var$DOMPropNames7.has(prop) || labelable && $65484d02dcb7eb3e$var$labelablePropNames7.has(prop) || (propNames === null || propNames === void 0 ? void 0 : propNames.has(prop)) || $65484d02dcb7eb3e$var$propRe7.test(prop)))
      filteredProps[prop] = props[prop];
  return filteredProps;
}
function $7215afc6de606d6b$export$de79e2c695e052f310(element) {
  if ($7215afc6de606d6b$var$supportsPreventScroll10())
    element.focus({
      preventScroll: true
    });
  else {
    let scrollableElements = $7215afc6de606d6b$var$getScrollableElements10(element);
    element.focus();
    $7215afc6de606d6b$var$restoreScrollPosition10(scrollableElements);
  }
}
var $7215afc6de606d6b$var$supportsPreventScrollCached10 = null;
function $7215afc6de606d6b$var$supportsPreventScroll10() {
  if ($7215afc6de606d6b$var$supportsPreventScrollCached10 == null) {
    $7215afc6de606d6b$var$supportsPreventScrollCached10 = false;
    try {
      var focusElem = document.createElement("div");
      focusElem.focus({
        get preventScroll() {
          $7215afc6de606d6b$var$supportsPreventScrollCached10 = true;
          return true;
        }
      });
    } catch (e15) {
    }
  }
  return $7215afc6de606d6b$var$supportsPreventScrollCached10;
}
function $7215afc6de606d6b$var$getScrollableElements10(element) {
  var parent = element.parentNode;
  var scrollableElements = [];
  var rootScrollingElement = document.scrollingElement || document.documentElement;
  while (parent instanceof HTMLElement && parent !== rootScrollingElement) {
    if (parent.offsetHeight < parent.scrollHeight || parent.offsetWidth < parent.scrollWidth)
      scrollableElements.push({
        element: parent,
        scrollTop: parent.scrollTop,
        scrollLeft: parent.scrollLeft
      });
    parent = parent.parentNode;
  }
  if (rootScrollingElement instanceof HTMLElement)
    scrollableElements.push({
      element: rootScrollingElement,
      scrollTop: rootScrollingElement.scrollTop,
      scrollLeft: rootScrollingElement.scrollLeft
    });
  return scrollableElements;
}
function $7215afc6de606d6b$var$restoreScrollPosition10(scrollableElements) {
  for (let { element, scrollTop, scrollLeft } of scrollableElements) {
    element.scrollTop = scrollTop;
    element.scrollLeft = scrollLeft;
  }
}
var $bbed8b41f857bcc0$var$transitionsByElement11 = /* @__PURE__ */ new Map();
var $bbed8b41f857bcc0$var$transitionCallbacks11 = /* @__PURE__ */ new Set();
function $bbed8b41f857bcc0$var$setupGlobalEvents11() {
  if (typeof window === "undefined")
    return;
  let onTransitionStart = (e15) => {
    let transitions = $bbed8b41f857bcc0$var$transitionsByElement11.get(e15.target);
    if (!transitions) {
      transitions = /* @__PURE__ */ new Set();
      $bbed8b41f857bcc0$var$transitionsByElement11.set(e15.target, transitions);
      e15.target.addEventListener("transitioncancel", onTransitionEnd);
    }
    transitions.add(e15.propertyName);
  };
  let onTransitionEnd = (e15) => {
    let properties = $bbed8b41f857bcc0$var$transitionsByElement11.get(e15.target);
    if (!properties)
      return;
    properties.delete(e15.propertyName);
    if (properties.size === 0) {
      e15.target.removeEventListener("transitioncancel", onTransitionEnd);
      $bbed8b41f857bcc0$var$transitionsByElement11.delete(e15.target);
    }
    if ($bbed8b41f857bcc0$var$transitionsByElement11.size === 0) {
      for (let cb of $bbed8b41f857bcc0$var$transitionCallbacks11)
        cb();
      $bbed8b41f857bcc0$var$transitionCallbacks11.clear();
    }
  };
  document.body.addEventListener("transitionrun", onTransitionStart);
  document.body.addEventListener("transitionend", onTransitionEnd);
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $bbed8b41f857bcc0$var$setupGlobalEvents11();
  else
    document.addEventListener("DOMContentLoaded", $bbed8b41f857bcc0$var$setupGlobalEvents11);
}
function $bbed8b41f857bcc0$export$24490316f764c43010(fn) {
  requestAnimationFrame(() => {
    if ($bbed8b41f857bcc0$var$transitionsByElement11.size === 0)
      fn();
    else
      $bbed8b41f857bcc0$var$transitionCallbacks11.add(fn);
  });
}
function $03deb23ff14920c4$export$4eaf04e54aa8eed610() {
  let globalListeners = (0, _)(/* @__PURE__ */ new Map());
  let addGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    let fn = (options === null || options === void 0 ? void 0 : options.once) ? (...args) => {
      globalListeners.current.delete(listener);
      listener(...args);
    } : listener;
    globalListeners.current.set(listener, {
      type,
      eventTarget,
      fn,
      options
    });
    eventTarget.addEventListener(type, listener, options);
  }, []);
  let removeGlobalListener = (0, T)((eventTarget, type, listener, options) => {
    var _globalListeners_current_get;
    let fn = ((_globalListeners_current_get = globalListeners.current.get(listener)) === null || _globalListeners_current_get === void 0 ? void 0 : _globalListeners_current_get.fn) || listener;
    eventTarget.removeEventListener(type, fn, options);
    globalListeners.current.delete(listener);
  }, []);
  let removeAllGlobalListeners = (0, T)(() => {
    globalListeners.current.forEach((value, key) => {
      removeGlobalListener(value.eventTarget, value.type, key, value.options);
    });
  }, [
    removeGlobalListener
  ]);
  (0, p)(() => {
    return removeAllGlobalListeners;
  }, [
    removeAllGlobalListeners
  ]);
  return {
    addGlobalListener,
    removeGlobalListener,
    removeAllGlobalListeners
  };
}
function $e7801be82b4b2a53$export$4debdb1a3f0fa79e10(context, ref) {
  (0, $f0a04ccd8dbdd83b$export$e5c5a5f917a5871c11)(() => {
    if (context && context.ref && ref) {
      context.ref.current = ref.current;
      return () => {
        context.ref.current = null;
      };
    }
  }, [
    context,
    ref
  ]);
}
var $5df64b3807dc15ee$var$visualViewport11 = typeof window !== "undefined" && window.visualViewport;
function $c87311424ea30a05$var$testUserAgent10(re) {
  var _window_navigator_userAgentData;
  if (typeof window === "undefined" || window.navigator == null)
    return false;
  return ((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.brands.some((brand) => re.test(brand.brand))) || re.test(window.navigator.userAgent);
}
function $c87311424ea30a05$var$testPlatform10(re) {
  var _window_navigator_userAgentData;
  return typeof window !== "undefined" && window.navigator != null ? re.test(((_window_navigator_userAgentData = window.navigator["userAgentData"]) === null || _window_navigator_userAgentData === void 0 ? void 0 : _window_navigator_userAgentData.platform) || window.navigator.platform) : false;
}
function $c87311424ea30a05$export$9ac100e40613ea1010() {
  return $c87311424ea30a05$var$testPlatform10(/^Mac/i);
}
function $c87311424ea30a05$export$186c6964ca17d9910() {
  return $c87311424ea30a05$var$testPlatform10(/^iPhone/i);
}
function $c87311424ea30a05$export$7bef049ce92e422410() {
  return $c87311424ea30a05$var$testPlatform10(/^iPad/i) || // iPadOS 13 lies and says it's a Mac, but we can distinguish by detecting touch support.
  $c87311424ea30a05$export$9ac100e40613ea1010() && navigator.maxTouchPoints > 1;
}
function $c87311424ea30a05$export$fedb369cb70207f110() {
  return $c87311424ea30a05$export$186c6964ca17d9910() || $c87311424ea30a05$export$7bef049ce92e422410();
}
function $c87311424ea30a05$export$a11b0059900ceec810() {
  return $c87311424ea30a05$var$testUserAgent10(/Android/i);
}
function $6a7db85432448f7f$export$60278871457622de10(event) {
  if (event.mozInputSource === 0 && event.isTrusted)
    return true;
  if ((0, $c87311424ea30a05$export$a11b0059900ceec810)() && event.pointerType)
    return event.type === "click" && event.buttons === 1;
  return event.detail === 0 && !event.pointerType;
}
function $6a7db85432448f7f$export$29bf1b5f2c56cf6310(event) {
  return event.width === 0 && event.height === 0 || event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === "mouse";
}

// node_modules/@react-aria/dialog/node_modules/@react-aria/focus/dist/import.mjs
init_compat_module();

// node_modules/@react-aria/dialog/node_modules/@react-aria/interactions/dist/import.mjs
init_compat_module();
var $14c0b72509d70225$var$state10 = "default";
var $14c0b72509d70225$var$savedUserSelect10 = "";
var $14c0b72509d70225$var$modifiedElementMap10 = /* @__PURE__ */ new WeakMap();
function $14c0b72509d70225$export$16a469746717548710(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f110)()) {
    if ($14c0b72509d70225$var$state10 === "default") {
      $14c0b72509d70225$var$savedUserSelect10 = document.documentElement.style.webkitUserSelect;
      document.documentElement.style.webkitUserSelect = "none";
    }
    $14c0b72509d70225$var$state10 = "disabled";
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    $14c0b72509d70225$var$modifiedElementMap10.set(target, target.style.userSelect);
    target.style.userSelect = "none";
  }
}
function $14c0b72509d70225$export$b0d6fa1ab32e329510(target) {
  if ((0, $c87311424ea30a05$export$fedb369cb70207f110)()) {
    if ($14c0b72509d70225$var$state10 !== "disabled")
      return;
    $14c0b72509d70225$var$state10 = "restoring";
    setTimeout(() => {
      (0, $bbed8b41f857bcc0$export$24490316f764c43010)(() => {
        if ($14c0b72509d70225$var$state10 === "restoring") {
          if (document.documentElement.style.webkitUserSelect === "none")
            document.documentElement.style.webkitUserSelect = $14c0b72509d70225$var$savedUserSelect10 || "";
          $14c0b72509d70225$var$savedUserSelect10 = "";
          $14c0b72509d70225$var$state10 = "default";
        }
      });
    }, 300);
  } else if (target instanceof HTMLElement || target instanceof SVGElement) {
    if (target && $14c0b72509d70225$var$modifiedElementMap10.has(target)) {
      let targetOldUserSelect = $14c0b72509d70225$var$modifiedElementMap10.get(target);
      if (target.style.userSelect === "none")
        target.style.userSelect = targetOldUserSelect;
      if (target.getAttribute("style") === "")
        target.removeAttribute("style");
      $14c0b72509d70225$var$modifiedElementMap10.delete(target);
    }
  }
}
var $ae1eeba8b9eafd08$export$5165eccb35aaadb510 = (0, Cn).createContext(null);
$ae1eeba8b9eafd08$export$5165eccb35aaadb510.displayName = "PressResponderContext";
function $f6c31cce2adf654f$var$usePressResponderContext10(props) {
  let context = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb510));
  if (context) {
    let { register, ...contextProps } = context;
    props = (0, $3ef42575df84b30b$export$9d1611c77c2fe92810)(contextProps, props);
    register();
  }
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e10)(context, props.ref);
  return props;
}
function $f6c31cce2adf654f$export$45712eceda6fad2110(props) {
  let {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    isPressed: isPressedProp,
    preventFocusOnPress,
    shouldCancelOnPointerExit,
    allowTextSelectionOnPress,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ref: _2,
    ...domProps
  } = $f6c31cce2adf654f$var$usePressResponderContext10(props);
  let propsRef = (0, _)(null);
  propsRef.current = {
    onPress,
    onPressChange,
    onPressStart,
    onPressEnd,
    onPressUp,
    isDisabled,
    shouldCancelOnPointerExit
  };
  let [isPressed, setPressed] = (0, h)(false);
  let ref = (0, _)({
    isPressed: false,
    ignoreEmulatedMouseEvents: false,
    ignoreClickAfterPress: false,
    didFirePressStart: false,
    activePointerId: null,
    target: null,
    isOverTarget: false,
    pointerType: null
  });
  let { addGlobalListener, removeAllGlobalListeners } = (0, $03deb23ff14920c4$export$4eaf04e54aa8eed610)();
  let pressProps = (0, F)(() => {
    let state = ref.current;
    let triggerPressStart = (originalEvent, pointerType) => {
      let { onPressStart: onPressStart2, onPressChange: onPressChange2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2 || state.didFirePressStart)
        return;
      if (onPressStart2)
        onPressStart2({
          type: "pressstart",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(true);
      state.didFirePressStart = true;
      setPressed(true);
    };
    let triggerPressEnd = (originalEvent, pointerType, wasPressed = true) => {
      let { onPressEnd: onPressEnd2, onPressChange: onPressChange2, onPress: onPress2, isDisabled: isDisabled2 } = propsRef.current;
      if (!state.didFirePressStart)
        return;
      state.ignoreClickAfterPress = true;
      state.didFirePressStart = false;
      if (onPressEnd2)
        onPressEnd2({
          type: "pressend",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
      if (onPressChange2)
        onPressChange2(false);
      setPressed(false);
      if (onPress2 && wasPressed && !isDisabled2)
        onPress2({
          type: "press",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let triggerPressUp = (originalEvent, pointerType) => {
      let { onPressUp: onPressUp2, isDisabled: isDisabled2 } = propsRef.current;
      if (isDisabled2)
        return;
      if (onPressUp2)
        onPressUp2({
          type: "pressup",
          pointerType,
          target: originalEvent.currentTarget,
          shiftKey: originalEvent.shiftKey,
          metaKey: originalEvent.metaKey,
          ctrlKey: originalEvent.ctrlKey,
          altKey: originalEvent.altKey
        });
    };
    let cancel = (e15) => {
      if (state.isPressed) {
        if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent10(state.target, e15), state.pointerType, false);
        state.isPressed = false;
        state.isOverTarget = false;
        state.activePointerId = null;
        state.pointerType = null;
        removeAllGlobalListeners();
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e329510)(state.target);
      }
    };
    let pressProps2 = {
      onKeyDown(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent10(e15.nativeEvent, e15.currentTarget) && e15.currentTarget.contains(e15.target)) {
          if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard10(e15.target, e15.key))
            e15.preventDefault();
          e15.stopPropagation();
          if (!state.isPressed && !e15.repeat) {
            state.target = e15.currentTarget;
            state.isPressed = true;
            triggerPressStart(e15, "keyboard");
            addGlobalListener(document, "keyup", onKeyUp, false);
          }
        } else if (e15.key === "Enter" && $f6c31cce2adf654f$var$isHTMLAnchorLink10(e15.currentTarget))
          e15.stopPropagation();
      },
      onKeyUp(e15) {
        if ($f6c31cce2adf654f$var$isValidKeyboardEvent10(e15.nativeEvent, e15.currentTarget) && !e15.repeat && e15.currentTarget.contains(e15.target))
          triggerPressUp($f6c31cce2adf654f$var$createEvent10(state.target, e15), "keyboard");
      },
      onClick(e15) {
        if (e15 && !e15.currentTarget.contains(e15.target))
          return;
        if (e15 && e15.button === 0) {
          e15.stopPropagation();
          if (isDisabled)
            e15.preventDefault();
          if (!state.ignoreClickAfterPress && !state.ignoreEmulatedMouseEvents && (state.pointerType === "virtual" || (0, $6a7db85432448f7f$export$60278871457622de10)(e15.nativeEvent))) {
            if (!isDisabled && !preventFocusOnPress)
              (0, $7215afc6de606d6b$export$de79e2c695e052f310)(e15.currentTarget);
            triggerPressStart(e15, "virtual");
            triggerPressUp(e15, "virtual");
            triggerPressEnd(e15, "virtual");
          }
          state.ignoreEmulatedMouseEvents = false;
          state.ignoreClickAfterPress = false;
        }
      }
    };
    let onKeyUp = (e15) => {
      if (state.isPressed && $f6c31cce2adf654f$var$isValidKeyboardEvent10(e15, state.target)) {
        if ($f6c31cce2adf654f$var$shouldPreventDefaultKeyboard10(e15.target, e15.key))
          e15.preventDefault();
        e15.stopPropagation();
        state.isPressed = false;
        let target = e15.target;
        triggerPressEnd($f6c31cce2adf654f$var$createEvent10(state.target, e15), "keyboard", state.target.contains(target));
        removeAllGlobalListeners();
        if (state.target instanceof HTMLElement && state.target.contains(target) && ($f6c31cce2adf654f$var$isHTMLAnchorLink10(state.target) || state.target.getAttribute("role") === "link"))
          state.target.click();
      }
    };
    if (typeof PointerEvent !== "undefined") {
      pressProps2.onPointerDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ((0, $6a7db85432448f7f$export$29bf1b5f2c56cf6310)(e15.nativeEvent)) {
          state.pointerType = "virtual";
          return;
        }
        if ($f6c31cce2adf654f$var$shouldPreventDefault10(e15.currentTarget))
          e15.preventDefault();
        state.pointerType = e15.pointerType;
        e15.stopPropagation();
        if (!state.isPressed) {
          state.isPressed = true;
          state.isOverTarget = true;
          state.activePointerId = e15.pointerId;
          state.target = e15.currentTarget;
          if (!isDisabled && !preventFocusOnPress)
            (0, $7215afc6de606d6b$export$de79e2c695e052f310)(e15.currentTarget);
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$16a469746717548710)(state.target);
          triggerPressStart(e15, state.pointerType);
          addGlobalListener(document, "pointermove", onPointerMove, false);
          addGlobalListener(document, "pointerup", onPointerUp, false);
          addGlobalListener(document, "pointercancel", onPointerCancel, false);
        }
      };
      pressProps2.onMouseDown = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (e15.button === 0) {
          if ($f6c31cce2adf654f$var$shouldPreventDefault10(e15.currentTarget))
            e15.preventDefault();
          e15.stopPropagation();
        }
      };
      pressProps2.onPointerUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target) || state.pointerType === "virtual")
          return;
        if (e15.button === 0 && $f6c31cce2adf654f$var$isOverTarget10(e15, e15.currentTarget))
          triggerPressUp(e15, state.pointerType || e15.pointerType);
      };
      let onPointerMove = (e15) => {
        if (e15.pointerId !== state.activePointerId)
          return;
        if ($f6c31cce2adf654f$var$isOverTarget10(e15, state.target)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart($f6c31cce2adf654f$var$createEvent10(state.target, e15), state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd($f6c31cce2adf654f$var$createEvent10(state.target, e15), state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      let onPointerUp = (e15) => {
        if (e15.pointerId === state.activePointerId && state.isPressed && e15.button === 0) {
          if ($f6c31cce2adf654f$var$isOverTarget10(e15, state.target))
            triggerPressEnd($f6c31cce2adf654f$var$createEvent10(state.target, e15), state.pointerType);
          else if (state.isOverTarget)
            triggerPressEnd($f6c31cce2adf654f$var$createEvent10(state.target, e15), state.pointerType, false);
          state.isPressed = false;
          state.isOverTarget = false;
          state.activePointerId = null;
          state.pointerType = null;
          removeAllGlobalListeners();
          if (!allowTextSelectionOnPress)
            (0, $14c0b72509d70225$export$b0d6fa1ab32e329510)(state.target);
        }
      };
      let onPointerCancel = (e15) => {
        cancel(e15);
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    } else {
      pressProps2.onMouseDown = (e15) => {
        if (e15.button !== 0 || !e15.currentTarget.contains(e15.target))
          return;
        if ($f6c31cce2adf654f$var$shouldPreventDefault10(e15.currentTarget))
          e15.preventDefault();
        e15.stopPropagation();
        if (state.ignoreEmulatedMouseEvents)
          return;
        state.isPressed = true;
        state.isOverTarget = true;
        state.target = e15.currentTarget;
        state.pointerType = (0, $6a7db85432448f7f$export$60278871457622de10)(e15.nativeEvent) ? "virtual" : "mouse";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f310)(e15.currentTarget);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(document, "mouseup", onMouseUp, false);
      };
      pressProps2.onMouseEnter = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = true;
          triggerPressStart(e15, state.pointerType);
        }
      };
      pressProps2.onMouseLeave = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed && !state.ignoreEmulatedMouseEvents) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onMouseUp = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        if (!state.ignoreEmulatedMouseEvents && e15.button === 0)
          triggerPressUp(e15, state.pointerType);
      };
      let onMouseUp = (e15) => {
        if (e15.button !== 0)
          return;
        state.isPressed = false;
        removeAllGlobalListeners();
        if (state.ignoreEmulatedMouseEvents) {
          state.ignoreEmulatedMouseEvents = false;
          return;
        }
        if ($f6c31cce2adf654f$var$isOverTarget10(e15, state.target))
          triggerPressEnd($f6c31cce2adf654f$var$createEvent10(state.target, e15), state.pointerType);
        else if (state.isOverTarget)
          triggerPressEnd($f6c31cce2adf654f$var$createEvent10(state.target, e15), state.pointerType, false);
        state.isOverTarget = false;
      };
      pressProps2.onTouchStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        let touch = $f6c31cce2adf654f$var$getTouchFromEvent10(e15.nativeEvent);
        if (!touch)
          return;
        state.activePointerId = touch.identifier;
        state.ignoreEmulatedMouseEvents = true;
        state.isOverTarget = true;
        state.isPressed = true;
        state.target = e15.currentTarget;
        state.pointerType = "touch";
        if (!isDisabled && !preventFocusOnPress)
          (0, $7215afc6de606d6b$export$de79e2c695e052f310)(e15.currentTarget);
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$16a469746717548710)(state.target);
        triggerPressStart(e15, state.pointerType);
        addGlobalListener(window, "scroll", onScroll, true);
      };
      pressProps2.onTouchMove = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById10(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget10(touch, e15.currentTarget)) {
          if (!state.isOverTarget) {
            state.isOverTarget = true;
            triggerPressStart(e15, state.pointerType);
          }
        } else if (state.isOverTarget) {
          state.isOverTarget = false;
          triggerPressEnd(e15, state.pointerType, false);
          if (propsRef.current.shouldCancelOnPointerExit)
            cancel(e15);
        }
      };
      pressProps2.onTouchEnd = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (!state.isPressed)
          return;
        let touch = $f6c31cce2adf654f$var$getTouchById10(e15.nativeEvent, state.activePointerId);
        if (touch && $f6c31cce2adf654f$var$isOverTarget10(touch, e15.currentTarget)) {
          triggerPressUp(e15, state.pointerType);
          triggerPressEnd(e15, state.pointerType);
        } else if (state.isOverTarget)
          triggerPressEnd(e15, state.pointerType, false);
        state.isPressed = false;
        state.activePointerId = null;
        state.isOverTarget = false;
        state.ignoreEmulatedMouseEvents = true;
        if (!allowTextSelectionOnPress)
          (0, $14c0b72509d70225$export$b0d6fa1ab32e329510)(state.target);
        removeAllGlobalListeners();
      };
      pressProps2.onTouchCancel = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        e15.stopPropagation();
        if (state.isPressed)
          cancel(e15);
      };
      let onScroll = (e15) => {
        if (state.isPressed && e15.target.contains(state.target))
          cancel({
            currentTarget: state.target,
            shiftKey: false,
            ctrlKey: false,
            metaKey: false,
            altKey: false
          });
      };
      pressProps2.onDragStart = (e15) => {
        if (!e15.currentTarget.contains(e15.target))
          return;
        cancel(e15);
      };
    }
    return pressProps2;
  }, [
    addGlobalListener,
    isDisabled,
    preventFocusOnPress,
    removeAllGlobalListeners,
    allowTextSelectionOnPress
  ]);
  (0, p)(() => {
    return () => {
      if (!allowTextSelectionOnPress)
        (0, $14c0b72509d70225$export$b0d6fa1ab32e329510)(ref.current.target);
    };
  }, [
    allowTextSelectionOnPress
  ]);
  return {
    isPressed: isPressedProp || isPressed,
    pressProps: (0, $3ef42575df84b30b$export$9d1611c77c2fe92810)(domProps, pressProps)
  };
}
function $f6c31cce2adf654f$var$isHTMLAnchorLink10(target) {
  return target.tagName === "A" && target.hasAttribute("href");
}
function $f6c31cce2adf654f$var$isValidKeyboardEvent10(event, currentTarget) {
  const { key, code } = event;
  const element = currentTarget;
  const role = element.getAttribute("role");
  return (key === "Enter" || key === " " || key === "Spacebar" || code === "Space") && !(element instanceof HTMLInputElement && !$f6c31cce2adf654f$var$isValidInputKey10(element, key) || element instanceof HTMLTextAreaElement || element.isContentEditable) && // A link with a valid href should be handled natively,
  // unless it also has role='button' and was triggered using Space.
  (!$f6c31cce2adf654f$var$isHTMLAnchorLink10(element) || role === "button" && key !== "Enter") && // An element with role='link' should only trigger with Enter key
  !(role === "link" && key !== "Enter");
}
function $f6c31cce2adf654f$var$getTouchFromEvent10(event) {
  const { targetTouches } = event;
  if (targetTouches.length > 0)
    return targetTouches[0];
  return null;
}
function $f6c31cce2adf654f$var$getTouchById10(event, pointerId) {
  const changedTouches = event.changedTouches;
  for (let i13 = 0; i13 < changedTouches.length; i13++) {
    const touch = changedTouches[i13];
    if (touch.identifier === pointerId)
      return touch;
  }
  return null;
}
function $f6c31cce2adf654f$var$createEvent10(target, e15) {
  return {
    currentTarget: target,
    shiftKey: e15.shiftKey,
    ctrlKey: e15.ctrlKey,
    metaKey: e15.metaKey,
    altKey: e15.altKey
  };
}
function $f6c31cce2adf654f$var$getPointClientRect10(point) {
  let offsetX = point.width / 2 || point.radiusX || 0;
  let offsetY = point.height / 2 || point.radiusY || 0;
  return {
    top: point.clientY - offsetY,
    right: point.clientX + offsetX,
    bottom: point.clientY + offsetY,
    left: point.clientX - offsetX
  };
}
function $f6c31cce2adf654f$var$areRectanglesOverlapping10(a13, b6) {
  if (a13.left > b6.right || b6.left > a13.right)
    return false;
  if (a13.top > b6.bottom || b6.top > a13.bottom)
    return false;
  return true;
}
function $f6c31cce2adf654f$var$isOverTarget10(point, target) {
  let rect = target.getBoundingClientRect();
  let pointRect = $f6c31cce2adf654f$var$getPointClientRect10(point);
  return $f6c31cce2adf654f$var$areRectanglesOverlapping10(rect, pointRect);
}
function $f6c31cce2adf654f$var$shouldPreventDefault10(target) {
  return !(target instanceof HTMLElement) || !target.draggable;
}
function $f6c31cce2adf654f$var$shouldPreventDefaultKeyboard10(target, key) {
  if (target instanceof HTMLInputElement)
    return !$f6c31cce2adf654f$var$isValidInputKey10(target, key);
  if (target instanceof HTMLButtonElement)
    return target.type !== "submit";
  return true;
}
var $f6c31cce2adf654f$var$nonTextInputTypes10 = /* @__PURE__ */ new Set([
  "checkbox",
  "radio",
  "range",
  "color",
  "file",
  "image",
  "button",
  "submit",
  "reset"
]);
function $f6c31cce2adf654f$var$isValidInputKey10(target, key) {
  return target.type === "checkbox" || target.type === "radio" ? key === " " : $f6c31cce2adf654f$var$nonTextInputTypes10.has(target.type);
}
var $3b117e43dc0ca95d$export$27c701ed9e449e9910 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let newRef = (0, _)();
  ref = ref !== null && ref !== void 0 ? ref : newRef;
  let { pressProps } = (0, $f6c31cce2adf654f$export$45712eceda6fad2110)({
    ...props,
    ref
  });
  let child = (0, Cn).Children.only(children);
  return (0, Cn).cloneElement(
    child,
    // @ts-ignore
    {
      ref,
      ...(0, $3ef42575df84b30b$export$9d1611c77c2fe92810)(child.props, pressProps)
    }
  );
});
var $f1ab8c75478c6f73$export$3351871ee4b288b810 = (0, Cn).forwardRef(({ children, ...props }, ref) => {
  let isRegistered = (0, _)(false);
  let prevContext = (0, q)((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb510));
  let context = (0, $3ef42575df84b30b$export$9d1611c77c2fe92810)(prevContext || {}, {
    ...props,
    ref: ref || (prevContext === null || prevContext === void 0 ? void 0 : prevContext.ref),
    register() {
      isRegistered.current = true;
      if (prevContext)
        prevContext.register();
    }
  });
  (0, $e7801be82b4b2a53$export$4debdb1a3f0fa79e10)(prevContext, ref);
  (0, p)(() => {
    if (!isRegistered.current)
      console.warn("A PressResponder was rendered without a pressable child. Either call the usePress hook, or wrap your DOM node with <Pressable> component.");
  }, []);
  return (0, Cn).createElement((0, $ae1eeba8b9eafd08$export$5165eccb35aaadb510).Provider, {
    value: context
  }, children);
});
var $507fabe10e71c6fb$var$currentModality10 = null;
var $507fabe10e71c6fb$var$changeHandlers10 = /* @__PURE__ */ new Set();
var $507fabe10e71c6fb$var$hasSetupGlobalListeners10 = false;
var $507fabe10e71c6fb$var$hasEventBeforeFocus10 = false;
var $507fabe10e71c6fb$var$hasBlurredWindowRecently10 = false;
function $507fabe10e71c6fb$var$triggerChangeHandlers10(modality, e15) {
  for (let handler of $507fabe10e71c6fb$var$changeHandlers10)
    handler(modality, e15);
}
function $507fabe10e71c6fb$var$isValidKey10(e15) {
  return !(e15.metaKey || !(0, $c87311424ea30a05$export$9ac100e40613ea1010)() && e15.altKey || e15.ctrlKey || e15.key === "Control" || e15.key === "Shift" || e15.key === "Meta");
}
function $507fabe10e71c6fb$var$handleKeyboardEvent10(e15) {
  $507fabe10e71c6fb$var$hasEventBeforeFocus10 = true;
  if ($507fabe10e71c6fb$var$isValidKey10(e15)) {
    $507fabe10e71c6fb$var$currentModality10 = "keyboard";
    $507fabe10e71c6fb$var$triggerChangeHandlers10("keyboard", e15);
  }
}
function $507fabe10e71c6fb$var$handlePointerEvent10(e15) {
  $507fabe10e71c6fb$var$currentModality10 = "pointer";
  if (e15.type === "mousedown" || e15.type === "pointerdown") {
    $507fabe10e71c6fb$var$hasEventBeforeFocus10 = true;
    $507fabe10e71c6fb$var$triggerChangeHandlers10("pointer", e15);
  }
}
function $507fabe10e71c6fb$var$handleClickEvent10(e15) {
  if ((0, $6a7db85432448f7f$export$60278871457622de10)(e15)) {
    $507fabe10e71c6fb$var$hasEventBeforeFocus10 = true;
    $507fabe10e71c6fb$var$currentModality10 = "virtual";
  }
}
function $507fabe10e71c6fb$var$handleFocusEvent10(e15) {
  if (e15.target === window || e15.target === document)
    return;
  if (!$507fabe10e71c6fb$var$hasEventBeforeFocus10 && !$507fabe10e71c6fb$var$hasBlurredWindowRecently10) {
    $507fabe10e71c6fb$var$currentModality10 = "virtual";
    $507fabe10e71c6fb$var$triggerChangeHandlers10("virtual", e15);
  }
  $507fabe10e71c6fb$var$hasEventBeforeFocus10 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently10 = false;
}
function $507fabe10e71c6fb$var$handleWindowBlur10() {
  $507fabe10e71c6fb$var$hasEventBeforeFocus10 = false;
  $507fabe10e71c6fb$var$hasBlurredWindowRecently10 = true;
}
function $507fabe10e71c6fb$var$setupGlobalFocusEvents10() {
  if (typeof window === "undefined" || $507fabe10e71c6fb$var$hasSetupGlobalListeners10)
    return;
  let focus = HTMLElement.prototype.focus;
  HTMLElement.prototype.focus = function() {
    $507fabe10e71c6fb$var$hasEventBeforeFocus10 = true;
    focus.apply(this, arguments);
  };
  document.addEventListener("keydown", $507fabe10e71c6fb$var$handleKeyboardEvent10, true);
  document.addEventListener("keyup", $507fabe10e71c6fb$var$handleKeyboardEvent10, true);
  document.addEventListener("click", $507fabe10e71c6fb$var$handleClickEvent10, true);
  window.addEventListener("focus", $507fabe10e71c6fb$var$handleFocusEvent10, true);
  window.addEventListener("blur", $507fabe10e71c6fb$var$handleWindowBlur10, false);
  if (typeof PointerEvent !== "undefined") {
    document.addEventListener("pointerdown", $507fabe10e71c6fb$var$handlePointerEvent10, true);
    document.addEventListener("pointermove", $507fabe10e71c6fb$var$handlePointerEvent10, true);
    document.addEventListener("pointerup", $507fabe10e71c6fb$var$handlePointerEvent10, true);
  } else {
    document.addEventListener("mousedown", $507fabe10e71c6fb$var$handlePointerEvent10, true);
    document.addEventListener("mousemove", $507fabe10e71c6fb$var$handlePointerEvent10, true);
    document.addEventListener("mouseup", $507fabe10e71c6fb$var$handlePointerEvent10, true);
  }
  $507fabe10e71c6fb$var$hasSetupGlobalListeners10 = true;
}
if (typeof document !== "undefined") {
  if (document.readyState !== "loading")
    $507fabe10e71c6fb$var$setupGlobalFocusEvents10();
  else
    document.addEventListener("DOMContentLoaded", $507fabe10e71c6fb$var$setupGlobalFocusEvents10);
}
function $507fabe10e71c6fb$export$630ff653c5ada6a910() {
  return $507fabe10e71c6fb$var$currentModality10;
}

// node_modules/@react-aria/dialog/node_modules/@react-aria/focus/dist/import.mjs
function $6a99195332edec8b$export$80f3e147d781571c9(element) {
  if ((0, $507fabe10e71c6fb$export$630ff653c5ada6a910)() === "virtual") {
    let lastFocusedElement = document.activeElement;
    (0, $bbed8b41f857bcc0$export$24490316f764c43010)(() => {
      if (document.activeElement === lastFocusedElement && document.contains(element))
        (0, $7215afc6de606d6b$export$de79e2c695e052f310)(element);
    });
  } else
    (0, $7215afc6de606d6b$export$de79e2c695e052f310)(element);
}
var $9bf71ea28793e738$var$FocusContext10 = (0, Cn).createContext(null);
var $9bf71ea28793e738$var$focusableElements10 = [
  "input:not([disabled]):not([type=hidden])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "a[href]",
  "area[href]",
  "summary",
  "iframe",
  "object",
  "embed",
  "audio[controls]",
  "video[controls]",
  "[contenteditable]"
];
var $9bf71ea28793e738$var$FOCUSABLE_ELEMENT_SELECTOR10 = $9bf71ea28793e738$var$focusableElements10.join(":not([hidden]),") + ",[tabindex]:not([disabled]):not([hidden])";
$9bf71ea28793e738$var$focusableElements10.push('[tabindex]:not([tabindex="-1"]):not([disabled])');
var $9bf71ea28793e738$var$TABBABLE_ELEMENT_SELECTOR10 = $9bf71ea28793e738$var$focusableElements10.join(':not([hidden]):not([tabindex="-1"]),');
function $9bf71ea28793e738$var$isElementInScope10(element, scope) {
  return scope.some((node) => node.contains(element));
}
var $9bf71ea28793e738$var$Tree9 = class {
  get size() {
    return this.fastMap.size;
  }
  getTreeNode(data) {
    return this.fastMap.get(data);
  }
  addTreeNode(scopeRef, parent, nodeToRestore) {
    let parentNode = this.fastMap.get(parent !== null && parent !== void 0 ? parent : null);
    let node = new $9bf71ea28793e738$var$TreeNode9({
      scopeRef
    });
    parentNode.addChild(node);
    node.parent = parentNode;
    this.fastMap.set(scopeRef, node);
    if (nodeToRestore)
      node.nodeToRestore = nodeToRestore;
  }
  addNode(node) {
    this.fastMap.set(node.scopeRef, node);
  }
  removeTreeNode(scopeRef) {
    if (scopeRef === null)
      return;
    let node = this.fastMap.get(scopeRef);
    let parentNode = node.parent;
    for (let current of this.traverse())
      if (current !== node && node.nodeToRestore && current.nodeToRestore && node.scopeRef.current && $9bf71ea28793e738$var$isElementInScope10(current.nodeToRestore, node.scopeRef.current))
        current.nodeToRestore = node.nodeToRestore;
    let children = node.children;
    parentNode.removeChild(node);
    if (children.size > 0)
      children.forEach((child) => parentNode.addChild(child));
    this.fastMap.delete(node.scopeRef);
  }
  // Pre Order Depth First
  *traverse(node = this.root) {
    if (node.scopeRef != null)
      yield node;
    if (node.children.size > 0)
      for (let child of node.children)
        yield* this.traverse(child);
  }
  clone() {
    let newTree = new $9bf71ea28793e738$var$Tree9();
    for (let node of this.traverse())
      newTree.addTreeNode(node.scopeRef, node.parent.scopeRef, node.nodeToRestore);
    return newTree;
  }
  constructor() {
    (0, _defineProperty)(this, "fastMap", /* @__PURE__ */ new Map());
    this.root = new $9bf71ea28793e738$var$TreeNode9({
      scopeRef: null
    });
    this.fastMap.set(null, this.root);
  }
};
var $9bf71ea28793e738$var$TreeNode9 = class {
  addChild(node) {
    this.children.add(node);
    node.parent = this;
  }
  removeChild(node) {
    this.children.delete(node);
    node.parent = void 0;
  }
  constructor(props) {
    (0, _defineProperty)(this, "children", /* @__PURE__ */ new Set());
    (0, _defineProperty)(this, "contain", false);
    this.scopeRef = props.scopeRef;
  }
};
var $9bf71ea28793e738$export$d06fae2ee68b101e9 = new $9bf71ea28793e738$var$Tree9();
var $e6afbd83fe6ebbd2$var$FocusableContext10 = (0, Cn).createContext(null);
function $e6afbd83fe6ebbd2$var$FocusableProvider10(props, ref) {
  let { children, ...otherProps } = props;
  let context = {
    ...otherProps,
    ref
  };
  return (0, Cn).createElement($e6afbd83fe6ebbd2$var$FocusableContext10.Provider, {
    value: context
  }, children);
}
var $e6afbd83fe6ebbd2$export$13f3202a3e5ddd510 = (0, Cn).forwardRef($e6afbd83fe6ebbd2$var$FocusableProvider10);

// node_modules/@react-aria/dialog/dist/module.js
init_compat_module();
function $40df3f8667284809$export$d55e7ee900f34e93(props, ref) {
  let { role = "dialog" } = props;
  let titleId = $bdb11010cef70236$export$b4cc09c592e8fdb82();
  titleId = props["aria-label"] ? void 0 : titleId;
  let isRefocusing = _(false);
  p(() => {
    if (ref.current && !ref.current.contains(document.activeElement)) {
      $6a99195332edec8b$export$80f3e147d781571c9(ref.current);
      let timeout = setTimeout(() => {
        if (document.activeElement === ref.current) {
          isRefocusing.current = true;
          ref.current.blur();
          $6a99195332edec8b$export$80f3e147d781571c9(ref.current);
          isRefocusing.current = false;
        }
      }, 500);
      return () => {
        clearTimeout(timeout);
      };
    }
  }, [
    ref
  ]);
  $337b884510726a0d$export$14c98a7594375490();
  return {
    dialogProps: {
      ...$65484d02dcb7eb3e$export$457c3d6518dd4c6f7(props, {
        labelable: true
      }),
      role,
      tabIndex: -1,
      "aria-labelledby": props["aria-labelledby"] || titleId,
      // Prevent blur events from reaching useOverlay, which may cause
      // popovers to close. Since focus is contained within the dialog,
      // we don't want this to occur due to the above useEffect.
      onBlur: (e15) => {
        if (isRefocusing.current)
          e15.stopPropagation();
      }
    },
    titleProps: {
      id: titleId
    }
  };
}

// node_modules/@nextui-org/react/esm/popover/popover.styles.js
var appearanceIn2 = keyframes({ "0%": { opacity: 0, transform: "translateZ(0)  scale(0.95)" }, "60%": { opacity: 0.75, backfaceVisibility: "hidden", webkitFontSmoothing: "antialiased", transform: "translateZ(0) scale(1.05)" }, "100%": { opacity: 1, transform: "translateZ(0) scale(1)" } });
var appearanceOut2 = keyframes({ "0%": { opacity: 1, transform: "scale(1)" }, "100%": { opacity: 0, transform: "scale(0.5)" } });
var StyledPopoverContentContainer = styled("div", { $$popoverMinWidth: "$space$fit", $$popoverMinHeight: "$space$fit", $$popoverBorderRadius: "$radii$lg", $$popoverBackground: "$colors$backgroundContrast", $$popoverBoxShadow: "$shadows$md", $$popoverBorderColor: "$colors$border", boxShadow: "$$popoverBoxShadow", outline: "none", overflow: "hidden auto", bg: "$$popoverBackground", display: "inline-flex", flexDirection: "column", boxSizing: "border-box", minWidth: "$$popoverMinWidth", minHeight: "$$popoverMinHeight", maxWidth: "calc(100% - $$popoverMinWidth)", maxHeight: "calc(100% - $$popoverMinWidth)", borderRadius: "$$popoverBorderRadius", animationFillMode: "forwards", willChange: "transform, opacity", "@motion": { transition: "none" }, "&.nextui-popover-content-enter": { animationName: appearanceIn2, animationTimingFunction: "ease-out", animationDirection: "normal", animationDuration: "300ms", animationFillMode: "both" }, "&.nextui-popover-content-leave": { animationName: appearanceOut2, animationTimingFunction: "ease-in", animationDuration: "60ms", animationFillMode: "both" }, variants: { disableShadow: { true: { boxShadow: "none" } }, isBordered: { true: { borderStyle: "solid", borderColor: "$$popoverBorderColor" } }, borderWeight: { light: { bw: "$light", $$popoverBorderWeight: "$borderWeights$light" }, normal: { bw: "$normal", $$popoverBorderWeight: "$borderWeights$normal" }, bold: { bw: "$bold", $$popoverBorderWeight: "$borderWeights$bold" }, extrabold: { bw: "$extrabold", $$popoverBorderWeight: "$borderWeights$extrabold" }, black: { bw: "$black", $$popoverBorderWeight: "$borderWeights$black" } }, isPositioned: { true: { visibility: "visible" }, false: { visibility: "hidden" } }, disableAnimation: { true: { transition: "none", "&.nextui-popover-content-enter": { animation: "none" }, "&.nextui-popover-content-leave": { animation: "none" } } } }, defaultVariants: { isBordered: false, borderWeight: "light" } }, cssFocusVisible);
var StyledPopoverContent = styled("div", {});

// node_modules/@nextui-org/react/esm/popover/popover-content.js
var g2 = Cn.forwardRef((e15, d11) => {
  const { children: g4, as: D3, css: P3, className: y3, ...C4 } = e15, { state: j2, placement: N5, overlayRef: B2, disableAnimation: E2, disableShadow: F3, shouldCloseOnBlur: w3, isDismissable: I2, isKeyboardDismissDisabled: S2, shouldCloseOnInteractOutside: T3, getPopoverProps: A3, isBordered: K, borderWeight: R3, onClose: V2, onEntered: W2, onExited: U2, isPositioned: k6 } = usePopoverContext(), q3 = getTransformOrigin(N5), z3 = F(() => ({ transformOrigin: q3, ...P3 }), [q3, P3]), { modalProps: G3 } = $f57aed4a881a3485$export$33ffd74ebf07f060({ isDisabled: true }), { dialogProps: H2 } = $40df3f8667284809$export$d55e7ee900f34e93({ role: "dialog" }, B2), { overlayProps: J2 } = $a11501f3d1d39e6c$export$ea8f71083e90600f({ onClose: V2, isOpen: j2.isOpen, isDismissable: I2 && j2.isOpen, shouldCloseOnBlur: w3, isKeyboardDismissDisabled: S2, shouldCloseOnInteractOutside: T3 }, B2), L2 = $3ef42575df84b30b$export$9d1611c77c2fe9282({ isBordered: K, disableShadow: F3, borderWeight: R3 }, C4), { isFocusVisible: M2, focusProps: Q } = $f7dceffc5ad7768b$export$4e328f61c538687f(), X = F(() => ({ clearTime: E2 ? 0 : 300, enterTime: E2 ? 0 : 20, leaveTime: E2 ? 0 : 60, name: "nextui-popover-content", visible: j2.isOpen, onEntered: W2, onExited: U2 }), [E2, j2.isOpen]), Y2 = o(StyledPopoverContentContainer, { ref: mergeRefs(B2, d11), ...A3($3ef42575df84b30b$export$9d1611c77c2fe9282(J2, G3, H2, Q, L2), z3), as: D3, className: clsx_default("nextui-popover-content-container", y3), disableAnimation: E2, isFocusVisible: M2, isPositioned: k6, children: [o($86ea4cb521eb2e37$export$2317d149ed6f78c4, { onDismiss: V2 }), o(StyledPopoverContent, { className: "nextui-popover-content", children: g4 }), o($86ea4cb521eb2e37$export$2317d149ed6f78c4, { onDismiss: V2 })] });
  return o(k, { children: o($9bf71ea28793e738$export$20e40289641fbbb62, { restoreFocus: true, children: o(css_transition_default, { ...X, children: Y2 }) }) });
});
__DEV__ && (g2.displayName = "NextUI.PopoverContent"), g2.toString = () => ".nextui-popover-content";
var popover_content_default = g2;

// node_modules/@nextui-org/react/esm/popover/index.js
popover_default.Content = popover_content_default, popover_default.Trigger = popover_trigger_default;
var popover_default2 = popover_default;

// node_modules/@nextui-org/react/esm/dropdown/base/dropdown-item-base.js
var o12 = $c1d7fb2ec91bae71$export$6d08773d2e66f8f2;
o12.toString = () => ".nextui-dropdown-item-base";
var dropdown_item_base_default = o12;

// node_modules/@nextui-org/react/esm/dropdown/dropdown-trigger.js
init_compat_module();

// node_modules/@nextui-org/react/esm/dropdown/dropdown-context.js
var [DropdownProvider, useDropdownContext] = createContext({ name: "DropdownContext", errorMessage: "useDropdownContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Dropdown />`" });

// node_modules/@nextui-org/react/esm/dropdown/dropdown-trigger.js
var n13 = Cn.forwardRef((r14, t9) => {
  const { children: n15, ...p7 } = r14, { getMenuTriggerProps: m13 } = useDropdownContext();
  return o(popover_default2.Trigger, { ...m13(p7), children: n15 });
});
__DEV__ && (n13.displayName = "NextUI.DropdownTrigger"), n13.toString = () => ".nextui-dropdown-trigger";
var dropdown_trigger_default = n13;

// node_modules/@nextui-org/react/esm/dropdown/dropdown-menu.js
init_compat_module();

// node_modules/@react-aria/menu/dist/module.js
function $parcel$interopDefault4(a13) {
  return a13 && a13.__esModule ? a13.default : a13;
}
var $9bdd31893c9700c3$exports = {};
var $c0398ad35c3639b7$exports = {};
$c0398ad35c3639b7$exports = {
  "longPressMessage": `اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة`
};
var $7af657c4165927c3$exports = {};
$7af657c4165927c3$exports = {
  "longPressMessage": `Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто`
};
var $d95d4da6d531ab81$exports = {};
$d95d4da6d531ab81$exports = {
  "longPressMessage": `Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku`
};
var $24ebda9c775dca17$exports = {};
$24ebda9c775dca17$exports = {
  "longPressMessage": `Langt tryk eller tryk på Alt + pil ned for at åbne menuen`
};
var $743e0dfca6cab1e9$exports = {};
$743e0dfca6cab1e9$exports = {
  "longPressMessage": `Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen`
};
var $a2f41026e05f1c84$exports = {};
$a2f41026e05f1c84$exports = {
  "longPressMessage": `Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού`
};
var $43b800e97c901737$exports = {};
$43b800e97c901737$exports = {
  "longPressMessage": `Long press or press Alt + ArrowDown to open menu`
};
var $442f5f6ac211e29f$exports = {};
$442f5f6ac211e29f$exports = {
  "longPressMessage": `Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú`
};
var $dff280acfeb2d8ac$exports = {};
$dff280acfeb2d8ac$exports = {
  "longPressMessage": `Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool`
};
var $51608325613944d7$exports = {};
$51608325613944d7$exports = {
  "longPressMessage": `Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli`
};
var $c4a1b1eabeaa87be$exports = {};
$c4a1b1eabeaa87be$exports = {
  "longPressMessage": `Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.`
};
var $8c74815cdee18d1b$exports = {};
$8c74815cdee18d1b$exports = {
  "longPressMessage": `לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט`
};
var $fd0e9ef6a7fe0ec9$exports = {};
$fd0e9ef6a7fe0ec9$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika`
};
var $a89a74a39eba465a$exports = {};
$a89a74a39eba465a$exports = {
  "longPressMessage": `Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához`
};
var $edc7c66594a0ae8a$exports = {};
$edc7c66594a0ae8a$exports = {
  "longPressMessage": `Premere a lungo o premere Alt + Freccia giù per aprire il menu`
};
var $f1ab51510712db52$exports = {};
$f1ab51510712db52$exports = {
  "longPressMessage": `長押しまたは Alt+下矢印キーでメニューを開く`
};
var $f9b672d9b82fa3d6$exports = {};
$f9b672d9b82fa3d6$exports = {
  "longPressMessage": `길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기`
};
var $a385f3910feda499$exports = {};
$a385f3910feda499$exports = {
  "longPressMessage": `Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.`
};
var $4f1bde932c441789$exports = {};
$4f1bde932c441789$exports = {
  "longPressMessage": `Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa`
};
var $914a51a8a594d5be$exports = {};
$914a51a8a594d5be$exports = {
  "longPressMessage": `Langt trykk eller trykk Alt + PilNed for å åpne menyen`
};
var $89aaf803103bb500$exports = {};
$89aaf803103bb500$exports = {
  "longPressMessage": `Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen`
};
var $c685891476dbaaca$exports = {};
$c685891476dbaaca$exports = {
  "longPressMessage": `Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu`
};
var $885879b9b10c2959$exports = {};
$885879b9b10c2959$exports = {
  "longPressMessage": `Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu`
};
var $6b39616688a51692$exports = {};
$6b39616688a51692$exports = {
  "longPressMessage": `Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu`
};
var $f26362aed63f47e2$exports = {};
$f26362aed63f47e2$exports = {
  "longPressMessage": `Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul`
};
var $06cbade644558bf0$exports = {};
$06cbade644558bf0$exports = {
  "longPressMessage": `Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню`
};
var $0a391ff68f9d59b1$exports = {};
$0a391ff68f9d59b1$exports = {
  "longPressMessage": `Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol`
};
var $8193cf0e649c7928$exports = {};
$8193cf0e649c7928$exports = {
  "longPressMessage": `Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol`
};
var $f398debcce5a5c55$exports = {};
$f398debcce5a5c55$exports = {
  "longPressMessage": `Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni`
};
var $9e9fef000aa4c013$exports = {};
$9e9fef000aa4c013$exports = {
  "longPressMessage": `Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn`
};
var $c016c8183bbe3d68$exports = {};
$c016c8183bbe3d68$exports = {
  "longPressMessage": `Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın`
};
var $ca4f6c8462244e62$exports = {};
$ca4f6c8462244e62$exports = {
  "longPressMessage": `Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню`
};
var $2d9960c02ccac927$exports = {};
$2d9960c02ccac927$exports = {
  "longPressMessage": `长按或按 Alt + 向下方向键以打开菜单`
};
var $f1b682a4c8c5631c$exports = {};
$f1b682a4c8c5631c$exports = {
  "longPressMessage": `長按或按 Alt+向下鍵以開啟功能表`
};
$9bdd31893c9700c3$exports = {
  "ar-AE": $c0398ad35c3639b7$exports,
  "bg-BG": $7af657c4165927c3$exports,
  "cs-CZ": $d95d4da6d531ab81$exports,
  "da-DK": $24ebda9c775dca17$exports,
  "de-DE": $743e0dfca6cab1e9$exports,
  "el-GR": $a2f41026e05f1c84$exports,
  "en-US": $43b800e97c901737$exports,
  "es-ES": $442f5f6ac211e29f$exports,
  "et-EE": $dff280acfeb2d8ac$exports,
  "fi-FI": $51608325613944d7$exports,
  "fr-FR": $c4a1b1eabeaa87be$exports,
  "he-IL": $8c74815cdee18d1b$exports,
  "hr-HR": $fd0e9ef6a7fe0ec9$exports,
  "hu-HU": $a89a74a39eba465a$exports,
  "it-IT": $edc7c66594a0ae8a$exports,
  "ja-JP": $f1ab51510712db52$exports,
  "ko-KR": $f9b672d9b82fa3d6$exports,
  "lt-LT": $a385f3910feda499$exports,
  "lv-LV": $4f1bde932c441789$exports,
  "nb-NO": $914a51a8a594d5be$exports,
  "nl-NL": $89aaf803103bb500$exports,
  "pl-PL": $c685891476dbaaca$exports,
  "pt-BR": $885879b9b10c2959$exports,
  "pt-PT": $6b39616688a51692$exports,
  "ro-RO": $f26362aed63f47e2$exports,
  "ru-RU": $06cbade644558bf0$exports,
  "sk-SK": $0a391ff68f9d59b1$exports,
  "sl-SI": $8193cf0e649c7928$exports,
  "sr-SP": $f398debcce5a5c55$exports,
  "sv-SE": $9e9fef000aa4c013$exports,
  "tr-TR": $c016c8183bbe3d68$exports,
  "uk-UA": $ca4f6c8462244e62$exports,
  "zh-CN": $2d9960c02ccac927$exports,
  "zh-TW": $f1b682a4c8c5631c$exports
};
function $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {
  let { type = "menu", isDisabled, trigger = "press" } = props;
  let menuTriggerId = $bdb11010cef70236$export$f680877a34711e372();
  let { triggerProps, overlayProps } = $628037886ba31236$export$f9d5c8beee7d008d({
    type
  }, state, ref);
  let onKeyDown = (e15) => {
    if (isDisabled)
      return;
    if (trigger === "longPress" && !e15.altKey)
      return;
    if (ref && ref.current)
      switch (e15.key) {
        case "Enter":
        case " ":
          if (trigger === "longPress")
            return;
        case "ArrowDown":
          if (!("continuePropagation" in e15))
            e15.stopPropagation();
          e15.preventDefault();
          state.toggle("first");
          break;
        case "ArrowUp":
          if (!("continuePropagation" in e15))
            e15.stopPropagation();
          e15.preventDefault();
          state.toggle("last");
          break;
      }
  };
  let stringFormatter = $fca6afa0e843324b$export$f12b703ca79dfbb1($parcel$interopDefault4($9bdd31893c9700c3$exports));
  let { longPressProps } = $8a26561d2877236e$export$c24ed0104d07eab9({
    isDisabled: isDisabled || trigger !== "longPress",
    accessibilityDescription: stringFormatter.format("longPressMessage"),
    onLongPressStart() {
      state.close();
    },
    onLongPress() {
      state.open("first");
    }
  });
  let pressProps = {
    onPressStart(e15) {
      if (e15.pointerType !== "touch" && e15.pointerType !== "keyboard" && !isDisabled)
        state.toggle(e15.pointerType === "virtual" ? "first" : null);
    },
    onPress(e15) {
      if (e15.pointerType === "touch" && !isDisabled)
        state.toggle();
    }
  };
  delete triggerProps.onPress;
  return {
    menuTriggerProps: {
      ...triggerProps,
      ...trigger === "press" ? pressProps : longPressProps,
      id: menuTriggerId,
      onKeyDown
    },
    menuProps: {
      ...overlayProps,
      "aria-labelledby": menuTriggerId,
      autoFocus: state.focusStrategy,
      onClose: state.close
    }
  };
}
var $d5336fe17ce95402$export$6f49b4016bfc8d56 = /* @__PURE__ */ new WeakMap();
function $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {
  let { shouldFocusWrap = true, ...otherProps } = props;
  if (!props["aria-label"] && !props["aria-labelledby"])
    console.warn("An aria-label or aria-labelledby prop is required for accessibility.");
  let domProps = $65484d02dcb7eb3e$export$457c3d6518dd4c6f(props, {
    labelable: true
  });
  let { listProps } = $982254629710d113$export$b95089534ab7c1fd({
    ...otherProps,
    ref,
    selectionManager: state.selectionManager,
    collection: state.collection,
    disabledKeys: state.disabledKeys,
    shouldFocusWrap
  });
  $d5336fe17ce95402$export$6f49b4016bfc8d56.set(state, {
    onClose: props.onClose,
    onAction: props.onAction
  });
  return {
    menuProps: $3ef42575df84b30b$export$9d1611c77c2fe9282(domProps, {
      role: "menu",
      ...listProps
    })
  };
}
function $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {
  let { key, closeOnSelect, isVirtualized } = props;
  var _isDisabled;
  let isDisabled = (_isDisabled = props.isDisabled) !== null && _isDisabled !== void 0 ? _isDisabled : state.disabledKeys.has(key);
  var _isSelected;
  let isSelected = (_isSelected = props.isSelected) !== null && _isSelected !== void 0 ? _isSelected : state.selectionManager.isSelected(key);
  let isFocused = state.selectionManager.focusedKey === key;
  let data = $d5336fe17ce95402$export$6f49b4016bfc8d56.get(state);
  let onClose = props.onClose || data.onClose;
  let onAction = props.onAction || data.onAction;
  let role = "menuitem";
  if (state.selectionManager.selectionMode === "single")
    role = "menuitemradio";
  else if (state.selectionManager.selectionMode === "multiple")
    role = "menuitemcheckbox";
  let labelId = $bdb11010cef70236$export$b4cc09c592e8fdb8();
  let descriptionId = $bdb11010cef70236$export$b4cc09c592e8fdb8();
  let keyboardId = $bdb11010cef70236$export$b4cc09c592e8fdb8();
  let ariaProps = {
    "aria-disabled": isDisabled,
    role,
    "aria-label": props["aria-label"],
    "aria-labelledby": labelId,
    "aria-describedby": [
      descriptionId,
      keyboardId
    ].filter(Boolean).join(" ") || void 0
  };
  if (state.selectionManager.selectionMode !== "none")
    ariaProps["aria-checked"] = isSelected;
  if (isVirtualized) {
    ariaProps["aria-posinset"] = state.collection.getItem(key).index;
    ariaProps["aria-setsize"] = $453cc9f0df89c0a5$export$77d5aafae4e095b2(state.collection);
  }
  let onKeyDown = (e15) => {
    if (e15.repeat)
      return;
    switch (e15.key) {
      case " ":
        if (!isDisabled && state.selectionManager.selectionMode === "none" && closeOnSelect !== false && onClose)
          onClose();
        break;
      case "Enter":
        if (!isDisabled && closeOnSelect !== false && onClose)
          onClose();
        break;
    }
  };
  let onPressStart = (e15) => {
    if (e15.pointerType === "keyboard" && onAction)
      onAction(key);
  };
  let onPressUp = (e15) => {
    if (e15.pointerType !== "keyboard") {
      if (onAction)
        onAction(key);
      if (onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== "multiple"))
        onClose();
    }
  };
  let { itemProps } = $880e95eb8b93ba9a$export$ecf600387e221c37({
    selectionManager: state.selectionManager,
    key,
    ref,
    shouldSelectOnPressUp: true,
    allowsDifferentPressOrigin: true
  });
  let { pressProps, isPressed } = $f6c31cce2adf654f$export$45712eceda6fad212({
    onPressStart,
    onPressUp,
    isDisabled
  });
  let { hoverProps } = $6179b936705e76d3$export$ae780daf29e6d456({
    isDisabled,
    onHoverStart() {
      if (!$507fabe10e71c6fb$export$b9b3dfddab17db27()) {
        state.selectionManager.setFocused(true);
        state.selectionManager.setFocusedKey(key);
      }
    }
  });
  return {
    menuItemProps: {
      ...ariaProps,
      ...$3ef42575df84b30b$export$9d1611c77c2fe9282(itemProps, pressProps, hoverProps, {
        onKeyDown
      })
    },
    labelProps: {
      id: labelId
    },
    descriptionProps: {
      id: descriptionId
    },
    keyboardShortcutProps: {
      id: keyboardId
    },
    isFocused,
    isSelected,
    isPressed,
    isDisabled
  };
}
function $3e5eb2498db5b506$export$73f7a44322579622(props) {
  let { heading, "aria-label": ariaLabel } = props;
  let headingId = $bdb11010cef70236$export$f680877a34711e372();
  return {
    itemProps: {
      role: "presentation"
    },
    headingProps: heading ? {
      // Techincally, menus cannot contain headings according to ARIA.
      // We hide the heading from assistive technology, and only use it
      // as a label for the nested group.
      id: headingId,
      "aria-hidden": true
    } : {},
    groupProps: {
      role: "group",
      "aria-label": ariaLabel,
      "aria-labelledby": heading ? headingId : void 0
    }
  };
}

// node_modules/@react-stately/tree/dist/module.js
init_compat_module();
var tmp2 = Symbol.iterator;
var $05ca4cd7c4a5a999$export$863faf230ee2118a = class {
  *[tmp2]() {
    yield* this.iterable;
  }
  get size() {
    return this.keyMap.size;
  }
  getKeys() {
    return this.keyMap.keys();
  }
  getKeyBefore(key) {
    let node = this.keyMap.get(key);
    return node ? node.prevKey : null;
  }
  getKeyAfter(key) {
    let node = this.keyMap.get(key);
    return node ? node.nextKey : null;
  }
  getFirstKey() {
    return this.firstKey;
  }
  getLastKey() {
    return this.lastKey;
  }
  getItem(key) {
    return this.keyMap.get(key);
  }
  at(idx) {
    const keys = [
      ...this.getKeys()
    ];
    return this.getItem(keys[idx]);
  }
  constructor(nodes, { expandedKeys } = {}) {
    this.keyMap = /* @__PURE__ */ new Map();
    this.iterable = nodes;
    expandedKeys = expandedKeys || /* @__PURE__ */ new Set();
    let visit = (node) => {
      this.keyMap.set(node.key, node);
      if (node.childNodes && (node.type === "section" || expandedKeys.has(node.key)))
        for (let child of node.childNodes)
          visit(child);
    };
    for (let node2 of nodes)
      visit(node2);
    let last;
    let index = 0;
    for (let [key, node1] of this.keyMap) {
      if (last) {
        last.nextKey = key;
        node1.prevKey = last.key;
      } else {
        this.firstKey = key;
        node1.prevKey = void 0;
      }
      if (node1.type === "item")
        node1.index = index++;
      last = node1;
      last.nextKey = void 0;
    }
    this.lastKey = last === null || last === void 0 ? void 0 : last.key;
  }
};
function $875d6693e12af071$export$728d6ba534403756(props) {
  let [expandedKeys, setExpandedKeys] = $458b0a5536c1a7cf$export$40bfa8c7b0832715(props.expandedKeys ? new Set(props.expandedKeys) : void 0, props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : /* @__PURE__ */ new Set(), props.onExpandedChange);
  let selectionState = $7af3f5b51489e0b5$export$253fe78d46329472(props);
  let disabledKeys = F(
    () => props.disabledKeys ? new Set(props.disabledKeys) : /* @__PURE__ */ new Set(),
    [
      props.disabledKeys
    ]
  );
  let tree = $7613b1592d41b092$export$6cd28814d92fa9c9(
    props,
    (nodes) => new $05ca4cd7c4a5a999$export$863faf230ee2118a(nodes, {
      expandedKeys
    }),
    null,
    [
      expandedKeys
    ]
  );
  p(() => {
    if (selectionState.focusedKey != null && !tree.getItem(selectionState.focusedKey))
      selectionState.setFocusedKey(null);
  }, [
    tree,
    selectionState.focusedKey
  ]);
  let onToggle = (key) => {
    setExpandedKeys($875d6693e12af071$var$toggleKey(expandedKeys, key));
  };
  return {
    collection: tree,
    expandedKeys,
    disabledKeys,
    toggleKey: onToggle,
    selectionManager: new $d496c0a20b6e58ec$export$6c8a5aaad13c9852(tree, selectionState)
  };
}
function $875d6693e12af071$var$toggleKey(set, key) {
  let res = new Set(set);
  if (res.has(key))
    res.delete(key);
  else
    res.add(key);
  return res;
}

// node_modules/@nextui-org/react/esm/dropdown/dropdown-section.js
init_compat_module();

// node_modules/@nextui-org/react/esm/dropdown/dropdown.styles.js
var StyledDropdownMenu = styled("ul", { $$dropdownItemHeight: "$space$13", $$dropdownMenuPadding: "$space$4", $$dropdownMenuWidth: "250px", $$dropdownMenuMinWidth: "250px", listStyle: "none", position: "relative", maxWidth: "$$dropdownMenuWidth", minWidth: "$$dropdownMenuMinWidth", width: "100%", p: "$$dropdownMenuPadding", m: 0, outline: "none" });
var StyledDropdownItemIconWrapper = styled("span", { dflex: "center", flexShrink: 0, mr: "$4" });
var StyledDropdownItemKbd = styled("kbd", { opacity: 0.8, ml: "$4", mr: 0, dflex: "center", color: "$$dropdownItemKeyboardColor", fontSize: "$xs", fontFamily: "$sans", boxShadow: "none", bg: "transparent", transition: "border 0.12s ease 0s" });
var StyledDropdownItemContentWrapper = styled("div", { d: "flex", flex: "1 1 0%", flexDirection: "column", alignItems: "flex-start", lineHeight: 1.2 });
var StyledDropdownItemContent = styled("span", { flex: "1 1 0%" });
var StyledDropdownItemDescription = styled("span", { fontSize: "$xs", color: "$$dropdownItemDescriptionColor", truncateText: "calc($$dropdownMenuWidth * 0.9)", transition: "color 0.12s ease 0s", variants: { hasIcon: { true: { truncateText: "calc($$dropdownMenuWidth * 0.7)" } }, hasCommand: { true: { truncateText: "calc($$dropdownMenuWidth * 0.7)" } } }, compoundVariants: [{ hasIcon: true, hasCommand: true, css: { truncateText: "calc($$dropdownMenuWidth * 0.6)" } }] });
var StyledDropdownItem = styled("li", { $$dropdownItemPressedScale: 0.97, $$dropdownItemTextColor: "$colors$text", $$dropdownItemBorderRadius: "$radii$sm", $$dropdownItemKeyboardColor: "$colors$accents8", $$dropdownItemDescriptionColor: "$colors$accents8", dflex: "center", outline: "none", cursor: "pointer", justifyContent: "space-between", bg: "transparent", position: "relative", height: "$$dropdownItemHeight", px: "$6", br: "$$dropdownItemBorderRadius", color: "$$dropdownItemTextColor", mb: 0, transition: "$dropdownItem", transform: "translateZ(0)", backfaceVisibility: "hidden", $$dropdownItemShadow: "$colors$primaryShadow", "@motion": { transition: "none", [`& ${StyledDropdownItemKbd}`]: { transition: "none" }, [`& ${StyledDropdownItemDescription}`]: { transition: "none" } }, variants: { color: { default: { $$dropdownItemHoverBackground: "$colors$neutralLight", $$dropdownItemHoverTextColor: "$colors$neutralLightContrast", $$dropdownItemActiveBackground: "$colors$neutralLightActive", $$dropdownItemSolidHoverBackground: "$colors$neutral", $$dropdownItemSolidHoverTextColor: "$colors$neutralSolidContrast", $$dropdownItemShadow: "$colors$neutralShadow", $$dropdownItemHoverBorderColor: "$colors$neutralBorder" }, primary: { $$dropdownItemHoverBackground: "$colors$primaryLight", $$dropdownItemHoverTextColor: "$colors$primaryLightContrast", $$dropdownItemActiveBackground: "$colors$primaryLightActive", $$dropdownItemSolidHoverBackground: "$colors$primary", $$dropdownItemSolidHoverTextColor: "$colors$primarySolidContrast", $$dropdownItemShadow: "$colors$primaryShadow", $$dropdownItemHoverBorderColor: "$colors$primaryBorder" }, secondary: { $$dropdownItemHoverBackground: "$colors$secondaryLight", $$dropdownItemHoverTextColor: "$colors$secondaryLightContrast", $$dropdownItemActiveBackground: "$colors$secondaryLightActive", $$dropdownItemSolidHoverBackground: "$colors$secondary", $$dropdownItemSolidHoverTextColor: "$colors$secondarySolidContrast", $$dropdownItemShadow: "$colors$secondaryShadow", $$dropdownItemHoverBorderColor: "$colors$secondaryBorder" }, success: { $$dropdownItemHoverBackground: "$colors$successLight", $$dropdownItemHoverTextColor: "$colors$successLightContrast", $$dropdownItemActiveBackground: "$colors$successLightActive", $$dropdownItemSolidHoverBackground: "$colors$success", $$dropdownItemSolidHoverTextColor: "$colors$successSolidContrast", $$dropdownItemShadow: "$colors$successShadow", $$dropdownItemHoverBorderColor: "$colors$successBorder" }, warning: { $$dropdownItemHoverBackground: "$colors$warningLight", $$dropdownItemHoverTextColor: "$colors$warningLightContrast", $$dropdownItemActiveBackground: "$colors$warningLightActive", $$dropdownItemSolidHoverBackground: "$colors$warning", $$dropdownItemSolidHoverTextColor: "$colors$warningSolidContrast", $$dropdownItemShadow: "$colors$warningShadow", $$dropdownItemHoverBorderColor: "$colors$warningBorder" }, error: { $$dropdownItemHoverBackground: "$colors$errorLight", $$dropdownItemHoverTextColor: "$colors$errorLightContrast", $$dropdownItemActiveBackground: "$colors$errorLightActive", $$dropdownItemSolidHoverBackground: "$colors$error", $$dropdownItemSolidHoverTextColor: "$colors$errorSolidContrast", $$dropdownItemShadow: "$colors$errorShadow", $$dropdownItemHoverBorderColor: "$colors$errorBorder" } }, textColor: { default: {}, primary: { $$dropdownItemTextColor: "$colors$primaryLightContrast", $$dropdownItemHoverTextColor: "$colors$primaryLightContrast" }, secondary: { $$dropdownItemTextColor: "$colors$secondaryLightContrast", $$dropdownItemHoverTextColor: "$colors$secondaryLightContrast" }, success: { $$dropdownItemTextColor: "$colors$successLightContrast", $$dropdownItemHoverTextColor: "$colors$successLightContrast" }, warning: { $$dropdownItemTextColor: "$colors$warningLightContrast", $$dropdownItemHoverTextColor: "$colors$warningLightContrast" }, error: { $$dropdownItemTextColor: "$colors$errorLightContrast", $$dropdownItemHoverTextColor: "$colors$errorLightContrast" } }, variant: { flat: { true: {} }, light: { true: {} }, solid: { true: {} }, shadow: { true: {} } }, isPressed: { true: { bg: "$$dropdownItemActiveBackground" } }, isFocused: { true: { bg: "$$dropdownItemHoverBackground", color: "$$dropdownItemHoverTextColor", zIndex: "$1", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemHoverTextColor", borderColor: "$$dropdownItemHoverBorderColor" }, [`& ${StyledDropdownItemDescription}`]: { color: "currentColor" } } }, isHovered: { true: { bg: "$$dropdownItemHoverBackground", color: "$$dropdownItemHoverTextColor", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemHoverTextColor", borderColor: "$$dropdownItemHoverBorderColor" }, [`& ${StyledDropdownItemDescription}`]: { color: "currentColor" } } }, shouldShowOutline: { true: { outline: "solid 2px $$dropdownItemActiveBackground" } }, isSelected: { true: {} }, isSelectable: { true: {} }, isDisabled: { true: { color: "$accents5", cursor: "default" } }, withDescription: { true: { height: "calc($$dropdownItemHeight * 1.2)" } }, withDivider: { true: { mt: "$6", "&:before": { content: '""', position: "absolute", top: "-$3", left: "-$$dropdownMenuPadding", right: "-$$dropdownMenuPadding", height: "$$dropdownItemBorderWeight", bg: "$border" } } }, dividerWeight: { light: { $$dropdownItemBorderWeight: "$borderWeights$light" }, normal: { $$dropdownItemBorderWeight: "$borderWeights$normal" }, bold: { $$dropdownItemBorderWeight: "$borderWeights$bold" }, extrabold: { $$dropdownItemBorderWeight: "$borderWeights$extrabold" }, black: { $$dropdownItemBorderWeight: "$borderWeights$black" } }, showFullDescription: { true: { [`& ${StyledDropdownItemDescription}`]: { mt: "$2", overflow: "visible", textOverflow: "visible", whiteSpace: "normal" } } }, disableAnimation: { true: { transition: "none", [`& ${StyledDropdownItemKbd}`]: { transition: "none" }, [`& ${StyledDropdownItemDescription}`]: { transition: "none" } } } }, compoundVariants: [{ isPressed: true, disableAnimation: false, css: { transform: "scale($$dropdownItemPressedScale)" } }, { isHovered: true, variant: "light", css: { bg: "transparent" } }, { isFocused: true, variant: "light", css: { bg: "transparent" } }, { isHovered: true, variant: "solid", css: { bg: "$$dropdownItemSolidHoverBackground", color: "$$dropdownItemSolidHoverTextColor", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemSolidHoverTextColor" } } }, { isFocused: true, variant: "solid", css: { bg: "$$dropdownItemSolidHoverBackground", color: "$$dropdownItemSolidHoverTextColor", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemSolidHoverTextColor" } } }, { isHovered: true, variant: "shadow", css: { bg: "$$dropdownItemSolidHoverBackground", color: "$$dropdownItemSolidHoverTextColor", boxShadow: "0 3px 10px 0 $$dropdownItemShadow", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemSolidHoverTextColor" } } }, { isFocused: true, variant: "shadow", css: { bg: "$$dropdownItemSolidHoverBackground", color: "$$dropdownItemSolidHoverTextColor", boxShadow: "0 3px 10px 0 $$dropdownItemShadow", [`& ${StyledDropdownItemKbd}`]: { color: "$$dropdownItemSolidHoverTextColor" } } }, { variant: "flat", color: "default", css: { $$dropdownItemHoverTextColor: "$colors$foreground" } }], defaultVariants: { color: "default", textColor: "default", dividerWeight: "light", variant: "flat" } }, cssFocusVisible);
var StyledDropdownSectionWrapper = styled("li", { mb: 0 });
var StyledDropdownSection = styled("ul", { m: 0, p: 0, listStyle: "none" });
var StyledDropdownSectionTitle = styled("span", { fontWeight: "$medium", fontSize: "$xs", padding: "0 $4", color: "$accents8" });

// node_modules/@nextui-org/react/esm/dropdown/dropdown-item.js
init_compat_module();

// node_modules/@nextui-org/react/esm/utils/checkmark.js
init_compat_module();
var stroke = keyframes({ "100%": { strokeDashoffset: 0 } });
var a12 = styled("svg", { d: "block", path: { transformOrigin: "50% 50%", strokeDasharray: 48, strokeDashoffset: 48, animation: `${stroke} .25s cubic-bezier(0.650, 0.000, 0.450, 1.000) forwards` } });
var c12 = (t9) => {
  const { width: r14 = 24, height: e15 = 24, size: o14, strokeWidth: c15 = 3, fill: m13 = "currentColor", css: h4, className: n15 } = t9;
  return o(a12, { className: clsx_default("nextui-checkmark", n15), css: h4, height: o14 || e15, role: "img", viewBox: "0 0 52 52", width: o14 || r14, xmlns: "http://www.w3.org/2000/svg", children: o("path", { d: "M14.1 27.2l7.1 7.2 16.7-16.8", fill: "none", stroke: m13, strokeWidth: c15 }) });
};
__DEV__ && (c12.displayName = "NextUI.Checkmark"), c12.toString = () => ".nextui-checkmark";
var checkmark_default = c12;

// node_modules/@nextui-org/react/esm/dropdown/dropdown-item.js
var D2 = ({ as: e15, css: p7, item: D3, state: N5, color: y3, icon: P3, command: S2, description: g4, textColor: C4, variant: F3, autoFocus: k6, isVirtualized: j2, withDivider: A3, dividerWeight: I2, showFullDescription: M2, className: V2, onAction: W2 }) => {
  const { onClose: O3, closeOnSelect: z3, disableAnimation: H2, borderWeight: K } = useDropdownContext(), { rendered: U2, key: $2 } = D3, q3 = N5.selectionManager.isSelected($2), B2 = N5.selectionManager.focusedKey === D3.key, E2 = N5.disabledKeys.has($2), G3 = _(null), { pressProps: J2, isPressed: L2 } = $f6c31cce2adf654f$export$45712eceda6fad212({ ref: G3, isDisabled: E2 }), { isFocusVisible: Q, focusProps: R3 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: k6 }), { hoverProps: T3, isHovered: X } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: E2 }), Y2 = "none" !== N5.selectionManager.selectionMode && !E2, { menuItemProps: Z, labelProps: _2, descriptionProps: ee, keyboardShortcutProps: oe } = $a2e5df62f93c7633$export$9d32628fc2aea7da({ key: $2, onClose: O3, isSelected: q3, isDisabled: E2, "aria-label": D3["aria-label"], closeOnSelect: z3, isVirtualized: j2, onAction: W2 }, N5, G3), se = F(() => X ? "hovered" : q3 ? "selected" : L2 ? "pressed" : E2 ? "disabled" : "ready", [q3, E2, X, L2]), ie = F(() => D3.props.textColor ? D3.props.textColor : D3.props.color && "default" === C4 ? D3.props.color : C4, [C4, D3.props.color, D3.props.textColor]), re = F(() => g4 || D3.props.description, [g4, D3.props.description]), te = F(() => S2 || D3.props.command, [S2, D3.props.command]), ae = F(() => P3 || D3.props.icon, [P3, D3.props.icon]);
  return o(StyledDropdownItem, { ref: G3, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(Z, T3, J2, R3), as: D3.props.as || e15, className: clsx_default("nextui-dropdown-item", { "is-disabled": E2, "is-selected": q3, "is-selectable": Y2, "is-hovered": X, "is-focused": B2, "is-pressed": L2 }, V2, D3.props.className), color: D3.props.color || y3, css: { ...$3ef42575df84b30b$export$9d1611c77c2fe9282(p7, D3.props.css) }, "data-state": se, disableAnimation: H2, dividerWeight: I2 || D3.props.dividerWeight || K, isDisabled: E2, isFocusVisible: Q, isFocused: B2, isHovered: X, isPressed: L2, isSelectable: Y2, isSelected: q3, shouldShowOutline: Q && "shadow" === F3, showFullDescription: M2 || D3.props.showFullDescription, textColor: ie, variant: D3.props.variant || F3, withDescription: !!re, withDivider: A3 || D3.props.withDivider, children: [ae && o(StyledDropdownItemIconWrapper, { className: "nextui-dropdown-item-icon-wrapper", children: ae }), re ? o(StyledDropdownItemContentWrapper, { children: [o(StyledDropdownItemContent, { className: "nextui-dropdown-item-content", ..._2, children: U2 }), o(StyledDropdownItemDescription, { className: "nextui-dropdown-item-description", hasCommand: !!te, hasIcon: !!ae, ...ee, children: re })] }) : o(StyledDropdownItemContent, { className: "nextui-dropdown-item-content", ..._2, children: U2 }), te && o(StyledDropdownItemKbd, { className: "nextui-dropdown-item-command", ...oe, children: te }), q3 && o(checkmark_default, { css: { ml: "$4" } })] });
};
__DEV__ && (D2.displayName = "NextUI.DropdownItem"), D2.toString = () => ".nextui-dropdown-item";
var dropdown_item_default = D2;

// node_modules/@nextui-org/react/esm/dropdown/dropdown-section.js
var u7 = (o14) => {
  var a13, u9;
  const { item: x8, state: w3, css: f5, as: h4, color: v4, textColor: N5, variant: y3, withDivider: g4 = true, className: j2, onAction: P3 } = o14, { itemProps: b6, headingProps: k6, groupProps: A3 } = $3e5eb2498db5b506$export$73f7a44322579622({ heading: x8.rendered, "aria-label": x8["aria-label"] });
  return o(k, { children: [x8.key !== w3.collection.getFirstKey() && g4 && o(divider_default2, { as: "li", className: "nextui-dropdown-section-divider", css: { my: "$2" } }), o(StyledDropdownSectionWrapper, { ...b6, className: "nextui-dropdown-section-wrapper", children: [x8.rendered && o(StyledDropdownSectionTitle, { ...k6, className: "nextui-dropdown-section-title", children: x8.rendered }), o(StyledDropdownSection, { ...A3, as: (null == (a13 = x8.props) ? void 0 : a13.as) || h4, className: clsx_default("nextui-dropdown-section", j2), css: { ...$3ef42575df84b30b$export$9d1611c77c2fe9282(f5, null == (u9 = x8.props) ? void 0 : u9.css) }, children: [...x8.childNodes].map((r14) => {
    let e15 = o(dropdown_item_default, { color: v4, item: r14, state: w3, textColor: N5, variant: y3, onAction: P3 }, r14.key);
    return r14.wrapper && (e15 = r14.wrapper(e15)), e15;
  }) })] })] });
};
__DEV__ && (u7.displayName = "NextUI.DropdownSection"), u7.toString = () => ".nextui-dropdown-section";
var dropdown_section_default = u7;

// node_modules/@nextui-org/react/esm/dropdown/dropdown-menu.js
var u8 = Cn.forwardRef((o14, s9) => {
  const { as: u9, css: x8, color: w3 = "default", textColor: y3 = "default", variant: C4 = "flat", containerCss: v4, ...A3 } = o14, N5 = useDropdownContext(), h4 = { ...$3ef42575df84b30b$export$9d1611c77c2fe9282(N5, A3) }, j2 = useDOMRef(s9), k6 = $875d6693e12af071$export$728d6ba534403756(h4), { menuProps: g4 } = $d5336fe17ce95402$export$38eaa17faae8f579(h4, k6, j2);
  return useSyncRef(N5, j2), o(popover_default2.Content, { css: v4, children: o(StyledDropdownMenu, { ref: j2, as: u9, className: clsx_default("nextui-dropdown-menu", o14.className), css: x8, ...g4, children: [...k6.collection].map((o15) => {
    if ("section" === o15.type)
      return o(dropdown_section_default, { color: w3, item: o15, state: k6, textColor: y3, variant: C4, onAction: h4.onAction }, o15.key);
    let t9 = o(dropdown_item_default, { color: w3, item: o15, state: k6, textColor: y3, variant: C4, onAction: h4.onAction }, o15.key);
    return o15.wrapper && (t9 = o15.wrapper(t9)), t9;
  }) }) });
});
__DEV__ && (u8.displayName = "NextUI.DropdownMenu"), u8.toString = () => ".nextui-dropdown-menu";
var dropdown_menu_default = u8;

// node_modules/@nextui-org/react/esm/dropdown/dropdown-button.js
init_compat_module();

// node_modules/@nextui-org/react/esm/dropdown/dropdown-icon.js
init_compat_module();
var r13 = ({ fill: t9, size: i13, height: r14, width: e15, ...n15 }) => o("svg", { fill: "none", height: i13 || r14 || 24, viewBox: "0 0 24 24", width: i13 || e15 || 24, xmlns: "http://www.w3.org/2000/svg", ...n15, children: o("path", { d: "M17.9188 8.17969H11.6888H6.07877C5.11877 8.17969 4.63877 9.33969 5.31877 10.0197L10.4988 15.1997C11.3288 16.0297 12.6788 16.0297 13.5088 15.1997L15.4788 13.2297L18.6888 10.0197C19.3588 9.33969 18.8788 8.17969 17.9188 8.17969Z", fill: t9 }) });
__DEV__ && (r13.displayName = "NextUI.DropdownIcon"), r13.toString = () => ".nextui-dropdown-icon";
var dropdown_icon_default = r13;

// node_modules/@nextui-org/react/esm/dropdown/dropdown-button.js
var c13 = Cn.forwardRef((t9, n15) => {
  const { css: c15, children: p7, className: u9, iconRight: l13, iconRightCss: f5, auto: x8 = true, animated: g4, ...h4 } = t9, { disableAnimation: w3 } = useDropdownContext(), b6 = useDOMRef(n15), R3 = F(() => l13 || o(dropdown_icon_default, { fill: "currentColor", size: 14 }), [l13]), N5 = F(() => g4 || !w3, [g4, w3]);
  return o(dropdown_trigger_default, { css: { "& .nextui-button-icon-right, & .nextui-button-text-right": { pointerEvents: "none" }, ...c15 }, children: o(button_default2, { ref: b6, animated: N5, auto: x8, className: clsx_default("nextui-dropdown-button", u9), iconRight: R3, iconRightCss: { mt: "$1", ...f5 }, ...h4, children: p7 }) });
});
__DEV__ && (c13.displayName = "NextUI.DropdownButton"), c13.toString = () => ".nextui-dropdown-button";
var dropdown_button_default = c13;

// node_modules/@nextui-org/react/esm/dropdown/dropdown.js
init_compat_module();

// node_modules/@nextui-org/react/esm/dropdown/use-dropdown.js
init_compat_module();

// node_modules/@react-stately/menu/dist/module.js
init_compat_module();
function $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {
  let overlayTriggerState = $fc909762b330b746$export$61c6a8c84e605fb6(props);
  let [focusStrategy1, setFocusStrategy] = h(null);
  return {
    focusStrategy: focusStrategy1,
    ...overlayTriggerState,
    open(focusStrategy = null) {
      setFocusStrategy(focusStrategy);
      overlayTriggerState.open();
    },
    toggle(focusStrategy = null) {
      setFocusStrategy(focusStrategy);
      overlayTriggerState.toggle();
    }
  };
}

// node_modules/@nextui-org/react/esm/dropdown/use-dropdown.js
function useDropdown(i13 = {}) {
  const { triggerRef: a13, type: l13 = "menu", trigger: u9 = "press", isDisabled: p7 = false, borderWeight: m13, closeOnSelect: c15, disableAnimation: g4 = false, disableTriggerPressedAnimation: f5 = false, isOpen: d11, defaultOpen: b6, onOpenChange: O3, ...P3 } = i13, h4 = _(null), y3 = a13 || h4, C4 = _(null), T3 = _(null), A3 = $a28c903ee9ad8dc5$export$79fefeb1c2091ac3({ ...i13, isOpen: d11, defaultOpen: b6, onOpenChange: O3 }), { menuTriggerProps: R3, menuProps: D3 } = $168583247155ddda$export$dc9c12ed27dd1b49({ type: l13, trigger: u9, isDisabled: p7 }, A3, y3), S2 = T(() => {
    A3.close(), null == P3.onClose || P3.onClose();
  }, [A3.close, P3.onClose]), v4 = T((e15 = {}, r14 = null) => {
    const { css: o14, ...t9 } = null != a13 && a13.current ? $3ef42575df84b30b$export$9d1611c77c2fe9282(R3, e15) : $3ef42575df84b30b$export$9d1611c77c2fe9282(e15, R3);
    return { ref: mergeRefs(h4, r14), css: f5 ? o14 : { '&[aria-haspopup="true"]&[aria-expanded="true"]': { opacity: 0.7, backfaceVisibility: "hidden", transform: "translateZ(0) scale(0.97)" }, ...o14 }, ...t9 };
  }, [h4, a13, R3, f5]);
  return { ...D3, popoverProps: P3, state: A3, ref: C4, onClose: S2, autoFocus: A3.focusStrategy || true, disableAnimation: g4, disableTriggerPressedAnimation: f5, menuRef: C4, borderWeight: m13, menuPopoverRef: T3, menuTriggerRef: y3, closeOnSelect: c15, getMenuTriggerProps: v4 };
}

// node_modules/@nextui-org/react/esm/dropdown/dropdown.js
var m10 = (e15) => {
  const { children: m13, ...p7 } = e15, d11 = useDropdown(p7), [a13, f5] = Cn.Children.toArray(m13);
  return o(DropdownProvider, { value: d11, children: o(popover_default2, { ref: d11.menuPopoverRef, ...d11.popoverProps, borderWeight: d11.borderWeight, disableAnimation: d11.disableAnimation, isOpen: d11.state.isOpen, scrollRef: d11.menuRef, triggerRef: d11.menuTriggerRef, onClose: d11.onClose, children: [a13, f5] }) });
};
__DEV__ && (m10.displayName = "NextUI.Dropdown"), m10.toString = () => ".nextui-dropdown";
var dropdown_default = m10;

// node_modules/@nextui-org/react/esm/dropdown/index.js
dropdown_default.Trigger = dropdown_trigger_default, dropdown_default.Button = dropdown_button_default, dropdown_default.Menu = dropdown_menu_default, dropdown_default.Section = $9fc4852771d079eb$export$6e2c8f0811a474ce, dropdown_default.Item = dropdown_item_base_default;
var dropdown_default2 = dropdown_default;

// node_modules/@nextui-org/react/esm/badge/badge.js
init_compat_module();

// node_modules/@nextui-org/react/esm/badge/badge.animations.js
var pointAnimation = keyframes({ "0%": { opacity: 1 }, "50%": { opacity: "0.4", transform: "scale(0.5)" }, "100%": { opacity: 1 } });
var appearanceInTopRight = keyframes({ "0%": { opacity: 0, transform: "scale(0.2) translate(50%, -50%)" }, "60%": { opacity: 0.75, transform: "scale(1.2) translate(50%, -50%)" }, "100%": { opacity: 1, transform: "scale(1) translate(50%, -50%)" } });
var appearanceOutTopRight = keyframes({ "0%": { opacity: 1, transform: "scale(1) translate(50%, -50%)" }, "100%": { opacity: 0, transform: "scale(0.2) translate(50%, -50%)" } });
var appearanceInTopLeft = keyframes({ "0%": { opacity: 0, transform: "scale(0.2) translate(-50%, -50%)" }, "60%": { opacity: 0.75, transform: "scale(1.2) translate(-50%, -50%)" }, "100%": { opacity: 1, transform: "scale(1) translate(-50%, -50%)" } });
var appearanceOutTopLeft = keyframes({ "0%": { opacity: 1, transform: "scale(1) translate(-50%, -50%)" }, "100%": { opacity: 0, transform: "scale(0.2) translate(-50%, -50%)" } });
var appearanceInBottomRight = keyframes({ "0%": { opacity: 0, transform: "scale(0.2) translate(50%, 50%)" }, "60%": { opacity: 0.75, transform: "scale(1.2) translate(50%, 50%)" }, "100%": { opacity: 1, transform: "scale(1) translate(50%, 50%)" } });
var appearanceOutBottomRight = keyframes({ "0%": { opacity: 1, transform: "scale(1) translate(50%, 50%)" }, "100%": { opacity: 0, transform: "scale(0.2) translate(50%, 50%)" } });
var appearanceInBottomLeft = keyframes({ "0%": { opacity: 0, transform: "scale(0.2) translate(-50%, 50%)" }, "60%": { opacity: 0.75, transform: "scale(1.2) translate(-50%, 50%)" }, "100%": { opacity: 1, transform: "scale(1) translate(-50%, 50%)" } });
var appearanceOutBottomLeft = keyframes({ "0%": { opacity: 1, transform: "scale(1) translate(-50%, 50%)" }, "100%": { opacity: 0, transform: "scale(0.2) translate(-50%, 50%)" } });

// node_modules/@nextui-org/react/esm/badge/badge.styles.js
var StyledBadgeRoot = styled("span", { d: "inline-flex", flexShrink: 0, verticalAlign: "middle", position: "relative", overflow: "visible" });
var StyledBadge = styled("span", { $$badgePlacementHOffset: "0%", $$badgePlacementVOffset: "0%", lineHeight: 1, display: "flex", flexFlow: "row wrap", placeContent: "center", alignItems: "center", boxSizing: "border-box", whiteSpace: "nowrap", bg: "$$badgeBackgroundColor", color: "$$badgeTextColor", fontWeight: "$bold", fontSize: "$$badgeFontSize", p: "$$badgeVPadding $$badgeHPadding", "@motion": { animation: "none", transition: "none", "&.nextui-badge--is-invisible": { animation: "none", transition: "none" } }, variants: { size: { xs: { $$badgeVPadding: "$space$2", $$badgeHPadding: "$space$2", $$badgeFontSize: "0.65rem" }, sm: { $$badgeVPadding: "$space$2", $$badgeHPadding: "$space$3", $$badgeFontSize: "0.73rem" }, md: { $$badgeVPadding: "$space$3", $$badgeHPadding: "$space$4", $$badgeFontSize: "$fontSizes$xs" }, lg: { $$badgeVPadding: "$space$4", $$badgeHPadding: "$space$5", $$badgeFontSize: "$fontSizes$base" }, xl: { $$badgeVPadding: "$space$5", $$badgeHPadding: "$space$6", $$badgeFontSize: "$fontSizes$xl" } }, shape: { circle: {}, rectangle: {} }, asChild: { true: { zIndex: "$2", position: "absolute", lineHeight: 1.5 } }, isOneChar: { true: {} }, color: { default: { $$badgeBackgroundColor: "$colors$neutral", $$badgeTextColor: "$colors$neutralSolidContrast", $$badgeShadowColor: "$colors$neutralShadow" }, primary: { $$badgeBackgroundColor: "$colors$primary", $$badgeTextColor: "$colors$primarySolidContrast", $$badgeShadowColor: "$colors$primaryShadow" }, secondary: { $$badgeBackgroundColor: "$colors$secondary", $$badgeTextColor: "$colors$secondarySolidContrast", $$badgeShadowColor: "$colors$secondaryShadow" }, success: { $$badgeBackgroundColor: "$colors$success", $$badgeTextColor: "$colors$successSolidContrast", $$badgeShadowColor: "$colors$successShadow" }, warning: { $$badgeBackgroundColor: "$colors$warning", $$badgeTextColor: "$colors$warningSolidContrast", $$badgeShadowColor: "$colors$warningShadow" }, error: { $$badgeBackgroundColor: "$colors$error", $$badgeTextColor: "$colors$errorSolidContrast", $$badgeShadowColor: "$colors$errorShadow" } }, enableShadow: { true: { boxShadow: "0 2px 10px 0 $$badgeShadowColor" } }, isSquared: { true: { borderRadius: "calc($$badgeFontSize * 0.45)" }, false: { borderRadius: "$pill" } }, placement: { "top-right": { animation: `${appearanceInTopRight} 0.25s ease-out`, "&.nextui-badge--is-invisible": { opacity: 0, animation: `${appearanceOutTopRight} 0.2s ease-in` } }, "top-left": { animation: `${appearanceInTopLeft} 0.25s ease-out`, "&.nextui-badge--is-invisible": { opacity: 0, animation: `${appearanceOutTopLeft} 0.2s ease-in` } }, "bottom-right": { animation: `${appearanceInBottomRight} 0.25s ease-out`, "&.nextui-badge--is-invisible": { opacity: 0, animation: `${appearanceOutBottomRight} 0.2s ease-in` } }, "bottom-left": { animation: `${appearanceInBottomLeft} 0.25s ease-out`, "&.nextui-badge--is-invisible": { opacity: 0, animation: `${appearanceOutBottomLeft} 0.2s ease-in` } } }, variant: { default: {}, flat: {}, dot: { p: 0, dflex: "center", minSize: "$$badgeFontSize", boxSizing: "border-box" }, points: { p: "calc($$badgeFontSize * 0.4)", boxSizing: "border-box", $$badgePlacementHOffset: "calc($$badgeFontSize * 0.8)" }, bordered: { $$badgeBackgroundColor: "$colors$background", bg: "$background", bw: "$$badgeBorderWeight", borderStyle: "solid", borderColor: "$$badgeTextColor" } }, borderWeight: { light: { $$badgeBorderWeight: "$borderWeights$light" }, normal: { $$badgeBorderWeight: "$borderWeights$normal" }, bold: { $$badgeBorderWeight: "$borderWeights$bold" }, extrabold: { $$badgeBorderWeight: "$borderWeights$extrabold" }, black: { $$badgeBorderWeight: "$borderWeights$black" } }, disableOutline: { true: { border: "2px solid transparent" }, false: { border: "2px solid $colors$background" } }, disableAnimation: { true: { animation: "none", transition: "none", "&.nextui-badge--is-invisible": { animation: "none", transition: "none" } } } }, compoundVariants: [{ variant: "flat", color: "default", css: { $$badgeBackgroundColor: "$colors$neutralLight", $$badgeTextColor: "$colors$neutralLightContrast" } }, { variant: "flat", color: "primary", css: { $$badgeBackgroundColor: "$colors$primaryLight", $$badgeTextColor: "$colors$primaryLightContrast" } }, { variant: "flat", color: "secondary", css: { $$badgeBackgroundColor: "$colors$secondaryLight", $$badgeTextColor: "$colors$secondaryLightContrast" } }, { variant: "flat", color: "success", css: { $$badgeBackgroundColor: "$colors$successLight", $$badgeTextColor: "$colors$successLightContrast" } }, { variant: "flat", color: "warning", css: { $$badgeBackgroundColor: "$colors$warningLight", $$badgeTextColor: "$colors$warningLightContrast" } }, { variant: "flat", color: "error", css: { $$badgeBackgroundColor: "$colors$errorLight", $$badgeTextColor: "$colors$errorLightContrast" } }, { variant: "bordered", color: "default", css: { $$badgeTextColor: "$colors$neutral" } }, { variant: "bordered", color: "primary", css: { $$badgeTextColor: "$colors$primary" } }, { variant: "bordered", color: "secondary", css: { $$badgeTextColor: "$colors$secondary" } }, { variant: "bordered", color: "success", css: { $$badgeTextColor: "$colors$success" } }, { variant: "bordered", color: "warning", css: { $$badgeTextColor: "$colors$warning" } }, { variant: "bordered", color: "error", css: { $$badgeTextColor: "$colors$error" } }, { asChild: true, shape: "rectangle", placement: "top-right", css: { top: "calc(5% + $$badgePlacementVOffset)", right: "calc(5% + $$badgePlacementHOffset)", transform: "scale(1) translate(50%, -50%)", transformOrigin: "100% 0%" } }, { asChild: true, shape: "rectangle", placement: "top-left", css: { top: "calc(5% + $$badgePlacementVOffset)", left: "calc(5% + $$badgePlacementHOffset)", transform: "scale(1) translate(-50%, -50%)", transformOrigin: "0% 0%" } }, { asChild: true, shape: "rectangle", placement: "bottom-right", css: { bottom: "calc(5% + $$badgePlacementVOffset)", right: "calc(5% + $$badgePlacementHOffset)", transform: "scale(1) translate(50%, 50%)", transformOrigin: "100% 100%" } }, { asChild: true, shape: "rectangle", placement: "bottom-left", css: { bottom: "calc(5% + $$badgePlacementVOffset)", left: "calc(5% + $$badgePlacementHOffset)", transform: "scale(1) translate(-50%, 50%)", transformOrigin: "0% 100%" } }, { asChild: true, shape: "circle", placement: "top-right", css: { top: "calc(15% + $$badgePlacementVOffset)", right: "calc(15% + $$badgePlacementHOffset)", transform: "scale(1) translate(50%, -50%)", transformOrigin: "100% 0%" } }, { asChild: true, shape: "circle", placement: "top-left", css: { top: "calc(15% + $$badgePlacementVOffset)", left: "calc(15% + $$badgePlacementHOffset)", transform: "scale(1) translate(-50%, -50%)", transformOrigin: "0% 0%" } }, { asChild: true, shape: "circle", placement: "bottom-right", css: { bottom: "calc(15% + $$badgePlacementVOffset)", right: "calc(15% + $$badgePlacementHOffset)", transform: "scale(1) translate(50%, 50%)", transformOrigin: "100% 100%" } }, { asChild: true, shape: "circle", placement: "bottom-left", css: { bottom: "calc(15% + $$badgePlacementVOffset)", left: "calc(15% + $$badgePlacementHOffset)", transform: "scale(1) translate(-50%, 50%)", transformOrigin: "0% 100%" } }, { variant: "dot", shape: "rectangle", css: { $$badgePlacementHOffset: "calc($$badgeFontSize * 0.2)", $$badgePlacementVOffset: "calc($$badgeFontSize * 0.1)" } }, { isOneChar: true, asChild: true, css: { p: 0, size: "calc($$badgeFontSize + $$badgeHPadding)" } }, { isOneChar: false, asChild: true, css: { $$badgeVPadding: "0px", $$badgeHPadding: "$space$2" } }, { isOneChar: false, asChild: true, size: "md", css: { $$badgeHPadding: "$space$3" } }, { isOneChar: false, asChild: true, size: "lg", css: { $$badgeHPadding: "$space$4" } }, { isOneChar: false, asChild: true, size: "xl", css: { $$badgeHPadding: "$space$5" } }, { disableOutline: true, variant: "bordered", css: { borderColor: "$$badgeTextColor" } }], defaultVariants: { size: "md", color: "default", variant: "default", borderWeight: "normal", placement: "top-right", shape: "rectangle", enableShadow: false, disableOutline: false, isSquared: false } });
var StyledBadgePoints = styled("div", { position: "relative", dflex: "center", "& .nextui-badge-point": { size: "calc($$badgeFontSize * 0.3)", background: "$$badgeTextColor", margin: "0 2px", borderRadius: "$pill", "&:nth-child(1)": { animation: `${pointAnimation} 1.2s ease infinite` }, "&:nth-child(2)": { animation: `${pointAnimation} 1.2s ease infinite 0.4s` }, "&:nth-child(3)": { animation: `${pointAnimation} 1.2s ease infinite 0.8s` } } });

// node_modules/@nextui-org/react/esm/badge/badge.js
var m11 = forwardRef((t9, i13) => {
  const { css: m13, children: p7, content: c15, isInvisible: u9 = false, disableOutline: f5, placement: b6 = "top-right", variant: g4 = "default", verticalOffset: x8, horizontalOffset: $2, disableAnimation: h4 = false, className: N5, ...O3 } = t9, v4 = useDOMRef(i13), y3 = void 0 !== c15 && !!p7, j2 = F(() => {
    var e15;
    return y3 && c15 && "points" !== g4 && "dot" !== g4 ? 1 === (null == (e15 = String(c15)) ? void 0 : e15.length) : !(!p7 || "string" != typeof p7) && 1 === p7.length;
  }, [y3, p7, g4, c15]), P3 = F(() => "dot" === g4 ? null : "points" === g4 ? o(StyledBadgePoints, { className: "nextui-badge-points", children: [o("span", { className: "nextui-badge-point", "data-testid": "badge-point" }), o("span", { className: "nextui-badge-point", "data-testid": "badge-point" }), o("span", { className: "nextui-badge-point", "data-testid": "badge-point" })] }) : y3 ? c15 : p7, [g4, j2, y3, c15, p7]), M2 = F(() => {
    const e15 = "number" == typeof $2, t10 = "number" == typeof x8;
    return x8 && $2 ? { $$badgePlacementHOffset: e15 ? `${$2}px` : $2, $$badgePlacementVOffset: t10 ? `${x8}px` : x8, ...m13 } : x8 ? { $$badgePlacementVOffset: t10 ? `${x8}px` : x8, ...m13 } : $2 ? { $$badgePlacementHOffset: e15 ? `${$2}px` : $2, ...m13 } : m13;
  }, [x8, $2, m13]);
  return o(StyledBadgeRoot, { ref: v4, className: clsx_default("nextui-badge-root", N5), children: [y3 && p7, o(StyledBadge, { asChild: y3, className: clsx_default("nextui-badge", { "nextui-badge--is-invisible": u9 }), css: M2, disableAnimation: h4 || !y3, disableOutline: "bordered" === g4 || f5, isOneChar: j2, placement: b6, variant: g4, ...O3, children: P3 })] });
});
__DEV__ && (m11.displayName = "NextUI.Badge"), m11.toString = () => ".nextui-badge";
var badge_default = m11;

// node_modules/@nextui-org/react/esm/badge/index.js
var badge_default2 = badge_default;

// node_modules/@nextui-org/react/esm/navbar/navbar-brand.js
init_compat_module();

// node_modules/@nextui-org/react/esm/navbar/navbar.styles.js
var o13 = { default: { $$navbarItemActiveColor: "$colors$link", $$navbarItemHighlightBackgroundColor: "$colors$primaryLight", $$navbarItemHighlightTextColor: "$colors$primaryLightContrast", $$navbarItemHighlightSolidBackgroundColor: "$colors$primary", $$navbarItemHighlightSolidTextColor: "$colors$primarySolidContrast" }, neutral: { $$navbarItemActiveColor: "$colors$neutral", $$navbarItemHighlightBackgroundColor: "$colors$neutralLight", $$navbarItemHighlightTextColor: "$colors$text", $$navbarItemHighlightSolidBackgroundColor: "$colors$neutral", $$navbarItemHighlightSolidTextColor: "$colors$neutralSolidContrast" }, primary: { $$navbarItemActiveColor: "$colors$primary", $$navbarItemHighlightBackgroundColor: "$colors$primaryLight", $$navbarItemHighlightTextColor: "$colors$primaryLightContrast", $$navbarItemHighlightSolidBackgroundColor: "$colors$primary", $$navbarItemHighlightSolidTextColor: "$colors$primarySolidContrast" }, secondary: { $$navbarItemActiveColor: "$colors$secondary", $$navbarItemHighlightBackgroundColor: "$colors$secondaryLight", $$navbarItemHighlightTextColor: "$colors$secondaryLightContrast", $$navbarItemHighlightSolidBackgroundColor: "$colors$secondary", $$navbarItemHighlightSolidTextColor: "$colors$secondarySolidContrast" }, success: { $$navbarItemActiveColor: "$colors$success", $$navbarItemHighlightBackgroundColor: "$colors$successLight", $$navbarItemHighlightTextColor: "$colors$successLightContrast", $$navbarItemHighlightSolidBackgroundColor: "$colors$success", $$navbarItemHighlightSolidTextColor: "$colors$successSolidContrast" }, warning: { $$navbarItemActiveColor: "$colors$warning", $$navbarItemHighlightBackgroundColor: "$colors$warningLight", $$navbarItemHighlightTextColor: "$colors$warningLightContrast", $$navbarItemHighlightSolidBackgroundColor: "$colors$warning", $$navbarItemHighlightSolidTextColor: "$colors$warningSolidContrast" }, error: { $$navbarItemActiveColor: "$colors$error", $$navbarItemHighlightBackgroundColor: "$colors$errorLight", $$navbarItemHighlightTextColor: "$colors$errorLightContrast", $$navbarItemHighlightSolidBackgroundColor: "$colors$error", $$navbarItemHighlightSolidTextColor: "$colors$errorSolidContrast" } };
var StyledBaseNavbarItem = styled("li", { mb: 0, display: "flex", alignItems: "center", listStyleType: "none", lineHeight: "inherit" });
var StyledBaseNavbarList = styled("ul", { m: 0, listStyle: "none", lineHeight: "$xs", li: { mb: 0 } });
var StyledNavbarCollapseItem = styled(StyledBaseNavbarItem, { opacity: 0, paddingBottom: "$6", fontSize: "$lg", lineHeight: "$lg", fontWeight: "$normal", transformOrigin: "top", variants: { activeColor: o13, isActive: { true: { color: "$$navbarItemActiveColor", fontWeight: "$semibold" } }, disableAnimation: { true: { transition: "none" } } }, defaultVariants: { activeColor: "default" } });
var StyledNavbarCollapseWrapper = styled(StyledBaseNavbarList, { py: "$8", px: "$$navbarPadding", overflowY: "scroll", maxHeight: "100%" });
var StyledNavbarCollapse = styled("div", { $$navbarListColor: "$colors$text", $$navbarListBackgroundColor: "$colors$background", $$navbarListBlurBackgroundColor: "$colors$backgroundAlpha", $$navbarListBlur: "16px", position: "absolute", top: 0, left: 0, right: 0, background: "$$navbarListBackgroundColor", width: "100%", height: "0px", zIndex: "$4", boxSizing: "border-box", overflow: "hidden", variants: { isOpen: { true: { top: "$$navbarHeight", pb: "$$navbarHeight", height: "100vh" } }, disableBlur: { false: { "@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none))": { bg: "$$navbarListBlurBackgroundColor", backdropFilter: "saturate(180%) blur($$navbarListBlur)", "@media screen and (-webkit-min-device-pixel-ratio:0)": { [`& ${StyledNavbarCollapseWrapper}`]: { bg: "$$navbarListBlurBackgroundColor", backdropFilter: "saturate(180%) blur($$navbarListBlur)" } } } } }, disableAnimation: { true: { [`& ${StyledNavbarCollapseItem}`]: { transition: "none" } } } }, defaultVariants: { disableBlur: "false" } }, cssHideShowIn);
var StyledNavbarToggleIconContainer = styled("div", { dflex: "center", flexDirection: "column", pointerEvents: "none", size: "22px", "& .line": { height: "1px", width: "100%", backgroundColor: "$$navbarTextColor", transition: "transform 0.3s ease", "&.top": { transform: "translateY(-4px) rotate(0deg)" }, "&.bottom": { transform: "translateY(4px) rotate(0deg)" } }, variants: { isExpanded: { true: { "& .line": { "&.top": { transform: "translateY(1px) rotate(45deg)" }, "&.bottom": { transform: "translateY(0px) rotate(-45deg)" } } } } } });
var StyledNavbarToggle = styled("button", { appearance: "none", background: "transparent", border: "none", cursor: "pointer", p: "$2", transition: "box-shadow 0.25s ease 0s, opacity 0.25s ease 0s", variants: { isPressed: { true: { opacity: 0.7 } } } }, cssHideShowIn, cssFocusVisible);
var StyledNavbarBrand = styled("span", { display: "flex", flexWrap: "nowrap", flexDirection: "row", justifyContent: "flex-start", bg: "transparent", alignItems: "center", textDecoration: "none", fontSize: "$base", whiteSpace: "nowrap", boxSizing: "border-box" }, cssHideShowIn);
var StyledNavbarItem = styled(StyledBaseNavbarItem, { $$navbarItemFontSize: "inherit", $$navbarItemFontWeight: "$fontWeights$normal", fontSize: "$$navbarItemFontSize", fontWeight: "$$navbarItemFontWeight", position: "relative", "> *": { zIndex: "$2", fontSize: "inherit !important", fontWeight: "inherit !important" }, ":first-child": { boxSizing: "content-box" }, "&:before": { opacity: 0, zIndex: "$1", content: '""', display: "block", position: "absolute", top: 0, left: 0, right: 0, bottom: 0, borderRadius: "$sm" }, "&:after": { opacity: 0, zIndex: "$1", content: '""', display: "block", position: "absolute", left: "0", right: "0", bottom: "0", height: "$$navbarItemUnderlineHeight", borderRadius: "0px", background: "$$navbarItemActiveColor" }, variants: { activeColor: o13, isActive: { true: { color: "$$navbarItemActiveColor", $$navbarItemFontWeight: "$fontWeights$semibold" } }, variant: { default: {}, underline: { color: "inherit", height: "100%" }, "underline-rounded": { color: "inherit", height: "100%" }, highlight: {}, "highlight-solid": {}, "highlight-rounded": {}, "highlight-solid-rounded": {} }, underlineHeight: { light: { $$navbarItemUnderlineHeight: "2px" }, normal: { $$navbarItemUnderlineHeight: "4px" }, bold: { $$navbarItemUnderlineHeight: "6px" }, extrabold: { $$navbarItemUnderlineHeight: "8px" }, black: { $$navbarItemUnderlineHeight: "10px" } }, isDisabled: { true: { opacity: 0.5, cursor: "not-allowed" } } }, compoundVariants: [{ isActive: true, variant: "underline", css: { color: "inherit", "&:after": { opacity: 1 } } }, { isActive: true, variant: "underline-rounded", css: { color: "inherit", "&:after": { opacity: 1, borderRadius: "calc($$navbarItemUnderlineHeight / 2)" } } }, { isActive: true, variant: "highlight", css: { color: "$$navbarItemHighlightTextColor", "*:first-child": { color: "inherit" }, "&:before": { opacity: 1, background: "$$navbarItemHighlightBackgroundColor" } } }, { isActive: true, variant: "highlight-solid", css: { color: "$$navbarItemHighlightSolidTextColor", "*:first-child": { color: "inherit" }, "&:before": { opacity: 1, background: "$$navbarItemHighlightSolidBackgroundColor" } } }, { isActive: true, variant: "highlight-rounded", css: { color: "$$navbarItemHighlightTextColor", "*:first-child": { color: "inherit" }, "&:before": { opacity: 1, background: "$$navbarItemHighlightBackgroundColor" } } }, { isActive: true, variant: "highlight-solid-rounded", css: { color: "$$navbarItemHighlightSolidTextColor", "*:first-child": { color: "inherit" }, "&:before": { opacity: 1, background: "$$navbarItemHighlightSolidBackgroundColor" } } }], defaultVariants: { variant: "default", activeColor: "default", underlineHeight: "normal" } }, cssHideShowIn);
var StyledCursorHighlight = styled(StyledBaseNavbarItem, { position: "absolute", top: "calc(50% - $$navbarItemMaxHeight * 0.5)", height: "$$navbarItemMaxHeight", background: "$neutralLight", borderRadius: "$sm", transition: "width 0.2s ease 0s, transform 0.2s ease 0s, opacity 0.2s ease 0s", variants: { color: o13, isHighlightVariant: { true: { background: "$$navbarItemHighlightBackgroundColor" } }, isHighlightSolidVariant: { true: { background: "$$navbarItemHighlightSolidBackgroundColor" } }, isRounded: { true: { borderRadius: "$pill" } } } });
var StyledNavbarContent = styled(StyledBaseNavbarList, { $$navbarContentItemGap: "$space$10", $$navbarContentItemHorizontalPadding: "$space$10", d: "flex", height: "100%", flexWrap: "nowrap", alignItems: "center", gap: "$$navbarContentItemGap", color: "inherit", variants: { enableCursorHighlight: { true: { zIndex: "$2", position: "relative" } } } }, cssHideShowIn);
var StyledNavbarContainer = styled("div", { width: "100%", height: "$$navbarHeight", minHeight: "$$navbarHeight", display: "flex", flexWrap: "nowrap", justifyContent: "space-between", alignItems: "center", position: "relative", boxSizing: "border-box", color: "inherit", px: "$$navbarPadding", bg: "$$navbarBackgroundColor", maxW: "$$navbarContainerMaxWidth", zIndex: "$5", "@xsMax": { $$navbarPadding: "$space$6", $$navbarFloatingMargin: "$space$6" } });
var StyledNavbar = styled("nav", { width: "100%", dflex: "center", position: "relative", height: "auto", color: "$$navbarTextColor", zIndex: "$2", variants: { variant: { static: { position: "static" }, sticky: { top: 0, right: 0, left: 0, position: "sticky" }, floating: { top: 0, right: 0, left: 0, position: "sticky", "@safari": { top: "-5px" }, [`& ${StyledNavbarContainer}`]: { mt: "calc($$navbarFloatingMargin * 0.5)", mx: "$$navbarFloatingMargin", borderRadius: "$$navbarBorderRadius" }, [`& ${StyledNavbarCollapseWrapper}`]: { px: "calc($$navbarFloatingMargin + $space$4)" } } }, maxWidth: { xs: { $$navbarContainerMaxWidth: "$breakpoints$xs" }, sm: { $$navbarContainerMaxWidth: "$breakpoints$sm" }, md: { $$navbarContainerMaxWidth: "$breakpoints$md" }, lg: { $$navbarContainerMaxWidth: "$breakpoints$lg" }, xl: { $$navbarContainerMaxWidth: "$breakpoints$xl" }, fluid: { $$navbarContainerMaxWidth: "100%" } }, isBordered: { true: { [`& ${StyledNavbarContainer}`]: { borderBottom: "$$navbarBorderWeight solid $$navbarBorderColor" } } }, isCompact: { true: { $$navbarHeight: "$$navbarCompactHeight", $$navbarItemMaxHeight: "$$navbarCompactItemMaxHeight", $$navbarBorderRadius: "$radii$md" } }, disableShadow: { false: { boxShadow: "$$navbarShadow" } }, disableBlur: { false: { "@supports ((-webkit-backdrop-filter: none) or (backdrop-filter: none))": { [`& ${StyledNavbarContainer}`]: { bg: "$$navbarBlurBackgroundColor", backdropFilter: "saturate(180%) blur($$navbarBlur)" } } } } }, compoundVariants: [{ isBordered: true, variant: "floating", css: { [`& ${StyledNavbarContainer}`]: { border: "$$navbarBorderWeight solid $$navbarBorderColor" } } }, { variant: "floating", disableShadow: false, css: { boxShadow: "none", [`& ${StyledNavbarContainer}`]: { boxShadow: "$$navbarShadow" } } }], defaultVariants: { variant: "static", maxWidth: "lg", isBordered: false, disableShadow: false, disableBlur: false } });

// node_modules/@nextui-org/react/esm/navbar/navbar-brand.js
var e14 = forwardRef((r14, t9) => {
  const m13 = useDOMRef(t9), { children: e15, className: n15, ...l13 } = r14;
  return o(StyledNavbarBrand, { ref: m13, className: clsx_default("nextui-navbar-brand", n15), ...l13, children: e15 });
});
__DEV__ && (e14.displayName = "NextUI.NavbarBrand"), e14.toString = () => ".nextui-navbar-brand";
var navbar_brand_default = e14;

// node_modules/@nextui-org/react/esm/navbar/navbar-content.js
init_compat_module();

// node_modules/@nextui-org/react/esm/navbar/navbar-content-context.js
var [NavbarContentProvider, useNavbarContentContext] = createContext({ strict: false, name: "NavbarContentContext" });

// node_modules/@nextui-org/react/esm/navbar/use-navbar-content.js
init_compat_module();
function useNavbarContent(l13 = {}) {
  const { gap: u9 = "$10", variant: r14 = "default", activeColor: o14 = "default", underlineHeight: a13 = "normal", enableCursorHighlight: g4 = false, isCursorHighlightRounded: d11 = false, css: s9, style: c15, className: h4, ...v4 } = l13, [C4, p7] = h(null), [x8, m13] = h(null), [f5, R3] = h(null), [H2, B2] = h(null), [w3, b6] = h(true), y3 = _(null), I2 = _(null), $2 = null == r14 || null == r14.toString ? void 0 : r14.toString(), D3 = null == $2.includes ? void 0 : $2.includes("highlight"), N5 = null == $2.includes ? void 0 : $2.includes("highlight-solid"), P3 = F(() => d11 || (null == $2.includes ? void 0 : $2.includes("rounded")), [d11, $2]), S2 = F(() => D3 && "$10" === u9 ? "0px" : u9, [D3, u9]), z3 = F(() => w3 ? "0ms" : "200ms", [w3]), V2 = F(() => f5 || H2 ? 1 : 0, [H2, f5]), A3 = F(() => C4 ? D3 ? `${C4.width}px` : `calc(${C4.width}px + var(--nextui--navbarContentItemHorizontalPadding))` : "0px", [$2, C4]), E2 = F(() => C4 && x8 && `translate(${C4.left - x8.left}px)`, [C4, x8]), j2 = F(() => D3 ? "0px" : "calc(var(--nextui--navbarContentItemHorizontalPadding) * 0.5 * -1)", [D3]), k6 = F(() => $3ef42575df84b30b$export$9d1611c77c2fe9282({ "--nextui--transitionDuration": z3, "--nextui--opacity": V2, "--nextui--width": A3, "--nextui--transform": E2, "--nextui--left": j2 }, c15 || {}), [z3, j2, V2, A3, E2, c15]), q3 = F(() => C4 && x8 && g4 ? { transitionDuration: "var(--nextui--transitionDuration)", opacity: "var(--nextui--opacity)", width: "var(--nextui--width)", transform: "var(--nextui--transform)", left: "var(--nextui--left)" } : {}, [C4, x8, g4]);
  return { css: s9, gap: S2, variant: r14, activeColor: o14, activeItem: H2, updateActiveItem: (t9) => {
    var i13;
    B2(t9), R3(t9), p7(null == t9 || null == t9.getBoundingClientRect ? void 0 : t9.getBoundingClientRect()), m13(null == (i13 = I2.current) || null == i13.getBoundingClientRect ? void 0 : i13.getBoundingClientRect());
  }, highlightedItem: f5, underlineHeight: a13, cursorHighlightRef: y3, isRounded: P3, isHighlightVariant: D3, isHighlightSolidVariant: N5, isCursorHighlightRounded: d11, enableCursorHighlight: g4, cursorHighlightCss: q3, repositionHighlight: (t9, i13) => {
    var n15, e15;
    (null == t9 ? void 0 : t9.target) instanceof Element && (p7(null == (n15 = t9.target) || null == n15.getBoundingClientRect ? void 0 : n15.getBoundingClientRect()), m13(null == (e15 = I2.current) || null == e15.getBoundingClientRect ? void 0 : e15.getBoundingClientRect()), b6(!f5), R3(i13));
  }, resetHighlight: () => {
    H2 ? (R3(H2), p7(null == H2 || null == H2.getBoundingClientRect ? void 0 : H2.getBoundingClientRect())) : R3(null);
  }, wrapperRef: I2, className: h4, style: k6, otherProps: v4 };
}

// node_modules/@nextui-org/react/esm/navbar/navbar-content.js
var g3 = forwardRef((r14, t9) => {
  const { children: e15, ...g4 } = r14, u9 = useNavbarContent(g4), p7 = useDOMRef(t9);
  return o(NavbarContentProvider, { value: u9, children: o(StyledNavbarContent, { ref: mergeRefs(u9.wrapperRef, p7), className: clsx_default("nextui-navbar-content", u9.className), css: { gap: u9.gap, ...u9.css }, enableCursorHighlight: u9.enableCursorHighlight, style: u9.style, onMouseLeave: u9.resetHighlight, ...u9.otherProps, children: [u9.enableCursorHighlight && o(StyledCursorHighlight, { ref: u9.cursorHighlightRef, className: "nextui-navbar-cursor-highlight", color: u9.activeColor, css: u9.cursorHighlightCss, isHighlightSolidVariant: u9.isHighlightSolidVariant, isHighlightVariant: u9.isHighlightVariant, isRounded: u9.isRounded }), e15] }) });
});
__DEV__ && (g3.displayName = "NextUI.NavbarContent"), g3.toString = () => ".nextui-navbar-content";
var navbar_content_default = g3;

// node_modules/@nextui-org/react/esm/navbar/navbar-item.js
init_compat_module();
var v3 = forwardRef((o14, h4) => {
  var v4;
  const { id: p7, css: b6, children: f5, variant: $2, activeColor: H2, isActive: C4, underlineHeight: x8, onMouseEnter: I2, onMouseLeave: y3, isDisabled: M2, className: N5, ...A3 } = o14, j2 = useNavbarContentContext(), z3 = useDOMRef(h4), E2 = $2 || (null == j2 ? void 0 : j2.variant), P3 = null == E2 ? void 0 : E2.toString(), S2 = null == P3.includes ? void 0 : P3.includes("highlight"), D3 = null == P3.includes ? void 0 : P3.includes("highlight-solid"), { hoverProps: L2, isHovered: T3 } = $6179b936705e76d3$export$ae780daf29e6d456({ isDisabled: M2 }), W2 = $bdb11010cef70236$export$f680877a34711e372(p7);
  p(() => {
    z3.current && j2 && null != j2 && j2.enableCursorHighlight && C4 && S2 && j2.updateActiveItem(null == z3 ? void 0 : z3.current);
  }, [z3, S2, C4]);
  const F3 = F(() => {
    var i13;
    return !!j2 && (null == (i13 = j2.highlightedItem) ? void 0 : i13.id) === W2;
  }, [W2, j2]), G3 = F(() => {
    var i13;
    return !(F3 || null == j2 || !j2.enableCursorHighlight || !D3 || W2 !== (null == j2 || null == (i13 = j2.activeItem) ? void 0 : i13.id));
  }, [j2, W2, F3, D3]), R3 = F(() => {
    const i13 = [], e15 = "string" == typeof f5, t9 = null == P3.includes ? void 0 : P3.includes("highlight-solid");
    j2 || i13.push({ $$navbarContentItemGap: "$space$8" }), S2 && (i13.push({ dflex: "center", height: "$$navbarItemMaxHeight" }), e15 ? i13.push({ px: "calc($$navbarContentItemHorizontalPadding * 0.5)" }) : i13.push({ "*:first-child": { size: "100%", px: "calc($$navbarContentItemHorizontalPadding * 0.5)" } })), S2 && null != P3.includes && P3.includes("rounded") && !j2.enableCursorHighlight && i13.push({ "&:before": { borderRadius: "$pill" } }), j2.enableCursorHighlight && i13.push({ "&:before": { display: "none" } }), C4 && !S2 && i13.push({ $$navbarItemFontWeight: "$fontWeights$semibold" }), T3 && j2.enableCursorHighlight && (S2 && i13.push({ color: "$$navbarItemHighlightTextColor" }), t9 && i13.push({ color: "$$navbarItemHighlightSolidTextColor" })), G3 && i13.push({ color: "$$navbarItemActiveColor" });
    return { ...arrayToObject(i13), ...b6 };
  }, [f5, b6, j2, P3, G3, C4, T3, S2]), U2 = "string" == typeof f5 ? o(text_default2, { children: f5 }) : Cn.Children.only(f5), k6 = Cn.cloneElement(U2, { id: (null == (v4 = U2.props) ? void 0 : v4.id) || W2, onMouseEnter: (i13) => {
    var e15;
    if (null == j2 || !j2.repositionHighlight)
      return void (null == I2 || I2(i13));
    (null == (e15 = i13.target) ? void 0 : e15.id) === W2 && j2.repositionHighlight(i13, null == z3 ? void 0 : z3.current), null == I2 || I2(i13);
  }, onMouseLeave: (i13) => {
    null != j2 && j2.resetHighlight && j2.enableCursorHighlight && S2 ? (j2.resetHighlight(), null == y3 || y3(i13)) : null == y3 || y3(i13);
  } });
  return o(StyledNavbarItem, { ref: z3, activeColor: H2 || (null == j2 ? void 0 : j2.activeColor), className: clsx_default("nextui-navbar-item", N5), css: R3, id: W2, isActive: C4, underlineHeight: x8 || (null == j2 ? void 0 : j2.underlineHeight), variant: E2, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(L2, A3), children: k6 });
});
__DEV__ && (v3.displayName = "NextUI.NavbarItem"), v3.toString = () => ".nextui-navbar-item";
var navbar_item_default = v3;

// node_modules/@nextui-org/react/esm/navbar/navbar-link.js
init_compat_module();
var m12 = forwardRef((i13, r14) => {
  const o14 = useDOMRef(r14), { css: m13, children: c15, isActive: d11, color: h4, activeColor: u9, underlineHeight: f5, itemCss: p7, itemClassName: v4, isDisabled: x8, hideIn: N5, showIn: b6, variant: C4, className: I2, ...g4 } = i13, k6 = F(() => h4 || null != m13 && m13.$$linkColor ? { ...m13 } : { color: "inherit", height: "100%", width: "fit-content", ...m13 }, [h4, m13]);
  return o(navbar_item_default, { activeColor: u9, className: v4, css: p7, hideIn: N5, isActive: d11, isDisabled: x8, showIn: b6, underlineHeight: f5, variant: C4, children: o(link_default2, { ref: o14, className: clsx_default("nextui-navbar-link", I2), color: h4, css: k6, ...g4, children: c15 }) });
});
__DEV__ && (m12.displayName = "NextUI.NavbarLink"), m12.toString = () => ".nextui-navbar-link";
var navbar_link_default = m12;

// node_modules/@nextui-org/react/esm/navbar/navbar-toggle.js
init_compat_module();

// node_modules/@nextui-org/react/esm/navbar/navbar-context.js
var [NavbarProvider, useNavbarContext] = createContext({ strict: true, name: "NavbarContext", errorMessage: "useNavbarContext: `context` is undefined. Seems you forgot to wrap all navbar components within `<Navbar />`" });

// node_modules/@nextui-org/react/esm/navbar/navbar-toggle-icon.js
init_compat_module();
var i12 = (a13) => {
  const { isExpanded: t9 = false, className: i13, ...n15 } = a13;
  return o(StyledNavbarToggleIconContainer, { "aria-hidden": true, className: clsx_default("nextui-navbar-toggle-icon", i13), isExpanded: t9, tabIndex: -1, ...n15, children: [o("span", { className: "line top" }), o("span", { className: "line bottom" })] });
};
__DEV__ && (i12.displayName = "NextUI.NavbarToggleIcon"), i12.toString = () => ".nextui-navbar-toggle-icon";
var navbar_toggle_icon_default = i12;

// node_modules/@nextui-org/react/esm/navbar/navbar-toggle.js
var d10 = forwardRef((r14, i13) => {
  const { children: n15, className: d11, autoFocus: b6, onChange: x8, as: v4, css: y3, ...N5 } = r14, { parentRef: h4, setIsCollapseOpen: F3 } = useNavbarContext(), [, P3] = use_body_scroll_default2(h4, { scrollLayer: true }), C4 = useDOMRef(i13), S2 = $3017fa7ffdddec74$export$8042c6c013fd5226({ ...r14, onChange: (r15) => {
    F3(r15), null == x8 || x8(r15), P3(r15);
  } }), { buttonProps: j2, isPressed: I2 } = $55f54f7887471b58$export$51e84d46ca0bc451(r14, S2, C4), { isFocusVisible: V2, focusProps: E2 } = $f7dceffc5ad7768b$export$4e328f61c538687f({ autoFocus: b6 }), L2 = F(() => n15 || o(navbar_toggle_icon_default, { isExpanded: S2.isSelected }), [n15, S2.isSelected]);
  return o(StyledNavbarToggle, { ref: C4, as: v4, className: clsx_default("nextui-navbar-toggle", d11), css: y3, isFocusVisible: V2, isPressed: I2, ...$3ef42575df84b30b$export$9d1611c77c2fe9282(j2, E2, N5), children: L2 });
});
__DEV__ && (d10.displayName = "NextUI.NavbarToggle"), d10.toString = () => ".nextui-navbar-toggle";
var navbar_toggle_default = d10;

// node_modules/@nextui-org/react/esm/navbar/navbar-collapse.js
init_compat_module();

// node_modules/@nextui-org/react/esm/navbar/navbar-collapse-context.js
var [NavbarCollapseProvider, useNavbarCollapseContext] = createContext({ strict: false, name: "NavbarCollapseContext" });

// node_modules/@nextui-org/react/esm/navbar/use-navbar-collapse.js
init_compat_module();

// node_modules/@nextui-org/react/esm/navbar/navbar-collapse-item.js
init_compat_module();
var c14 = forwardRef((i13, e15) => {
  var l13;
  const { children: c15, className: x8, transitionDelay: v4, transitionTime: d11, transitionMatrix: f5, disableAnimation: y3, style: b6, css: T3, ...I2 } = i13, O3 = useNavbarContext(), M2 = useNavbarCollapseContext(), h4 = useDOMRef(e15), { isVisible: C4, setEntry: D3 } = use_intersection_observer_default2(h4, { root: null == O3 || null == (l13 = O3.parentRef) ? void 0 : l13.current, freezeOnceVisible: O3.isCollapseOpen });
  p(() => {
    !O3.isCollapseOpen && C4 && D3(null);
  }, [C4, O3.isCollapseOpen]);
  const N5 = F(() => {
    var i14;
    return null != M2 && M2.items ? null == (i14 = M2.items) ? void 0 : i14.findIndex((i15) => {
      var t9;
      return (null == i15 || null == (t9 = i15.props) ? void 0 : t9.children) === c15;
    }) : -1;
  }, [null == M2 ? void 0 : M2.items]), $2 = F(() => {
    var i14, t9, n15;
    return { transitionDelay: null != (i14 = null != v4 ? v4 : null == M2 ? void 0 : M2.transitionDelay) ? i14 : 0, transitionTime: null != (t9 = null != d11 ? d11 : null == M2 ? void 0 : M2.transitionTime) ? t9 : 0, transitionMatrix: null != (n15 = null != f5 ? f5 : null == M2 ? void 0 : M2.transitionMatrix) ? n15 : { in: "matrix(1, 0, 0, 1, 0, 0)", out: "matrix(0.97, 0, 0, 1, 0, 20)" } };
  }, [v4, d11, f5, M2.transitionMatrix, M2.transitionDelay, M2.transitionTime]), z3 = F(() => M2.items && N5 > -1 ? N5 / M2.items.length * 0.5 * 1e3 + $2.transitionDelay : 0.1, [N5, $2.transitionDelay, null == M2 ? void 0 : M2.items]), S2 = F(() => {
    const i14 = C4 && !M2.hasScrolled ? z3 : 0;
    return { "--nextui--collapseItemOpacity": C4 ? 1 : 0, "--nextui--collapseItemTransform": C4 ? $2.transitionMatrix.in : $2.transitionMatrix.out, "--netxui--collapseItemTransition": !y3 && O3.isCollapseOpen ? `opacity ${$2.transitionTime}ms cubic-bezier(0.5, 0, 0, 1) ${i14}ms, transform ${$2.transitionTime}ms cubic-bezier(0.5, 0, 0, 1) ${i14}ms` : "none" };
  }, [N5, C4, y3, z3, $2.transitionMatrix, $2.transitionTime, O3.isCollapseOpen, M2.hasScrolled]);
  return o(StyledNavbarCollapseItem, { ref: h4, className: clsx_default("nextui-navbar-collapse-item", x8), css: { opacity: "var(--nextui--collapseItemOpacity)", transition: "var(--netxui--collapseItemTransition)", transform: "var(--nextui--collapseItemTransform)", ...T3 }, disableAnimation: y3, style: { ...b6, ...S2 }, ...I2, children: c15 });
});
__DEV__ && (c14.displayName = "NextUI.NavbarCollapseItem"), c14.toString = () => ".nextui-navbar-collapse-item";
var navbar_collapse_item_default = c14;

// node_modules/@nextui-org/react/esm/navbar/use-navbar-collapse.js
function useNavbarCollapse(c15 = {}) {
  var u9;
  const { css: m13, children: p7, ref: f5, transitionDelay: v4 = 0, transitionTime: d11 = 350, transitionMatrix: h4 = { in: "matrix(1, 0, 0, 1, 0, 0)", out: "matrix(0.97, 0, 0, 1, 0, 20)" }, className: x8, ...b6 } = c15, [C4, R3] = h(false), T3 = useNavbarContext(), y3 = useDOMRef(f5), [, O3] = pickChild(p7, navbar_collapse_item_default), [, L2] = use_body_scroll_default2(null, { scrollLayer: true });
  p(() => {
    var r14, t9;
    T3.isCollapseOpen ? L2(true) : (y3.current && (null == (t9 = y3.current) || null == t9.scrollTo || t9.scrollTo({ top: 0 })), R3(false), L2(false));
    const e15 = () => {
      var r15;
      y3.current && (null == (r15 = y3.current) ? void 0 : r15.scrollTop) > 0 && !C4 && R3(true);
    };
    return null == (r14 = y3.current) || r14.addEventListener("scroll", e15), () => {
      var r15;
      null == (r15 = y3.current) || r15.removeEventListener("scroll", e15);
    };
  }, [T3.isCollapseOpen]);
  const N5 = F(() => {
    const r14 = [];
    var t9;
    T3.parentRef && T3.parentRef.current && r14.push({ maxHeight: null == (t9 = T3.parentRef.current) ? void 0 : t9.clientHeight });
    return { ...arrayToObject(r14), ...m13 };
  }, [null == (u9 = T3.parentRef) ? void 0 : u9.current, m13]);
  return { css: m13, domRef: y3, children: p7, items: O3, collpaseCss: N5, isOpen: T3.isCollapseOpen, hasScrolled: C4, transitionDelay: v4, transitionTime: d11, transitionMatrix: h4, className: x8, otherProps: b6 };
}

// node_modules/@nextui-org/react/esm/navbar/navbar-collapse.js
var n14 = forwardRef((r14, e15) => {
  const a13 = useNavbarCollapse({ ref: e15, ...r14 });
  return o(NavbarCollapseProvider, { value: a13, children: o(StyledNavbarCollapse, { className: clsx_default("nextui-navbar-collapse", a13.className), css: a13.collpaseCss, isOpen: a13.isOpen, ...a13.otherProps, children: o(StyledNavbarCollapseWrapper, { ref: a13.domRef, className: "nextui-navbar-collapse-wrapper", children: a13.children }) }) });
});
__DEV__ && (n14.displayName = "NextUI.NavbarCollapse"), n14.toString = () => ".nextui-navbar-collapse";
var navbar_collapse_default = n14;

// node_modules/@nextui-org/react/esm/navbar/navbar.js
init_compat_module();

// node_modules/@nextui-org/react/esm/navbar/use-navbar.js
init_compat_module();
function useNavbar(s9 = {}) {
  const { css: i13, containerCss: $2, parentRef: c15, isBordered: d11, variant: u9 = "static", height: b6 = "76px", borderWeight: g4 = "light", shouldHideOnScroll: p7 = false, disableScrollHandler: v4 = false, onScrollPositionChange: h4, disableBlur: m13 = false, className: f5, ...C4 } = s9, [k6, B2] = h(false), [x8, H2] = h(false), { theme: y3 } = use_theme_default2(), P3 = F(() => d11 ? `$borderWeights$${g4}` : "0px", [d11, g4]), S2 = F(() => m13 || x8, [m13, x8]), W2 = F(() => "number" == typeof b6 ? `${b6}px` : b6, [b6]);
  globalCss({ ":root": { $$navbarHeight: W2, $$navbarCompactHeight: "calc($$navbarHeight * 0.7)", $$navbarTextColor: "$colors$text", $$navbarBackgroundColor: "$colors$background", $$navbarBlurBackgroundColor: "$colors$backgroundAlpha", $$navbarItemMaxHeight: "calc($$navbarHeight * 0.5)", $$navbarCompactItemMaxHeight: "calc($$navbarHeight * 0.5)", $$navbarBorderColor: "$colors$border", $$navbarBorderRadius: "$radii$lg", $$navbarPadding: "$space$10", $$navbarFloatingMargin: "$space$10", $$navbarContainerMaxWidth: "$breakpoints$lg", $$navbarShadow: "$shadows$md", $$navbarBorderWeight: P3, $$navbarBlur: "10px" } })(), use_scroll_position_default2({ elementRef: c15, enabled: p7 || !v4, callback: ({ prevPos: r14, currPos: a13 }) => {
    null == h4 || h4(a13.y), p7 && B2((o14) => {
      const e15 = a13.y > r14.y;
      return e15 !== o14 ? e15 : o14;
    });
  } });
  const M2 = F(() => {
    const r14 = [];
    var a13, l13, n15, t9, s10, $3;
    "floating" === u9 && r14.push({ bg: `linear-gradient(180deg, ${addColorAlpha(null == y3 || null == (a13 = y3.colors) || null == (l13 = a13.background) ? void 0 : l13.value, 0.95)} 44%, ${addColorAlpha(null == y3 || null == (n15 = y3.colors) || null == (t9 = n15.background) ? void 0 : t9.value, 0.46)} 73%, ${addColorAlpha(null == y3 || null == (s10 = y3.colors) || null == ($3 = s10.background) ? void 0 : $3.value, 0)})` });
    p7 && r14.push({ position: "sticky", top: 0, right: 0, left: 0, transform: k6 ? "translateY(-100%)" : "translateY(0)", transition: "transform 400ms ease" });
    return { ...arrayToObject(r14), ...i13 };
  }, [i13, null == y3 ? void 0 : y3.colors, u9, p7, k6]);
  return { css: i13, variant: u9, sticky: k6, isBordered: d11, containerCss: $2, navbarCss: M2, parentRef: c15, borderWeight: g4, shouldHideOnScroll: p7, disableBlur: S2, isCollapseOpen: x8, setIsCollapseOpen: H2, className: f5, otherProps: C4 };
}

// node_modules/@nextui-org/react/esm/navbar/navbar.js
var f4 = forwardRef((r14, s9) => {
  const { children: e15, ...f5 } = r14, d11 = useDOMRef(s9), v4 = useNavbar(f5), [b6, x8] = pickChild(e15, navbar_collapse_default);
  return o(NavbarProvider, { value: v4, children: o(StyledNavbar, { ref: d11, className: clsx_default("nextui-navbar", v4.className), css: v4.navbarCss, disableBlur: v4.disableBlur, isBordered: v4.isBordered, variant: v4.variant, ...v4.otherProps, children: [o(StyledNavbarContainer, { className: "nextui-navbar-container", css: v4.containerCss, children: b6 }), x8] }) });
});
__DEV__ && (f4.displayName = "NextUI.Navbar"), f4.toString = () => ".nextui-navbar";
var navbar_default = f4;

// node_modules/@nextui-org/react/esm/navbar/index.js
navbar_default.Brand = navbar_brand_default, navbar_default.Content = navbar_content_default, navbar_default.Item = navbar_item_default, navbar_default.Link = navbar_link_default, navbar_default.Toggle = navbar_toggle_default, navbar_default.Collapse = navbar_collapse_default, navbar_default.CollapseItem = navbar_collapse_item_default;
var navbar_default2 = navbar_default;
export {
  avatar_default2 as Avatar,
  backdrop_default2 as Backdrop,
  badge_default2 as Badge,
  button_default2 as Button,
  card_default2 as Card,
  checkbox_default2 as Checkbox,
  code_default2 as Code,
  col_default2 as Col,
  collapse_default2 as Collapse,
  container_default2 as Container,
  css_baseline_default as CssBaseline,
  divider_default2 as Divider,
  drip_default as Drip,
  dropdown_default2 as Dropdown,
  grid_default2 as Grid,
  image_default2 as Image,
  input_default2 as Input,
  KeyCode,
  KeyMod,
  link_default2 as Link,
  loading_default2 as Loading,
  modal_default2 as Modal,
  navbar_default2 as Navbar,
  theme_provider_default as NextUIProvider,
  pagination_default2 as Pagination,
  popover_default2 as Popover,
  progress_default2 as Progress,
  radio_default2 as Radio,
  row_default2 as Row,
  snippet_default2 as Snippet,
  spacer_default2 as Spacer,
  spinner_default as Spinner,
  StyledAvatar,
  StyledAvatarGroup,
  StyledAvatarGroupCount,
  StyledBackdrop,
  StyledBackdropContent,
  StyledBackdropLayer,
  StyledBadge,
  StyledBadgePoints,
  StyledBadgeRoot,
  StyledBaseNavbarItem,
  StyledBaseNavbarList,
  StyledButton,
  StyledButtonGroup,
  StyledButtonIcon,
  StyledCard,
  StyledCardBody,
  StyledCardFooter,
  StyledCardHeader,
  StyledCheckboxContainer,
  StyledCheckboxGroup,
  StyledCheckboxLabel,
  StyledCheckboxMask,
  StyledCheckboxText,
  StyledCode,
  StyledCol,
  StyledCollapse,
  StyledCollapseContent,
  StyledCollapseGroup,
  StyledCollapseIcon,
  StyledCollapseView,
  StyledContainer,
  StyledDivider,
  StyledDividerText,
  StyledDropdownItem,
  StyledDropdownItemContent,
  StyledDropdownItemContentWrapper,
  StyledDropdownItemDescription,
  StyledDropdownItemIconWrapper,
  StyledDropdownItemKbd,
  StyledDropdownMenu,
  StyledDropdownSection,
  StyledDropdownSectionTitle,
  StyledDropdownSectionWrapper,
  StyledGridContainer,
  StyledGridItem,
  StyledHelperText,
  StyledHelperTextContainer,
  StyledIconCheck,
  StyledIconCheckFirstLine,
  StyledIconCheckSecondLine,
  StyledImage,
  StyledImageContainer,
  StyledImageSkeleton,
  StyledInput,
  StyledInputBlockLabel,
  StyledInputClearButton,
  StyledInputContainer,
  StyledInputContent,
  StyledInputLabel,
  StyledInputMainContainer,
  StyledInputPlaceholder,
  StyledInputWrapper,
  StyledLink,
  StyledLinkIcon,
  StyledLoading,
  StyledLoadingContainer,
  StyledLoadingLabel,
  StyledModal,
  StyledModalBody,
  StyledModalCloseButton,
  StyledModalFooter,
  StyledModalHeader,
  StyledModalHideTab,
  StyledNavbar,
  StyledNavbarBrand,
  StyledNavbarCollapse,
  StyledNavbarCollapseItem,
  StyledNavbarCollapseWrapper,
  StyledNavbarContainer,
  StyledNavbarContent,
  StyledNavbarItem,
  StyledNavbarToggle,
  StyledNavbarToggleIconContainer,
  StyledPagination,
  StyledPaginationEllipsis,
  StyledPaginationHighlight,
  StyledPaginationIcon,
  StyledPaginationItem,
  StyledPaginationItemContent,
  StyledPopoverContent,
  StyledPre,
  StyledProgress,
  StyledProgressBar,
  StyledRadioContainer,
  StyledRadioDescription,
  StyledRadioGroup,
  StyledRadioGroupContainer,
  StyledRadioLabel,
  StyledRadioPoint,
  StyledRadioText,
  StyledRow,
  StyledSnippetCopyButton,
  StyledSnippetCopyButtonIcon,
  StyledSnippetPre,
  StyledSpacer,
  StyledSpinner,
  StyledSpinnerContainer,
  StyledSpinnerSpan,
  StyledSwitch,
  StyledSwitchCircle,
  StyledSwitchContainer,
  StyledSwitchInput,
  StyledTable,
  StyledTableCell,
  StyledTableHeaderCell,
  StyledTableRow,
  StyledText,
  StyledTooltip,
  StyledTooltipArrow,
  StyledTooltipContent,
  StyledTooltipTrigger,
  StyledUser,
  StyledUserDesc,
  StyledUserInfo,
  StyledUserName,
  switch_default2 as Switch,
  table_default2 as Table,
  text_default2 as Text,
  textarea_default2 as Textarea,
  tooltip_default2 as Tooltip,
  user_default2 as User,
  blue,
  blueDark,
  changeTheme,
  config,
  createTheme,
  css,
  cssFocusVisible,
  cssHideIn,
  cssHideShowIn,
  cssNoBlurriness,
  cssShowIn,
  cyan,
  cyanDark,
  theme as defaultTheme,
  excludedInputPropsForTextarea,
  extendedColors,
  extendedColorsNoGradient,
  extraColors,
  getCssText,
  getDocumentTheme,
  getTokenValue,
  globalCss,
  gray,
  grayDark,
  green,
  greenDark,
  keyframes,
  normalColors,
  normalLoaders,
  normalWeights,
  pink,
  pinkDark,
  purple,
  purpleDark,
  red,
  redDark,
  sharedFocus,
  sharedVisuallyHidden,
  simpleColors,
  config as stitchesConfig,
  styled,
  textTransforms,
  textWeights,
  theme,
  tuple,
  $f86e6c1ec7da6ebb$export$bc3384a35de93d66 as useAsyncList,
  use_body_scroll_default2 as useBodyScroll,
  use_click_anywhere_default2 as useClickAnywhere,
  use_click_away_default2 as useClickAway,
  use_clipboard_default2 as useClipboard,
  $325a3faab7a68acd$export$a16aca283550c30d as useCollator,
  use_current_state_default2 as useCurrentState,
  use_drip_default2 as useDrip,
  use_input_default2 as useInput,
  use_intersection_observer_default2 as useIntersectionObserver,
  use_keyboard_default2 as useKeyboard,
  use_modal_default as useModal,
  use_pagination_default as usePagination,
  use_portal_default2 as usePortal,
  use_real_shape_default2 as useRealShape,
  use_resize_default2 as useResize,
  use_ssr_default2 as useSSR,
  use_scroll_position_default2 as useScrollPosition,
  use_theme_default2 as useTheme,
  yellow,
  yellowDark
};
//# sourceMappingURL=@nextui-org_react.js.map
